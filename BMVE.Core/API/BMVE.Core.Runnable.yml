### YamlMime:ManagedReference
items:
- uid: BMVE.Core.Runnable
  commentId: T:BMVE.Core.Runnable
  id: Runnable
  parent: BMVE.Core
  children:
  - BMVE.Core.Runnable.Array_Add(System.Boolean[],System.Boolean)
  - BMVE.Core.Runnable.Array_Add(System.Byte[],System.Byte)
  - BMVE.Core.Runnable.Array_Add(System.Char[],System.Char)
  - BMVE.Core.Runnable.Array_Add(System.DateTime[],System.DateTime)
  - BMVE.Core.Runnable.Array_Add(System.Decimal[],System.Decimal)
  - BMVE.Core.Runnable.Array_Add(System.Double[],System.Double)
  - BMVE.Core.Runnable.Array_Add(System.Int16[],System.Int16)
  - BMVE.Core.Runnable.Array_Add(System.Int32[],System.Int32)
  - BMVE.Core.Runnable.Array_Add(System.Int64[],System.Int64)
  - BMVE.Core.Runnable.Array_Add(System.SByte[],System.SByte)
  - BMVE.Core.Runnable.Array_Add(System.Single[],System.Single)
  - BMVE.Core.Runnable.Array_Add(System.String[],System.String)
  - BMVE.Core.Runnable.Array_Add(System.UInt16[],System.UInt16)
  - BMVE.Core.Runnable.Array_Add(System.UInt32[],System.UInt32)
  - BMVE.Core.Runnable.Array_Add(System.UInt64[],System.UInt64)
  - BMVE.Core.Runnable.Array_Concat(System.Boolean[],System.Boolean[])
  - BMVE.Core.Runnable.Array_Concat(System.Byte[],System.Byte[])
  - BMVE.Core.Runnable.Array_Concat(System.Char[],System.Char[])
  - BMVE.Core.Runnable.Array_Concat(System.DateTime[],System.DateTime[])
  - BMVE.Core.Runnable.Array_Concat(System.Decimal[],System.Decimal[])
  - BMVE.Core.Runnable.Array_Concat(System.Double[],System.Double[])
  - BMVE.Core.Runnable.Array_Concat(System.Int16[],System.Int16[])
  - BMVE.Core.Runnable.Array_Concat(System.Int32[],System.Int32[])
  - BMVE.Core.Runnable.Array_Concat(System.Int64[],System.Int64[])
  - BMVE.Core.Runnable.Array_Concat(System.SByte[],System.SByte[])
  - BMVE.Core.Runnable.Array_Concat(System.Single[],System.Single[])
  - BMVE.Core.Runnable.Array_Concat(System.String[],System.String[])
  - BMVE.Core.Runnable.Array_Concat(System.UInt16[],System.UInt16[])
  - BMVE.Core.Runnable.Array_Concat(System.UInt32[],System.UInt32[])
  - BMVE.Core.Runnable.Array_Concat(System.UInt64[],System.UInt64[])
  - BMVE.Core.Runnable.Array_Contains(System.Boolean[],System.Boolean)
  - BMVE.Core.Runnable.Array_Contains(System.Byte[],System.Byte)
  - BMVE.Core.Runnable.Array_Contains(System.Char[],System.Char)
  - BMVE.Core.Runnable.Array_Contains(System.DateTime[],System.DateTime)
  - BMVE.Core.Runnable.Array_Contains(System.Decimal[],System.Decimal)
  - BMVE.Core.Runnable.Array_Contains(System.Double[],System.Double)
  - BMVE.Core.Runnable.Array_Contains(System.Int16[],System.Int16)
  - BMVE.Core.Runnable.Array_Contains(System.Int32[],System.Int32)
  - BMVE.Core.Runnable.Array_Contains(System.Int64[],System.Int64)
  - BMVE.Core.Runnable.Array_Contains(System.SByte[],System.SByte)
  - BMVE.Core.Runnable.Array_Contains(System.Single[],System.Single)
  - BMVE.Core.Runnable.Array_Contains(System.String[],System.String)
  - BMVE.Core.Runnable.Array_Contains(System.UInt16[],System.UInt16)
  - BMVE.Core.Runnable.Array_Contains(System.UInt32[],System.UInt32)
  - BMVE.Core.Runnable.Array_Contains(System.UInt64[],System.UInt64)
  - BMVE.Core.Runnable.Array_Copy(System.Boolean[])
  - BMVE.Core.Runnable.Array_Copy(System.Byte[])
  - BMVE.Core.Runnable.Array_Copy(System.Char[])
  - BMVE.Core.Runnable.Array_Copy(System.DateTime[])
  - BMVE.Core.Runnable.Array_Copy(System.Decimal[])
  - BMVE.Core.Runnable.Array_Copy(System.Double[])
  - BMVE.Core.Runnable.Array_Copy(System.Int16[])
  - BMVE.Core.Runnable.Array_Copy(System.Int32[])
  - BMVE.Core.Runnable.Array_Copy(System.Int64[])
  - BMVE.Core.Runnable.Array_Copy(System.SByte[])
  - BMVE.Core.Runnable.Array_Copy(System.Single[])
  - BMVE.Core.Runnable.Array_Copy(System.String[])
  - BMVE.Core.Runnable.Array_Copy(System.UInt16[])
  - BMVE.Core.Runnable.Array_Copy(System.UInt32[])
  - BMVE.Core.Runnable.Array_Copy(System.UInt64[])
  - BMVE.Core.Runnable.Array_IndexOf(System.Boolean[],System.Boolean)
  - BMVE.Core.Runnable.Array_IndexOf(System.Byte[],System.Byte)
  - BMVE.Core.Runnable.Array_IndexOf(System.Char[],System.Char)
  - BMVE.Core.Runnable.Array_IndexOf(System.DateTime[],System.DateTime)
  - BMVE.Core.Runnable.Array_IndexOf(System.Decimal[],System.Decimal)
  - BMVE.Core.Runnable.Array_IndexOf(System.Double[],System.Double)
  - BMVE.Core.Runnable.Array_IndexOf(System.Int16[],System.Int16)
  - BMVE.Core.Runnable.Array_IndexOf(System.Int32[],System.Int32)
  - BMVE.Core.Runnable.Array_IndexOf(System.Int64[],System.Int64)
  - BMVE.Core.Runnable.Array_IndexOf(System.SByte[],System.SByte)
  - BMVE.Core.Runnable.Array_IndexOf(System.Single[],System.Single)
  - BMVE.Core.Runnable.Array_IndexOf(System.String[],System.String)
  - BMVE.Core.Runnable.Array_IndexOf(System.UInt16[],System.UInt16)
  - BMVE.Core.Runnable.Array_IndexOf(System.UInt32[],System.UInt32)
  - BMVE.Core.Runnable.Array_IndexOf(System.UInt64[],System.UInt64)
  - BMVE.Core.Runnable.Array_Insert(System.Boolean[],System.Int32,System.Boolean)
  - BMVE.Core.Runnable.Array_Insert(System.Byte[],System.Int32,System.Byte)
  - BMVE.Core.Runnable.Array_Insert(System.Char[],System.Int32,System.Char)
  - BMVE.Core.Runnable.Array_Insert(System.DateTime[],System.Int32,System.DateTime)
  - BMVE.Core.Runnable.Array_Insert(System.Decimal[],System.Int32,System.Decimal)
  - BMVE.Core.Runnable.Array_Insert(System.Double[],System.Int32,System.Double)
  - BMVE.Core.Runnable.Array_Insert(System.Int16[],System.Int32,System.Int16)
  - BMVE.Core.Runnable.Array_Insert(System.Int32[],System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_Insert(System.Int64[],System.Int32,System.Int64)
  - BMVE.Core.Runnable.Array_Insert(System.SByte[],System.Int32,System.SByte)
  - BMVE.Core.Runnable.Array_Insert(System.Single[],System.Int32,System.Single)
  - BMVE.Core.Runnable.Array_Insert(System.String[],System.Int32,System.String)
  - BMVE.Core.Runnable.Array_Insert(System.UInt16[],System.Int32,System.UInt16)
  - BMVE.Core.Runnable.Array_Insert(System.UInt32[],System.Int32,System.UInt32)
  - BMVE.Core.Runnable.Array_Insert(System.UInt64[],System.Int32,System.UInt64)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Boolean[],System.Boolean)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Byte[],System.Byte)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Char[],System.Char)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.DateTime[],System.DateTime)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Decimal[],System.Decimal)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Double[],System.Double)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Int16[],System.Int16)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Int32[],System.Int32)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Int64[],System.Int64)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.SByte[],System.SByte)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.Single[],System.Single)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.String[],System.String)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.UInt16[],System.UInt16)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.UInt32[],System.UInt32)
  - BMVE.Core.Runnable.Array_LastIndexOf(System.UInt64[],System.UInt64)
  - BMVE.Core.Runnable.Array_Length(System.Boolean[])
  - BMVE.Core.Runnable.Array_Length(System.Boolean[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Boolean[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Byte[])
  - BMVE.Core.Runnable.Array_Length(System.Byte[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Byte[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Char[])
  - BMVE.Core.Runnable.Array_Length(System.Char[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Char[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.DateTime[])
  - BMVE.Core.Runnable.Array_Length(System.DateTime[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.DateTime[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Decimal[])
  - BMVE.Core.Runnable.Array_Length(System.Decimal[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Decimal[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Double[])
  - BMVE.Core.Runnable.Array_Length(System.Double[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Double[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Int16[])
  - BMVE.Core.Runnable.Array_Length(System.Int16[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Int16[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Int32[])
  - BMVE.Core.Runnable.Array_Length(System.Int32[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Int32[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Int64[])
  - BMVE.Core.Runnable.Array_Length(System.Int64[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Int64[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.SByte[])
  - BMVE.Core.Runnable.Array_Length(System.SByte[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.SByte[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Single[])
  - BMVE.Core.Runnable.Array_Length(System.Single[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.Single[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.String[])
  - BMVE.Core.Runnable.Array_Length(System.String[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.String[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.UInt16[])
  - BMVE.Core.Runnable.Array_Length(System.UInt16[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.UInt16[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.UInt32[])
  - BMVE.Core.Runnable.Array_Length(System.UInt32[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.UInt32[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.UInt64[])
  - BMVE.Core.Runnable.Array_Length(System.UInt64[0:,0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_Length(System.UInt64[0:,0:],System.Int32)
  - BMVE.Core.Runnable.Array_OfBool(System.Int32)
  - BMVE.Core.Runnable.Array_OfBool(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfBool(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfByte(System.Int32)
  - BMVE.Core.Runnable.Array_OfByte(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfByte(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfChar(System.Int32)
  - BMVE.Core.Runnable.Array_OfChar(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfChar(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfDateTime(System.Int32)
  - BMVE.Core.Runnable.Array_OfDateTime(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfDateTime(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfDecimal(System.Int32)
  - BMVE.Core.Runnable.Array_OfDecimal(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfDecimal(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfDouble(System.Int32)
  - BMVE.Core.Runnable.Array_OfDouble(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfDouble(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfFloat(System.Int32)
  - BMVE.Core.Runnable.Array_OfFloat(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfFloat(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfInt(System.Int32)
  - BMVE.Core.Runnable.Array_OfInt(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfInt(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfLong(System.Int32)
  - BMVE.Core.Runnable.Array_OfLong(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfLong(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfSByte(System.Int32)
  - BMVE.Core.Runnable.Array_OfSByte(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfSByte(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfShort(System.Int32)
  - BMVE.Core.Runnable.Array_OfShort(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfShort(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfString(System.Int32)
  - BMVE.Core.Runnable.Array_OfString(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfString(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfUInt(System.Int32)
  - BMVE.Core.Runnable.Array_OfUInt(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfUInt(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfULong(System.Int32)
  - BMVE.Core.Runnable.Array_OfULong(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfULong(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfUShort(System.Int32)
  - BMVE.Core.Runnable.Array_OfUShort(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_OfUShort(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Boolean[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Byte[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Char[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.DateTime[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Decimal[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Double[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Int16[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Int32[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Int64[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.SByte[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.Single[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.String[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.UInt16[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.UInt32[],System.Int32)
  - BMVE.Core.Runnable.Array_Remove(System.UInt64[],System.Int32)
  - BMVE.Core.Runnable.Console_ReadBool(System.String)
  - BMVE.Core.Runnable.Console_ReadDouble(System.String)
  - BMVE.Core.Runnable.Console_ReadInt(System.String)
  - BMVE.Core.Runnable.Console_ReadLine(System.String)
  - BMVE.Core.Runnable.Console_WriteLine(System.String)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Byte)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Double)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Int16)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Int32)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Int64)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.SByte)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.Single)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.String)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToBoolean(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToByte(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToByte(System.Byte)
  - BMVE.Core.Runnable.Convert_ToByte(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToByte(System.Double)
  - BMVE.Core.Runnable.Convert_ToByte(System.Int16)
  - BMVE.Core.Runnable.Convert_ToByte(System.Int32)
  - BMVE.Core.Runnable.Convert_ToByte(System.Int64)
  - BMVE.Core.Runnable.Convert_ToByte(System.Single)
  - BMVE.Core.Runnable.Convert_ToByte(System.String)
  - BMVE.Core.Runnable.Convert_ToByte(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToByte(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToByte(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Byte)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Double)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Int16)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Int32)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Int64)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.SByte)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.Single)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.String)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToDecimal(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Byte)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Int16)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Int32)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Int64)
  - BMVE.Core.Runnable.Convert_ToDouble(System.SByte)
  - BMVE.Core.Runnable.Convert_ToDouble(System.Single)
  - BMVE.Core.Runnable.Convert_ToDouble(System.String)
  - BMVE.Core.Runnable.Convert_ToDouble(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToDouble(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToDouble(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Byte)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Double)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Int16)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Int32)
  - BMVE.Core.Runnable.Convert_ToFloat(System.Int64)
  - BMVE.Core.Runnable.Convert_ToFloat(System.SByte)
  - BMVE.Core.Runnable.Convert_ToFloat(System.String)
  - BMVE.Core.Runnable.Convert_ToFloat(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToFloat(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToFloat(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToInt(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToInt(System.Byte)
  - BMVE.Core.Runnable.Convert_ToInt(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToInt(System.Double)
  - BMVE.Core.Runnable.Convert_ToInt(System.Int16)
  - BMVE.Core.Runnable.Convert_ToInt(System.Int64)
  - BMVE.Core.Runnable.Convert_ToInt(System.SByte)
  - BMVE.Core.Runnable.Convert_ToInt(System.Single)
  - BMVE.Core.Runnable.Convert_ToInt(System.String)
  - BMVE.Core.Runnable.Convert_ToInt(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToInt(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToInt(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToLong(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToLong(System.Byte)
  - BMVE.Core.Runnable.Convert_ToLong(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToLong(System.Double)
  - BMVE.Core.Runnable.Convert_ToLong(System.Int16)
  - BMVE.Core.Runnable.Convert_ToLong(System.Int32)
  - BMVE.Core.Runnable.Convert_ToLong(System.SByte)
  - BMVE.Core.Runnable.Convert_ToLong(System.Single)
  - BMVE.Core.Runnable.Convert_ToLong(System.String)
  - BMVE.Core.Runnable.Convert_ToLong(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToLong(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToLong(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Byte)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Double)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Int16)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Int32)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Int64)
  - BMVE.Core.Runnable.Convert_ToSByte(System.Single)
  - BMVE.Core.Runnable.Convert_ToSByte(System.String)
  - BMVE.Core.Runnable.Convert_ToSByte(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToSByte(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToSByte(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToShort(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToShort(System.Byte)
  - BMVE.Core.Runnable.Convert_ToShort(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToShort(System.Double)
  - BMVE.Core.Runnable.Convert_ToShort(System.Int32)
  - BMVE.Core.Runnable.Convert_ToShort(System.Int64)
  - BMVE.Core.Runnable.Convert_ToShort(System.SByte)
  - BMVE.Core.Runnable.Convert_ToShort(System.Single)
  - BMVE.Core.Runnable.Convert_ToShort(System.String)
  - BMVE.Core.Runnable.Convert_ToShort(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToShort(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToShort(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToString(System.Byte)
  - BMVE.Core.Runnable.Convert_ToString(System.DateTime)
  - BMVE.Core.Runnable.Convert_ToString(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToString(System.Double)
  - BMVE.Core.Runnable.Convert_ToString(System.Int16)
  - BMVE.Core.Runnable.Convert_ToString(System.Int32)
  - BMVE.Core.Runnable.Convert_ToString(System.Int64)
  - BMVE.Core.Runnable.Convert_ToString(System.SByte)
  - BMVE.Core.Runnable.Convert_ToString(System.Single)
  - BMVE.Core.Runnable.Convert_ToString(System.String)
  - BMVE.Core.Runnable.Convert_ToString(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToString(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToString(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Byte)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Double)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Int16)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Int32)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Int64)
  - BMVE.Core.Runnable.Convert_ToUInt(System.SByte)
  - BMVE.Core.Runnable.Convert_ToUInt(System.Single)
  - BMVE.Core.Runnable.Convert_ToUInt(System.String)
  - BMVE.Core.Runnable.Convert_ToUInt(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToUInt(System.UInt64)
  - BMVE.Core.Runnable.Convert_ToULong(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToULong(System.Byte)
  - BMVE.Core.Runnable.Convert_ToULong(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToULong(System.Double)
  - BMVE.Core.Runnable.Convert_ToULong(System.Int16)
  - BMVE.Core.Runnable.Convert_ToULong(System.Int32)
  - BMVE.Core.Runnable.Convert_ToULong(System.Int64)
  - BMVE.Core.Runnable.Convert_ToULong(System.SByte)
  - BMVE.Core.Runnable.Convert_ToULong(System.Single)
  - BMVE.Core.Runnable.Convert_ToULong(System.String)
  - BMVE.Core.Runnable.Convert_ToULong(System.UInt16)
  - BMVE.Core.Runnable.Convert_ToULong(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Boolean)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Byte)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Decimal)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Double)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Int16)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Int32)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Int64)
  - BMVE.Core.Runnable.Convert_ToUShort(System.SByte)
  - BMVE.Core.Runnable.Convert_ToUShort(System.Single)
  - BMVE.Core.Runnable.Convert_ToUShort(System.String)
  - BMVE.Core.Runnable.Convert_ToUShort(System.UInt32)
  - BMVE.Core.Runnable.Convert_ToUShort(System.UInt64)
  - BMVE.Core.Runnable.Database_BeginTransaction(System.Int32)
  - BMVE.Core.Runnable.Database_CloseConnection(System.Int32)
  - BMVE.Core.Runnable.Database_CommitTransaction(System.Int32)
  - BMVE.Core.Runnable.Database_ExecuteNonQuery(System.Int32,System.String,System.String[])
  - BMVE.Core.Runnable.Database_ExecuteReader(System.Int32,System.String,System.String[])
  - BMVE.Core.Runnable.Database_ExecuteScalar(System.Int32,System.String,System.String[])
  - BMVE.Core.Runnable.Database_IsConnectionOpen(System.Int32)
  - BMVE.Core.Runnable.Database_OpenMySqlConnection(System.Int32,System.String)
  - BMVE.Core.Runnable.Database_OpenOracleDbConnection(System.Int32,System.String)
  - BMVE.Core.Runnable.Database_OpenPostgreSqlConnection(System.Int32,System.String)
  - BMVE.Core.Runnable.Database_OpenSqliteConnection(System.Int32,System.String)
  - BMVE.Core.Runnable.Database_OpenSqlServerConnection(System.Int32,System.String)
  - BMVE.Core.Runnable.Database_RollbackTransaction(System.Int32)
  - BMVE.Core.Runnable.Datetime_Add(System.DateTime,System.DateTime)
  - BMVE.Core.Runnable.Datetime_CreateDate(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Datetime_CreateDatetime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Datetime_CreateTime(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Datetime_GetCurrentDate
  - BMVE.Core.Runnable.Datetime_GetCurrentDay
  - BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek
  - BMVE.Core.Runnable.Datetime_GetCurrentHour
  - BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds
  - BMVE.Core.Runnable.Datetime_GetCurrentMinutes
  - BMVE.Core.Runnable.Datetime_GetCurrentMonth
  - BMVE.Core.Runnable.Datetime_GetCurrentSeconds
  - BMVE.Core.Runnable.Datetime_GetCurrentTime
  - BMVE.Core.Runnable.Datetime_GetCurrentUtcDate
  - BMVE.Core.Runnable.Datetime_GetCurrentUtcTime
  - BMVE.Core.Runnable.Datetime_GetCurrentYear
  - BMVE.Core.Runnable.Datetime_Now
  - BMVE.Core.Runnable.Datetime_Subtract(System.DateTime,System.DateTime)
  - BMVE.Core.Runnable.Datetime_UtcNow
  - BMVE.Core.Runnable.File_Close(System.Int32)
  - BMVE.Core.Runnable.File_Copy(System.String,System.String)
  - BMVE.Core.Runnable.File_CreateDirectory(System.String)
  - BMVE.Core.Runnable.File_Delete(System.String)
  - BMVE.Core.Runnable.File_DeleteDirectory(System.String)
  - BMVE.Core.Runnable.File_DirectoryExists(System.String)
  - BMVE.Core.Runnable.File_Exists(System.String)
  - BMVE.Core.Runnable.File_GetCurrentDirectory
  - BMVE.Core.Runnable.File_GetDirectories
  - BMVE.Core.Runnable.File_GetDirectoryPathFromPath(System.String)
  - BMVE.Core.Runnable.File_GetFilenameFromPath(System.String)
  - BMVE.Core.Runnable.File_GetFiles
  - BMVE.Core.Runnable.File_GetOffset(System.Int32)
  - BMVE.Core.Runnable.File_GetSize(System.String)
  - BMVE.Core.Runnable.File_IsEnd(System.Int32)
  - BMVE.Core.Runnable.File_IsOpened(System.Int32)
  - BMVE.Core.Runnable.File_IsOpenedToRead(System.Int32)
  - BMVE.Core.Runnable.File_IsOpenedToWrite(System.Int32)
  - BMVE.Core.Runnable.File_Move(System.String,System.String)
  - BMVE.Core.Runnable.File_OpenToRead(System.Int32,System.String)
  - BMVE.Core.Runnable.File_OpenToWrite(System.Int32,System.String)
  - BMVE.Core.Runnable.File_ReadBytes(System.Int32,System.Int32)
  - BMVE.Core.Runnable.File_ReadLine(System.Int32)
  - BMVE.Core.Runnable.File_Rename(System.String,System.String)
  - BMVE.Core.Runnable.File_RenameDirectory(System.String,System.String)
  - BMVE.Core.Runnable.File_SetCurrentDirectory(System.String)
  - BMVE.Core.Runnable.File_SetOffset(System.Int32,System.Int64)
  - BMVE.Core.Runnable.File_Write(System.Int32,System.String[])
  - BMVE.Core.Runnable.File_WriteBytes(System.Int32,System.Byte[])
  - BMVE.Core.Runnable.File_WriteLine(System.Int32,System.String[])
  - BMVE.Core.Runnable.Image_Close(System.Int32)
  - BMVE.Core.Runnable.Image_GetAngle(System.Int32)
  - BMVE.Core.Runnable.Image_GetHeight(System.Int32)
  - BMVE.Core.Runnable.Image_GetWidth(System.Int32)
  - BMVE.Core.Runnable.Image_Load(System.Int32,System.String)
  - BMVE.Core.Runnable.Image_Rotate(System.Int32,System.Double)
  - BMVE.Core.Runnable.Input_AltPressed
  - BMVE.Core.Runnable.Input_ControlPressed
  - BMVE.Core.Runnable.Input_DownArrowKeyPressed
  - BMVE.Core.Runnable.Input_EnterPressed
  - BMVE.Core.Runnable.Input_EscapePressed
  - BMVE.Core.Runnable.Input_GetMousePositionX
  - BMVE.Core.Runnable.Input_GetMousePositionY
  - BMVE.Core.Runnable.Input_GetPressedChars
  - BMVE.Core.Runnable.Input_IsKeyPressed(System.Int32)
  - BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed
  - BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed
  - BMVE.Core.Runnable.Input_IsMousePressed(System.Int32)
  - BMVE.Core.Runnable.Input_IsRightMouseButtonPressed
  - BMVE.Core.Runnable.Input_IsXMouseButton1Pressed
  - BMVE.Core.Runnable.Input_IsXMouseButton2Pressed
  - BMVE.Core.Runnable.Input_LeftAltPressed
  - BMVE.Core.Runnable.Input_LeftArrowKeyPressed
  - BMVE.Core.Runnable.Input_LeftControlPressed
  - BMVE.Core.Runnable.Input_LeftShiftPressed
  - BMVE.Core.Runnable.Input_LeftWinKeyPressed
  - BMVE.Core.Runnable.Input_ReadString(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Input_RightAltPressed
  - BMVE.Core.Runnable.Input_RightArrowKeyPressed
  - BMVE.Core.Runnable.Input_RightControlPressed
  - BMVE.Core.Runnable.Input_RightShiftPressed
  - BMVE.Core.Runnable.Input_RightWinKeyPressed
  - BMVE.Core.Runnable.Input_ShiftPressed
  - BMVE.Core.Runnable.Input_SpacePressed
  - BMVE.Core.Runnable.Input_UpArrowKeyPressed
  - BMVE.Core.Runnable.Input_WaitForKey
  - BMVE.Core.Runnable.Input_WinKeyPressed
  - BMVE.Core.Runnable.Main
  - BMVE.Core.Runnable.Math_Abs(System.Double)
  - BMVE.Core.Runnable.Math_Acos(System.Double)
  - BMVE.Core.Runnable.Math_Asin(System.Double)
  - BMVE.Core.Runnable.Math_Atan(System.Double)
  - BMVE.Core.Runnable.Math_Atan2(System.Double,System.Double)
  - BMVE.Core.Runnable.Math_Ceil(System.Double)
  - BMVE.Core.Runnable.Math_Cos(System.Double)
  - BMVE.Core.Runnable.Math_Cosh(System.Double)
  - BMVE.Core.Runnable.Math_Exp(System.Double)
  - BMVE.Core.Runnable.Math_Floor(System.Double)
  - BMVE.Core.Runnable.Math_Log(System.Double)
  - BMVE.Core.Runnable.Math_Log10(System.Double)
  - BMVE.Core.Runnable.Math_PI
  - BMVE.Core.Runnable.Math_Pow(System.Double,System.Double)
  - BMVE.Core.Runnable.Math_RandomDouble
  - BMVE.Core.Runnable.Math_RandomInt
  - BMVE.Core.Runnable.Math_Round(System.Double)
  - BMVE.Core.Runnable.Math_Sin(System.Double)
  - BMVE.Core.Runnable.Math_Sinh(System.Double)
  - BMVE.Core.Runnable.Math_Sqrt(System.Double)
  - BMVE.Core.Runnable.Math_Tan(System.Double)
  - BMVE.Core.Runnable.Math_Tanh(System.Double)
  - BMVE.Core.Runnable.Math_Truncate(System.Double)
  - BMVE.Core.Runnable.RGB(System.Byte,System.Byte,System.Byte)
  - BMVE.Core.Runnable.RGBA(System.Byte,System.Byte,System.Byte,System.Byte)
  - BMVE.Core.Runnable.Screen_Clear
  - BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawImage(System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - BMVE.Core.Runnable.Screen_DrawText(System.Int32,System.Int32,System.String)
  - BMVE.Core.Runnable.Screen_DrawText(System.Int32,System.Int32,System.String,System.Int32)
  - BMVE.Core.Runnable.Screen_GetLineSize
  - BMVE.Core.Runnable.Screen_Render
  - BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)
  - BMVE.Core.Runnable.Screen_SetBufferedDrawingMode
  - BMVE.Core.Runnable.Screen_SetImmediateDrawingMode
  - BMVE.Core.Runnable.Screen_SetLineSize(System.Int32)
  - BMVE.Core.Runnable.Sound_Close(System.Int32)
  - BMVE.Core.Runnable.Sound_GetVolume(System.Int32)
  - BMVE.Core.Runnable.Sound_IsLoaded(System.Int32)
  - BMVE.Core.Runnable.Sound_Load(System.Int32,System.String)
  - BMVE.Core.Runnable.Sound_Pause(System.Int32)
  - BMVE.Core.Runnable.Sound_Play(System.Int32)
  - BMVE.Core.Runnable.Sound_SetVolume(System.Int32,System.Int32)
  - BMVE.Core.Runnable.Sound_Stop(System.Int32)
  - BMVE.Core.Runnable.Speech_ClearRecognizedText
  - BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages
  - BMVE.Core.Runnable.Speech_GetAvailableSynthesizers
  - BMVE.Core.Runnable.Speech_GetCurrentSynthesizer
  - BMVE.Core.Runnable.Speech_GetRecognizedText
  - BMVE.Core.Runnable.Speech_GetSynthesizerLanguage(System.String)
  - BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking
  - BMVE.Core.Runnable.Speech_SetCurrentSynthesizer(System.String)
  - BMVE.Core.Runnable.Speech_SetRecognitionLanguage(System.String)
  - BMVE.Core.Runnable.Speech_StartRecognition
  - BMVE.Core.Runnable.Speech_StopRecognition
  - BMVE.Core.Runnable.Speech_SynthesizerSpeak(System.String)
  - BMVE.Core.Runnable.Stopwatch_Close(System.Int32)
  - BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed(System.Int32)
  - BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed(System.Int32)
  - BMVE.Core.Runnable.Stopwatch_IsCreated(System.Int32)
  - BMVE.Core.Runnable.Stopwatch_IsRunning(System.Int32)
  - BMVE.Core.Runnable.Stopwatch_Start(System.Int32)
  - BMVE.Core.Runnable.Stopwatch_Stop(System.Int32)
  - BMVE.Core.Runnable.String_CharAt(System.String,System.Int32)
  - BMVE.Core.Runnable.String_Copy(System.String)
  - BMVE.Core.Runnable.String_CreateEmpty
  - BMVE.Core.Runnable.String_CreateSpaces(System.Int32)
  - BMVE.Core.Runnable.String_Format(System.String,System.Object[])
  - BMVE.Core.Runnable.String_GetCharCode(System.String)
  - BMVE.Core.Runnable.String_IndexOf(System.String,System.String)
  - BMVE.Core.Runnable.String_IsEmpty(System.String)
  - BMVE.Core.Runnable.String_IsLowerCase(System.String)
  - BMVE.Core.Runnable.String_IsNumber(System.String)
  - BMVE.Core.Runnable.String_IsOnlyDigits(System.String)
  - BMVE.Core.Runnable.String_IsOnlyLetters(System.String)
  - BMVE.Core.Runnable.String_IsUpperCase(System.String)
  - BMVE.Core.Runnable.String_LastIndexOf(System.String,System.String)
  - BMVE.Core.Runnable.String_LeftSubstring(System.String,System.Int32)
  - BMVE.Core.Runnable.String_Length(System.String)
  - BMVE.Core.Runnable.String_Replace(System.String,System.String,System.String)
  - BMVE.Core.Runnable.String_Reverse(System.String)
  - BMVE.Core.Runnable.String_RightSubstring(System.String,System.Int32)
  - BMVE.Core.Runnable.String_Substring(System.String,System.Int32,System.Int32)
  - BMVE.Core.Runnable.String_ToLower(System.String)
  - BMVE.Core.Runnable.String_ToUpper(System.String)
  - BMVE.Core.Runnable.String_Trim(System.String)
  - BMVE.Core.Runnable.String_TrimLeft(System.String)
  - BMVE.Core.Runnable.String_TrimRight(System.String)
  - BMVE.Core.Runnable.System_GetEnvironmentArguments
  - BMVE.Core.Runnable.System_GetMachineName
  - BMVE.Core.Runnable.System_GetOSVersion
  - BMVE.Core.Runnable.System_GetProcessorCount
  - BMVE.Core.Runnable.System_GetSystemDirectory
  - BMVE.Core.Runnable.System_GetSystemPageSize
  - BMVE.Core.Runnable.System_GetUserDomainName
  - BMVE.Core.Runnable.System_GetUserName
  - BMVE.Core.Runnable.System_GetWorkingMemorySet
  - BMVE.Core.Runnable.System_Sleep(System.Int32)
  - BMVE.Core.Runnable.System_Version
  - BMVE.Core.Runnable.Text_GetFont
  - BMVE.Core.Runnable.Text_GetFontSize
  - BMVE.Core.Runnable.Text_SetFont(System.String)
  - BMVE.Core.Runnable.Text_SetFontBold
  - BMVE.Core.Runnable.Text_SetFontBoldItalic
  - BMVE.Core.Runnable.Text_SetFontItalic
  - BMVE.Core.Runnable.Text_SetFontNormal
  - BMVE.Core.Runnable.Text_SetFontSize(System.Double)
  - BMVE.Core.Runnable.Thread_Continue(System.Int32)
  - BMVE.Core.Runnable.Thread_Create(System.Int32,System.Action)
  - BMVE.Core.Runnable.Thread_Create(System.Int32,System.Action{System.String},System.String)
  - BMVE.Core.Runnable.Thread_Lock(System.Int32)
  - BMVE.Core.Runnable.Thread_Pause(System.Int32)
  - BMVE.Core.Runnable.Thread_Stop(System.Int32)
  - BMVE.Core.Runnable.Thread_Unlock(System.Int32)
  - BMVE.Core.Runnable.WebServer_GetRequestContentType
  - BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys
  - BMVE.Core.Runnable.WebServer_GetRequestFormDataValue(System.String)
  - BMVE.Core.Runnable.WebServer_GetRequestFullUrl
  - BMVE.Core.Runnable.WebServer_GetRequestMethod
  - BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys
  - BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue(System.String)
  - BMVE.Core.Runnable.WebServer_GetRequestUrl
  - BMVE.Core.Runnable.WebServer_GetRequestUserAgent
  - BMVE.Core.Runnable.WebServer_GetResponseContentType
  - BMVE.Core.Runnable.WebServer_GetResponseStatusCode
  - BMVE.Core.Runnable.WebServer_NextRequest
  - BMVE.Core.Runnable.WebServer_ReadRequestBody
  - BMVE.Core.Runnable.WebServer_ReadRequestBodyString
  - BMVE.Core.Runnable.WebServer_SendResponse
  - BMVE.Core.Runnable.WebServer_SendResponse(System.Byte[])
  - BMVE.Core.Runnable.WebServer_SendResponse(System.String)
  - BMVE.Core.Runnable.WebServer_SetResponseContentType(System.String)
  - BMVE.Core.Runnable.WebServer_SetResponseStatusCode(System.UInt16)
  - BMVE.Core.Runnable.WebServer_Start(System.String,System.UInt16)
  - BMVE.Core.Runnable.WebServer_UrlDecode(System.String)
  - BMVE.Core.Runnable.WebServer_UrlEncode(System.String)
  - BMVE.Core.Runnable.WebServer_Write(System.String)
  - BMVE.Core.Runnable.WebServer_WriteLine(System.String)
  langs:
  - csharp
  - vb
  name: Runnable
  nameWithType: Runnable
  fullName: BMVE.Core.Runnable
  type: Class
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Runnable
    path: API/Runnable.Database.cs
    startLine: 9
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  syntax:
    content: public class Runnable
    content.vb: Public Class Runnable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BMVE.Core.Runnable.Array_OfULong(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfULong(System.Int32)
  id: Array_OfULong(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfULong(Int32)
  nameWithType: Runnable.Array_OfULong(Int32)
  fullName: BMVE.Core.Runnable.Array_OfULong(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfULong
    path: API/Runnable.Array.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected ulong[] Array_OfULong(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.UInt64[]
      description: Новый массив
    content.vb: Protected Function Array_OfULong(size As Integer) As ULong()
  overload: BMVE.Core.Runnable.Array_OfULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfULong(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfULong(System.Int32,System.Int32)
  id: Array_OfULong(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfULong(Int32, Int32)
  nameWithType: Runnable.Array_OfULong(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfULong(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfULong
    path: API/Runnable.Array.cs
    startLine: 24
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected ulong[, ] Array_OfULong(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.UInt64[,]
      description: Новый массив
    content.vb: Protected Function Array_OfULong(sizeA As Integer, sizeB As Integer) As ULong(,)
  overload: BMVE.Core.Runnable.Array_OfULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfULong(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfULong(System.Int32,System.Int32,System.Int32)
  id: Array_OfULong(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfULong(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfULong(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfULong(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfULong
    path: API/Runnable.Array.cs
    startLine: 33
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected ulong[,, ] Array_OfULong(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.UInt64[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfULong(sizeA As Integer, sizeB As Integer, sizeC As Integer) As ULong(,,)
  overload: BMVE.Core.Runnable.Array_OfULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfLong(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfLong(System.Int32)
  id: Array_OfLong(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfLong(Int32)
  nameWithType: Runnable.Array_OfLong(Int32)
  fullName: BMVE.Core.Runnable.Array_OfLong(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfLong
    path: API/Runnable.Array.cs
    startLine: 40
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected long[] Array_OfLong(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Int64[]
      description: Новый массив
    content.vb: Protected Function Array_OfLong(size As Integer) As Long()
  overload: BMVE.Core.Runnable.Array_OfLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfLong(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfLong(System.Int32,System.Int32)
  id: Array_OfLong(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfLong(Int32, Int32)
  nameWithType: Runnable.Array_OfLong(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfLong(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfLong
    path: API/Runnable.Array.cs
    startLine: 48
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected long[, ] Array_OfLong(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Int64[,]
      description: Новый массив
    content.vb: Protected Function Array_OfLong(sizeA As Integer, sizeB As Integer) As Long(,)
  overload: BMVE.Core.Runnable.Array_OfLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfLong(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfLong(System.Int32,System.Int32,System.Int32)
  id: Array_OfLong(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfLong(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfLong(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfLong(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfLong
    path: API/Runnable.Array.cs
    startLine: 57
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected long[,, ] Array_OfLong(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Int64[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfLong(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Long(,,)
  overload: BMVE.Core.Runnable.Array_OfLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfUInt(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfUInt(System.Int32)
  id: Array_OfUInt(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfUInt(Int32)
  nameWithType: Runnable.Array_OfUInt(Int32)
  fullName: BMVE.Core.Runnable.Array_OfUInt(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfUInt
    path: API/Runnable.Array.cs
    startLine: 64
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected uint[] Array_OfUInt(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.UInt32[]
      description: Новый массив
    content.vb: Protected Function Array_OfUInt(size As Integer) As UInteger()
  overload: BMVE.Core.Runnable.Array_OfUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfUInt(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfUInt(System.Int32,System.Int32)
  id: Array_OfUInt(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfUInt(Int32, Int32)
  nameWithType: Runnable.Array_OfUInt(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfUInt(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfUInt
    path: API/Runnable.Array.cs
    startLine: 72
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected uint[, ] Array_OfUInt(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.UInt32[,]
      description: Новый массив
    content.vb: Protected Function Array_OfUInt(sizeA As Integer, sizeB As Integer) As UInteger(,)
  overload: BMVE.Core.Runnable.Array_OfUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfUInt(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfUInt(System.Int32,System.Int32,System.Int32)
  id: Array_OfUInt(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfUInt(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfUInt(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfUInt(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfUInt
    path: API/Runnable.Array.cs
    startLine: 81
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected uint[,, ] Array_OfUInt(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.UInt32[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfUInt(sizeA As Integer, sizeB As Integer, sizeC As Integer) As UInteger(,,)
  overload: BMVE.Core.Runnable.Array_OfUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfInt(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfInt(System.Int32)
  id: Array_OfInt(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfInt(Int32)
  nameWithType: Runnable.Array_OfInt(Int32)
  fullName: BMVE.Core.Runnable.Array_OfInt(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfInt
    path: API/Runnable.Array.cs
    startLine: 88
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected int[] Array_OfInt(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Int32[]
      description: Новый массив
    content.vb: Protected Function Array_OfInt(size As Integer) As Integer()
  overload: BMVE.Core.Runnable.Array_OfInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfInt(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfInt(System.Int32,System.Int32)
  id: Array_OfInt(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfInt(Int32, Int32)
  nameWithType: Runnable.Array_OfInt(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfInt(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfInt
    path: API/Runnable.Array.cs
    startLine: 96
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected int[, ] Array_OfInt(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Int32[,]
      description: Новый массив
    content.vb: Protected Function Array_OfInt(sizeA As Integer, sizeB As Integer) As Integer(,)
  overload: BMVE.Core.Runnable.Array_OfInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfInt(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfInt(System.Int32,System.Int32,System.Int32)
  id: Array_OfInt(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfInt(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfInt(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfInt(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfInt
    path: API/Runnable.Array.cs
    startLine: 105
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected int[,, ] Array_OfInt(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Int32[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfInt(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Integer(,,)
  overload: BMVE.Core.Runnable.Array_OfInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfUShort(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfUShort(System.Int32)
  id: Array_OfUShort(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfUShort(Int32)
  nameWithType: Runnable.Array_OfUShort(Int32)
  fullName: BMVE.Core.Runnable.Array_OfUShort(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfUShort
    path: API/Runnable.Array.cs
    startLine: 112
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected ushort[] Array_OfUShort(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.UInt16[]
      description: Новый массив
    content.vb: Protected Function Array_OfUShort(size As Integer) As UShort()
  overload: BMVE.Core.Runnable.Array_OfUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfUShort(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfUShort(System.Int32,System.Int32)
  id: Array_OfUShort(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfUShort(Int32, Int32)
  nameWithType: Runnable.Array_OfUShort(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfUShort(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfUShort
    path: API/Runnable.Array.cs
    startLine: 120
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected ushort[, ] Array_OfUShort(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.UInt16[,]
      description: Новый массив
    content.vb: Protected Function Array_OfUShort(sizeA As Integer, sizeB As Integer) As UShort(,)
  overload: BMVE.Core.Runnable.Array_OfUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfUShort(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfUShort(System.Int32,System.Int32,System.Int32)
  id: Array_OfUShort(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfUShort(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfUShort(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfUShort(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfUShort
    path: API/Runnable.Array.cs
    startLine: 129
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected ushort[,, ] Array_OfUShort(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.UInt16[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfUShort(sizeA As Integer, sizeB As Integer, sizeC As Integer) As UShort(,,)
  overload: BMVE.Core.Runnable.Array_OfUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfShort(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfShort(System.Int32)
  id: Array_OfShort(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfShort(Int32)
  nameWithType: Runnable.Array_OfShort(Int32)
  fullName: BMVE.Core.Runnable.Array_OfShort(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfShort
    path: API/Runnable.Array.cs
    startLine: 136
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected short[] Array_OfShort(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Int16[]
      description: Новый массив
    content.vb: Protected Function Array_OfShort(size As Integer) As Short()
  overload: BMVE.Core.Runnable.Array_OfShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfShort(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfShort(System.Int32,System.Int32)
  id: Array_OfShort(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfShort(Int32, Int32)
  nameWithType: Runnable.Array_OfShort(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfShort(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfShort
    path: API/Runnable.Array.cs
    startLine: 144
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected short[, ] Array_OfShort(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Int16[,]
      description: Новый массив
    content.vb: Protected Function Array_OfShort(sizeA As Integer, sizeB As Integer) As Short(,)
  overload: BMVE.Core.Runnable.Array_OfShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfShort(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfShort(System.Int32,System.Int32,System.Int32)
  id: Array_OfShort(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfShort(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfShort(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfShort(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfShort
    path: API/Runnable.Array.cs
    startLine: 153
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected short[,, ] Array_OfShort(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Int16[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfShort(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Short(,,)
  overload: BMVE.Core.Runnable.Array_OfShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfByte(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfByte(System.Int32)
  id: Array_OfByte(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfByte(Int32)
  nameWithType: Runnable.Array_OfByte(Int32)
  fullName: BMVE.Core.Runnable.Array_OfByte(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfByte
    path: API/Runnable.Array.cs
    startLine: 160
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected byte[] Array_OfByte(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Byte[]
      description: Новый массив
    content.vb: Protected Function Array_OfByte(size As Integer) As Byte()
  overload: BMVE.Core.Runnable.Array_OfByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfByte(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfByte(System.Int32,System.Int32)
  id: Array_OfByte(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfByte(Int32, Int32)
  nameWithType: Runnable.Array_OfByte(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfByte(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfByte
    path: API/Runnable.Array.cs
    startLine: 168
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected byte[, ] Array_OfByte(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Byte[,]
      description: Новый массив
    content.vb: Protected Function Array_OfByte(sizeA As Integer, sizeB As Integer) As Byte(,)
  overload: BMVE.Core.Runnable.Array_OfByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfByte(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfByte(System.Int32,System.Int32,System.Int32)
  id: Array_OfByte(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfByte(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfByte(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfByte(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfByte
    path: API/Runnable.Array.cs
    startLine: 177
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected byte[,, ] Array_OfByte(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Byte[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfByte(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Byte(,,)
  overload: BMVE.Core.Runnable.Array_OfByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfSByte(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfSByte(System.Int32)
  id: Array_OfSByte(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfSByte(Int32)
  nameWithType: Runnable.Array_OfSByte(Int32)
  fullName: BMVE.Core.Runnable.Array_OfSByte(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfSByte
    path: API/Runnable.Array.cs
    startLine: 184
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected sbyte[] Array_OfSByte(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.SByte[]
      description: Новый массив
    content.vb: Protected Function Array_OfSByte(size As Integer) As SByte()
  overload: BMVE.Core.Runnable.Array_OfSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfSByte(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfSByte(System.Int32,System.Int32)
  id: Array_OfSByte(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfSByte(Int32, Int32)
  nameWithType: Runnable.Array_OfSByte(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfSByte(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfSByte
    path: API/Runnable.Array.cs
    startLine: 192
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected sbyte[, ] Array_OfSByte(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.SByte[,]
      description: Новый массив
    content.vb: Protected Function Array_OfSByte(sizeA As Integer, sizeB As Integer) As SByte(,)
  overload: BMVE.Core.Runnable.Array_OfSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfSByte(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfSByte(System.Int32,System.Int32,System.Int32)
  id: Array_OfSByte(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfSByte(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfSByte(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfSByte(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfSByte
    path: API/Runnable.Array.cs
    startLine: 201
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected sbyte[,, ] Array_OfSByte(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.SByte[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfSByte(sizeA As Integer, sizeB As Integer, sizeC As Integer) As SByte(,,)
  overload: BMVE.Core.Runnable.Array_OfSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDecimal(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDecimal(System.Int32)
  id: Array_OfDecimal(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDecimal(Int32)
  nameWithType: Runnable.Array_OfDecimal(Int32)
  fullName: BMVE.Core.Runnable.Array_OfDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDecimal
    path: API/Runnable.Array.cs
    startLine: 208
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected decimal[] Array_OfDecimal(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Decimal[]
      description: Новый массив
    content.vb: Protected Function Array_OfDecimal(size As Integer) As Decimal()
  overload: BMVE.Core.Runnable.Array_OfDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDecimal(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDecimal(System.Int32,System.Int32)
  id: Array_OfDecimal(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDecimal(Int32, Int32)
  nameWithType: Runnable.Array_OfDecimal(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfDecimal(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDecimal
    path: API/Runnable.Array.cs
    startLine: 216
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected decimal[, ] Array_OfDecimal(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Decimal[,]
      description: Новый массив
    content.vb: Protected Function Array_OfDecimal(sizeA As Integer, sizeB As Integer) As Decimal(,)
  overload: BMVE.Core.Runnable.Array_OfDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDecimal(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDecimal(System.Int32,System.Int32,System.Int32)
  id: Array_OfDecimal(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDecimal(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfDecimal(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfDecimal(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDecimal
    path: API/Runnable.Array.cs
    startLine: 225
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected decimal[,, ] Array_OfDecimal(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Decimal[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfDecimal(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Decimal(,,)
  overload: BMVE.Core.Runnable.Array_OfDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDouble(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDouble(System.Int32)
  id: Array_OfDouble(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDouble(Int32)
  nameWithType: Runnable.Array_OfDouble(Int32)
  fullName: BMVE.Core.Runnable.Array_OfDouble(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDouble
    path: API/Runnable.Array.cs
    startLine: 232
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected double[] Array_OfDouble(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Double[]
      description: Новый массив
    content.vb: Protected Function Array_OfDouble(size As Integer) As Double()
  overload: BMVE.Core.Runnable.Array_OfDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDouble(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDouble(System.Int32,System.Int32)
  id: Array_OfDouble(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDouble(Int32, Int32)
  nameWithType: Runnable.Array_OfDouble(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfDouble(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDouble
    path: API/Runnable.Array.cs
    startLine: 240
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected double[, ] Array_OfDouble(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Double[,]
      description: Новый массив
    content.vb: Protected Function Array_OfDouble(sizeA As Integer, sizeB As Integer) As Double(,)
  overload: BMVE.Core.Runnable.Array_OfDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDouble(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDouble(System.Int32,System.Int32,System.Int32)
  id: Array_OfDouble(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDouble(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfDouble(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfDouble(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDouble
    path: API/Runnable.Array.cs
    startLine: 249
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected double[,, ] Array_OfDouble(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Double[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfDouble(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Double(,,)
  overload: BMVE.Core.Runnable.Array_OfDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfFloat(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfFloat(System.Int32)
  id: Array_OfFloat(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfFloat(Int32)
  nameWithType: Runnable.Array_OfFloat(Int32)
  fullName: BMVE.Core.Runnable.Array_OfFloat(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfFloat
    path: API/Runnable.Array.cs
    startLine: 256
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected float[] Array_OfFloat(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Single[]
      description: Новый массив
    content.vb: Protected Function Array_OfFloat(size As Integer) As Single()
  overload: BMVE.Core.Runnable.Array_OfFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfFloat(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfFloat(System.Int32,System.Int32)
  id: Array_OfFloat(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfFloat(Int32, Int32)
  nameWithType: Runnable.Array_OfFloat(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfFloat(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfFloat
    path: API/Runnable.Array.cs
    startLine: 264
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected float[, ] Array_OfFloat(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Single[,]
      description: Новый массив
    content.vb: Protected Function Array_OfFloat(sizeA As Integer, sizeB As Integer) As Single(,)
  overload: BMVE.Core.Runnable.Array_OfFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfFloat(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfFloat(System.Int32,System.Int32,System.Int32)
  id: Array_OfFloat(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfFloat(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfFloat(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfFloat(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfFloat
    path: API/Runnable.Array.cs
    startLine: 273
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected float[,, ] Array_OfFloat(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Single[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfFloat(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Single(,,)
  overload: BMVE.Core.Runnable.Array_OfFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfBool(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfBool(System.Int32)
  id: Array_OfBool(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfBool(Int32)
  nameWithType: Runnable.Array_OfBool(Int32)
  fullName: BMVE.Core.Runnable.Array_OfBool(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfBool
    path: API/Runnable.Array.cs
    startLine: 280
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected bool[] Array_OfBool(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Boolean[]
      description: Новый массив
    content.vb: Protected Function Array_OfBool(size As Integer) As Boolean()
  overload: BMVE.Core.Runnable.Array_OfBool*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfBool(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfBool(System.Int32,System.Int32)
  id: Array_OfBool(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfBool(Int32, Int32)
  nameWithType: Runnable.Array_OfBool(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfBool(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfBool
    path: API/Runnable.Array.cs
    startLine: 288
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected bool[, ] Array_OfBool(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Boolean[,]
      description: Новый массив
    content.vb: Protected Function Array_OfBool(sizeA As Integer, sizeB As Integer) As Boolean(,)
  overload: BMVE.Core.Runnable.Array_OfBool*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfBool(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfBool(System.Int32,System.Int32,System.Int32)
  id: Array_OfBool(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfBool(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfBool(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfBool(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfBool
    path: API/Runnable.Array.cs
    startLine: 297
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected bool[,, ] Array_OfBool(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Boolean[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfBool(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Boolean(,,)
  overload: BMVE.Core.Runnable.Array_OfBool*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfChar(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfChar(System.Int32)
  id: Array_OfChar(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfChar(Int32)
  nameWithType: Runnable.Array_OfChar(Int32)
  fullName: BMVE.Core.Runnable.Array_OfChar(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfChar
    path: API/Runnable.Array.cs
    startLine: 304
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected char[] Array_OfChar(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.Char[]
      description: Новый массив
    content.vb: Protected Function Array_OfChar(size As Integer) As Char()
  overload: BMVE.Core.Runnable.Array_OfChar*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfChar(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfChar(System.Int32,System.Int32)
  id: Array_OfChar(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfChar(Int32, Int32)
  nameWithType: Runnable.Array_OfChar(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfChar(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfChar
    path: API/Runnable.Array.cs
    startLine: 312
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected char[, ] Array_OfChar(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.Char[,]
      description: Новый массив
    content.vb: Protected Function Array_OfChar(sizeA As Integer, sizeB As Integer) As Char(,)
  overload: BMVE.Core.Runnable.Array_OfChar*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfChar(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfChar(System.Int32,System.Int32,System.Int32)
  id: Array_OfChar(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfChar(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfChar(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfChar(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfChar
    path: API/Runnable.Array.cs
    startLine: 321
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected char[,, ] Array_OfChar(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.Char[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfChar(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Char(,,)
  overload: BMVE.Core.Runnable.Array_OfChar*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfString(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfString(System.Int32)
  id: Array_OfString(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfString(Int32)
  nameWithType: Runnable.Array_OfString(Int32)
  fullName: BMVE.Core.Runnable.Array_OfString(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfString
    path: API/Runnable.Array.cs
    startLine: 328
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected string[] Array_OfString(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.String[]
      description: Новый массив
    content.vb: Protected Function Array_OfString(size As Integer) As String()
  overload: BMVE.Core.Runnable.Array_OfString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfString(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfString(System.Int32,System.Int32)
  id: Array_OfString(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfString(Int32, Int32)
  nameWithType: Runnable.Array_OfString(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfString(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfString
    path: API/Runnable.Array.cs
    startLine: 336
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected string[, ] Array_OfString(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.String[,]
      description: Новый массив
    content.vb: Protected Function Array_OfString(sizeA As Integer, sizeB As Integer) As String(,)
  overload: BMVE.Core.Runnable.Array_OfString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfString(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfString(System.Int32,System.Int32,System.Int32)
  id: Array_OfString(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfString(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfString(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfString(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfString
    path: API/Runnable.Array.cs
    startLine: 345
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected string[,, ] Array_OfString(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.String[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfString(sizeA As Integer, sizeB As Integer, sizeC As Integer) As String(,,)
  overload: BMVE.Core.Runnable.Array_OfString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDateTime(System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDateTime(System.Int32)
  id: Array_OfDateTime(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDateTime(Int32)
  nameWithType: Runnable.Array_OfDateTime(Int32)
  fullName: BMVE.Core.Runnable.Array_OfDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDateTime
    path: API/Runnable.Array.cs
    startLine: 352
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый массив типа <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected DateTime[] Array_OfDateTime(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер массива
    return:
      type: System.DateTime[]
      description: Новый массив
    content.vb: Protected Function Array_OfDateTime(size As Integer) As Date()
  overload: BMVE.Core.Runnable.Array_OfDateTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDateTime(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDateTime(System.Int32,System.Int32)
  id: Array_OfDateTime(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDateTime(Int32, Int32)
  nameWithType: Runnable.Array_OfDateTime(Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfDateTime(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDateTime
    path: API/Runnable.Array.cs
    startLine: 360
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый двухмерный массив типа <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected DateTime[, ] Array_OfDateTime(int sizeA, int sizeB)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    return:
      type: System.DateTime[,]
      description: Новый массив
    content.vb: Protected Function Array_OfDateTime(sizeA As Integer, sizeB As Integer) As Date(,)
  overload: BMVE.Core.Runnable.Array_OfDateTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_OfDateTime(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_OfDateTime(System.Int32,System.Int32,System.Int32)
  id: Array_OfDateTime(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_OfDateTime(Int32, Int32, Int32)
  nameWithType: Runnable.Array_OfDateTime(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_OfDateTime(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_OfDateTime
    path: API/Runnable.Array.cs
    startLine: 369
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает новый трехмерный массив типа <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> указанного размера\n"
  example: []
  syntax:
    content: protected DateTime[,, ] Array_OfDateTime(int sizeA, int sizeB, int sizeC)
    parameters:
    - id: sizeA
      type: System.Int32
      description: Первая размерность массива
    - id: sizeB
      type: System.Int32
      description: Вторая размерность массива
    - id: sizeC
      type: System.Int32
      description: Третья размерность массива
    return:
      type: System.DateTime[,,]
      description: Новый массив
    content.vb: Protected Function Array_OfDateTime(sizeA As Integer, sizeB As Integer, sizeC As Integer) As Date(,,)
  overload: BMVE.Core.Runnable.Array_OfDateTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Array_Add(System.UInt64[],System.UInt64)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.UInt64[],System.UInt64)
  id: Array_Add(System.UInt64[],System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(UInt64[], UInt64)
  nameWithType: Runnable.Array_Add(UInt64[], UInt64)
  fullName: BMVE.Core.Runnable.Array_Add(System.UInt64[], System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 377
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected ulong[] Array_Add(ulong[] array, ulong value)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив для добавления
    - id: value
      type: System.UInt64
      description: Новый элемент
    return:
      type: System.UInt64[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As ULong(), value As ULong) As ULong()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(UInt64(), UInt64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.UInt64(), System.UInt64)
  name.vb: Array_Add(UInt64(), UInt64)
- uid: BMVE.Core.Runnable.Array_Add(System.Int64[],System.Int64)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Int64[],System.Int64)
  id: Array_Add(System.Int64[],System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Int64[], Int64)
  nameWithType: Runnable.Array_Add(Int64[], Int64)
  fullName: BMVE.Core.Runnable.Array_Add(System.Int64[], System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 385
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected long[] Array_Add(long[] array, long value)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив для добавления
    - id: value
      type: System.Int64
      description: Новый элемент
    return:
      type: System.Int64[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Long(), value As Long) As Long()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Int64(), Int64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Int64(), System.Int64)
  name.vb: Array_Add(Int64(), Int64)
- uid: BMVE.Core.Runnable.Array_Add(System.UInt32[],System.UInt32)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.UInt32[],System.UInt32)
  id: Array_Add(System.UInt32[],System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(UInt32[], UInt32)
  nameWithType: Runnable.Array_Add(UInt32[], UInt32)
  fullName: BMVE.Core.Runnable.Array_Add(System.UInt32[], System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 393
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected uint[] Array_Add(uint[] array, uint value)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив для добавления
    - id: value
      type: System.UInt32
      description: Новый элемент
    return:
      type: System.UInt32[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As UInteger(), value As UInteger) As UInteger()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(UInt32(), UInt32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.UInt32(), System.UInt32)
  name.vb: Array_Add(UInt32(), UInt32)
- uid: BMVE.Core.Runnable.Array_Add(System.Int32[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Int32[],System.Int32)
  id: Array_Add(System.Int32[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Int32[], Int32)
  nameWithType: Runnable.Array_Add(Int32[], Int32)
  fullName: BMVE.Core.Runnable.Array_Add(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 401
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected int[] Array_Add(int[] array, int value)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив для добавления
    - id: value
      type: System.Int32
      description: Новый элемент
    return:
      type: System.Int32[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Integer(), value As Integer) As Integer()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Int32(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Int32(), System.Int32)
  name.vb: Array_Add(Int32(), Int32)
- uid: BMVE.Core.Runnable.Array_Add(System.UInt16[],System.UInt16)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.UInt16[],System.UInt16)
  id: Array_Add(System.UInt16[],System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(UInt16[], UInt16)
  nameWithType: Runnable.Array_Add(UInt16[], UInt16)
  fullName: BMVE.Core.Runnable.Array_Add(System.UInt16[], System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 409
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected ushort[] Array_Add(ushort[] array, ushort value)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив для добавления
    - id: value
      type: System.UInt16
      description: Новый элемент
    return:
      type: System.UInt16[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As UShort(), value As UShort) As UShort()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(UInt16(), UInt16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.UInt16(), System.UInt16)
  name.vb: Array_Add(UInt16(), UInt16)
- uid: BMVE.Core.Runnable.Array_Add(System.Int16[],System.Int16)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Int16[],System.Int16)
  id: Array_Add(System.Int16[],System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Int16[], Int16)
  nameWithType: Runnable.Array_Add(Int16[], Int16)
  fullName: BMVE.Core.Runnable.Array_Add(System.Int16[], System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 417
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected short[] Array_Add(short[] array, short value)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив для добавления
    - id: value
      type: System.Int16
      description: Новый элемент
    return:
      type: System.Int16[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Short(), value As Short) As Short()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Int16(), Int16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Int16(), System.Int16)
  name.vb: Array_Add(Int16(), Int16)
- uid: BMVE.Core.Runnable.Array_Add(System.Byte[],System.Byte)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Byte[],System.Byte)
  id: Array_Add(System.Byte[],System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Byte[], Byte)
  nameWithType: Runnable.Array_Add(Byte[], Byte)
  fullName: BMVE.Core.Runnable.Array_Add(System.Byte[], System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 425
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected byte[] Array_Add(byte[] array, byte value)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив для добавления
    - id: value
      type: System.Byte
      description: Новый элемент
    return:
      type: System.Byte[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Byte(), value As Byte) As Byte()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Byte(), Byte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Byte(), System.Byte)
  name.vb: Array_Add(Byte(), Byte)
- uid: BMVE.Core.Runnable.Array_Add(System.SByte[],System.SByte)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.SByte[],System.SByte)
  id: Array_Add(System.SByte[],System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(SByte[], SByte)
  nameWithType: Runnable.Array_Add(SByte[], SByte)
  fullName: BMVE.Core.Runnable.Array_Add(System.SByte[], System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 433
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected sbyte[] Array_Add(sbyte[] array, sbyte value)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив для добавления
    - id: value
      type: System.SByte
      description: Новый элемент
    return:
      type: System.SByte[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As SByte(), value As SByte) As SByte()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(SByte(), SByte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.SByte(), System.SByte)
  name.vb: Array_Add(SByte(), SByte)
- uid: BMVE.Core.Runnable.Array_Add(System.Boolean[],System.Boolean)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Boolean[],System.Boolean)
  id: Array_Add(System.Boolean[],System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Boolean[], Boolean)
  nameWithType: Runnable.Array_Add(Boolean[], Boolean)
  fullName: BMVE.Core.Runnable.Array_Add(System.Boolean[], System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 441
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый целочисленный элемент в конец массива\n"
  example: []
  syntax:
    content: protected bool[] Array_Add(bool[] array, bool value)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив для добавления
    - id: value
      type: System.Boolean
      description: Новый элемент
    return:
      type: System.Boolean[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Boolean(), value As Boolean) As Boolean()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Boolean(), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Boolean(), System.Boolean)
  name.vb: Array_Add(Boolean(), Boolean)
- uid: BMVE.Core.Runnable.Array_Add(System.Decimal[],System.Decimal)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Decimal[],System.Decimal)
  id: Array_Add(System.Decimal[],System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Decimal[], Decimal)
  nameWithType: Runnable.Array_Add(Decimal[], Decimal)
  fullName: BMVE.Core.Runnable.Array_Add(System.Decimal[], System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 449
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый дробный элемент в конец массива\n"
  example: []
  syntax:
    content: protected decimal[] Array_Add(decimal[] array, decimal value)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив для добавления
    - id: value
      type: System.Decimal
      description: Новый элемент
    return:
      type: System.Decimal[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Decimal(), value As Decimal) As Decimal()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Decimal(), Decimal)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Decimal(), System.Decimal)
  name.vb: Array_Add(Decimal(), Decimal)
- uid: BMVE.Core.Runnable.Array_Add(System.Double[],System.Double)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Double[],System.Double)
  id: Array_Add(System.Double[],System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Double[], Double)
  nameWithType: Runnable.Array_Add(Double[], Double)
  fullName: BMVE.Core.Runnable.Array_Add(System.Double[], System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 457
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый дробный элемент в конец массива\n"
  example: []
  syntax:
    content: protected double[] Array_Add(double[] array, double value)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив для добавления
    - id: value
      type: System.Double
      description: Новый элемент
    return:
      type: System.Double[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Double(), value As Double) As Double()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Double(), Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Double(), System.Double)
  name.vb: Array_Add(Double(), Double)
- uid: BMVE.Core.Runnable.Array_Add(System.Single[],System.Single)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Single[],System.Single)
  id: Array_Add(System.Single[],System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Single[], Single)
  nameWithType: Runnable.Array_Add(Single[], Single)
  fullName: BMVE.Core.Runnable.Array_Add(System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 465
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый дробный элемент в конец массива\n"
  example: []
  syntax:
    content: protected float[] Array_Add(float[] array, float value)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив для добавления
    - id: value
      type: System.Single
      description: Новый элемент
    return:
      type: System.Single[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Single(), value As Single) As Single()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Single(), Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Single(), System.Single)
  name.vb: Array_Add(Single(), Single)
- uid: BMVE.Core.Runnable.Array_Add(System.Char[],System.Char)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.Char[],System.Char)
  id: Array_Add(System.Char[],System.Char)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(Char[], Char)
  nameWithType: Runnable.Array_Add(Char[], Char)
  fullName: BMVE.Core.Runnable.Array_Add(System.Char[], System.Char)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 473
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый элемент-строку в конец массива\n"
  example: []
  syntax:
    content: protected char[] Array_Add(char[] array, char value)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив для добавления
    - id: value
      type: System.Char
      description: Новый элемент
    return:
      type: System.Char[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Char(), value As Char) As Char()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(Char(), Char)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.Char(), System.Char)
  name.vb: Array_Add(Char(), Char)
- uid: BMVE.Core.Runnable.Array_Add(System.String[],System.String)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.String[],System.String)
  id: Array_Add(System.String[],System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(String[], String)
  nameWithType: Runnable.Array_Add(String[], String)
  fullName: BMVE.Core.Runnable.Array_Add(System.String[], System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 481
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый элемент-строку в конец массива\n"
  example: []
  syntax:
    content: protected string[] Array_Add(string[] array, string value)
    parameters:
    - id: array
      type: System.String[]
      description: Массив для добавления
    - id: value
      type: System.String
      description: Новый элемент
    return:
      type: System.String[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As String(), value As String) As String()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(String(), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.String(), System.String)
  name.vb: Array_Add(String(), String)
- uid: BMVE.Core.Runnable.Array_Add(System.DateTime[],System.DateTime)
  commentId: M:BMVE.Core.Runnable.Array_Add(System.DateTime[],System.DateTime)
  id: Array_Add(System.DateTime[],System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Add(DateTime[], DateTime)
  nameWithType: Runnable.Array_Add(DateTime[], DateTime)
  fullName: BMVE.Core.Runnable.Array_Add(System.DateTime[], System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Add
    path: API/Runnable.Array.cs
    startLine: 489
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДобавляет новый элемент в конец массива\n"
  example: []
  syntax:
    content: protected DateTime[] Array_Add(DateTime[] array, DateTime value)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив для добавления
    - id: value
      type: System.DateTime
      description: Новый элемент
    return:
      type: System.DateTime[]
      description: Массив с добавленным новым значением
    content.vb: Protected Function Array_Add(array As Date(), value As Date) As Date()
  overload: BMVE.Core.Runnable.Array_Add*
  nameWithType.vb: Runnable.Array_Add(DateTime(), DateTime)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Add(System.DateTime(), System.DateTime)
  name.vb: Array_Add(DateTime(), DateTime)
- uid: BMVE.Core.Runnable.Array_Insert(System.UInt64[],System.Int32,System.UInt64)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.UInt64[],System.Int32,System.UInt64)
  id: Array_Insert(System.UInt64[],System.Int32,System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(UInt64[], Int32, UInt64)
  nameWithType: Runnable.Array_Insert(UInt64[], Int32, UInt64)
  fullName: BMVE.Core.Runnable.Array_Insert(System.UInt64[], System.Int32, System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 498
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected ulong[] Array_Insert(ulong[] array, int index, ulong value)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.UInt64
      description: Значение, которое будет вставлено
    return:
      type: System.UInt64[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As ULong(), index As Integer, value As ULong) As ULong()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(UInt64(), Int32, UInt64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.UInt64(), System.Int32, System.UInt64)
  name.vb: Array_Insert(UInt64(), Int32, UInt64)
- uid: BMVE.Core.Runnable.Array_Insert(System.Int64[],System.Int32,System.Int64)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Int64[],System.Int32,System.Int64)
  id: Array_Insert(System.Int64[],System.Int32,System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Int64[], Int32, Int64)
  nameWithType: Runnable.Array_Insert(Int64[], Int32, Int64)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Int64[], System.Int32, System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 507
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected long[] Array_Insert(long[] array, int index, long value)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Int64
      description: Значение, которое будет вставлено
    return:
      type: System.Int64[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Long(), index As Integer, value As Long) As Long()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Int64(), Int32, Int64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Int64(), System.Int32, System.Int64)
  name.vb: Array_Insert(Int64(), Int32, Int64)
- uid: BMVE.Core.Runnable.Array_Insert(System.UInt32[],System.Int32,System.UInt32)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.UInt32[],System.Int32,System.UInt32)
  id: Array_Insert(System.UInt32[],System.Int32,System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(UInt32[], Int32, UInt32)
  nameWithType: Runnable.Array_Insert(UInt32[], Int32, UInt32)
  fullName: BMVE.Core.Runnable.Array_Insert(System.UInt32[], System.Int32, System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 516
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected uint[] Array_Insert(uint[] array, int index, uint value)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.UInt32
      description: Значение, которое будет вставлено
    return:
      type: System.UInt32[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As UInteger(), index As Integer, value As UInteger) As UInteger()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(UInt32(), Int32, UInt32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.UInt32(), System.Int32, System.UInt32)
  name.vb: Array_Insert(UInt32(), Int32, UInt32)
- uid: BMVE.Core.Runnable.Array_Insert(System.Int32[],System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Int32[],System.Int32,System.Int32)
  id: Array_Insert(System.Int32[],System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Int32[], Int32, Int32)
  nameWithType: Runnable.Array_Insert(Int32[], Int32, Int32)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Int32[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 525
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected int[] Array_Insert(int[] array, int index, int value)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Int32
      description: Значение, которое будет вставлено
    return:
      type: System.Int32[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Integer(), index As Integer, value As Integer) As Integer()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Int32(), Int32, Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Int32(), System.Int32, System.Int32)
  name.vb: Array_Insert(Int32(), Int32, Int32)
- uid: BMVE.Core.Runnable.Array_Insert(System.UInt16[],System.Int32,System.UInt16)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.UInt16[],System.Int32,System.UInt16)
  id: Array_Insert(System.UInt16[],System.Int32,System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(UInt16[], Int32, UInt16)
  nameWithType: Runnable.Array_Insert(UInt16[], Int32, UInt16)
  fullName: BMVE.Core.Runnable.Array_Insert(System.UInt16[], System.Int32, System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 534
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected ushort[] Array_Insert(ushort[] array, int index, ushort value)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.UInt16
      description: Значение, которое будет вставлено
    return:
      type: System.UInt16[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As UShort(), index As Integer, value As UShort) As UShort()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(UInt16(), Int32, UInt16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.UInt16(), System.Int32, System.UInt16)
  name.vb: Array_Insert(UInt16(), Int32, UInt16)
- uid: BMVE.Core.Runnable.Array_Insert(System.Int16[],System.Int32,System.Int16)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Int16[],System.Int32,System.Int16)
  id: Array_Insert(System.Int16[],System.Int32,System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Int16[], Int32, Int16)
  nameWithType: Runnable.Array_Insert(Int16[], Int32, Int16)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Int16[], System.Int32, System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 543
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected short[] Array_Insert(short[] array, int index, short value)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Int16
      description: Значение, которое будет вставлено
    return:
      type: System.Int16[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Short(), index As Integer, value As Short) As Short()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Int16(), Int32, Int16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Int16(), System.Int32, System.Int16)
  name.vb: Array_Insert(Int16(), Int32, Int16)
- uid: BMVE.Core.Runnable.Array_Insert(System.Byte[],System.Int32,System.Byte)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Byte[],System.Int32,System.Byte)
  id: Array_Insert(System.Byte[],System.Int32,System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Byte[], Int32, Byte)
  nameWithType: Runnable.Array_Insert(Byte[], Int32, Byte)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Byte[], System.Int32, System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 552
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected byte[] Array_Insert(byte[] array, int index, byte value)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Byte
      description: Значение, которое будет вставлено
    return:
      type: System.Byte[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Byte(), index As Integer, value As Byte) As Byte()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Byte(), Int32, Byte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Byte(), System.Int32, System.Byte)
  name.vb: Array_Insert(Byte(), Int32, Byte)
- uid: BMVE.Core.Runnable.Array_Insert(System.SByte[],System.Int32,System.SByte)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.SByte[],System.Int32,System.SByte)
  id: Array_Insert(System.SByte[],System.Int32,System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(SByte[], Int32, SByte)
  nameWithType: Runnable.Array_Insert(SByte[], Int32, SByte)
  fullName: BMVE.Core.Runnable.Array_Insert(System.SByte[], System.Int32, System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 561
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected sbyte[] Array_Insert(sbyte[] array, int index, sbyte value)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.SByte
      description: Значение, которое будет вставлено
    return:
      type: System.SByte[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As SByte(), index As Integer, value As SByte) As SByte()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(SByte(), Int32, SByte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.SByte(), System.Int32, System.SByte)
  name.vb: Array_Insert(SByte(), Int32, SByte)
- uid: BMVE.Core.Runnable.Array_Insert(System.Boolean[],System.Int32,System.Boolean)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Boolean[],System.Int32,System.Boolean)
  id: Array_Insert(System.Boolean[],System.Int32,System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Boolean[], Int32, Boolean)
  nameWithType: Runnable.Array_Insert(Boolean[], Int32, Boolean)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Boolean[], System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 570
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected bool[] Array_Insert(bool[] array, int index, bool value)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Boolean
      description: Значение, которое будет вставлено
    return:
      type: System.Boolean[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Boolean(), index As Integer, value As Boolean) As Boolean()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Boolean(), Int32, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Boolean(), System.Int32, System.Boolean)
  name.vb: Array_Insert(Boolean(), Int32, Boolean)
- uid: BMVE.Core.Runnable.Array_Insert(System.Decimal[],System.Int32,System.Decimal)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Decimal[],System.Int32,System.Decimal)
  id: Array_Insert(System.Decimal[],System.Int32,System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Decimal[], Int32, Decimal)
  nameWithType: Runnable.Array_Insert(Decimal[], Int32, Decimal)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Decimal[], System.Int32, System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 579
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected decimal[] Array_Insert(decimal[] array, int index, decimal value)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Decimal
      description: Значение, которое будет вставлено
    return:
      type: System.Decimal[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Decimal(), index As Integer, value As Decimal) As Decimal()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Decimal(), Int32, Decimal)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Decimal(), System.Int32, System.Decimal)
  name.vb: Array_Insert(Decimal(), Int32, Decimal)
- uid: BMVE.Core.Runnable.Array_Insert(System.Double[],System.Int32,System.Double)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Double[],System.Int32,System.Double)
  id: Array_Insert(System.Double[],System.Int32,System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Double[], Int32, Double)
  nameWithType: Runnable.Array_Insert(Double[], Int32, Double)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Double[], System.Int32, System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 588
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected double[] Array_Insert(double[] array, int index, double value)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Double
      description: Значение, которое будет вставлено
    return:
      type: System.Double[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Double(), index As Integer, value As Double) As Double()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Double(), Int32, Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Double(), System.Int32, System.Double)
  name.vb: Array_Insert(Double(), Int32, Double)
- uid: BMVE.Core.Runnable.Array_Insert(System.Single[],System.Int32,System.Single)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Single[],System.Int32,System.Single)
  id: Array_Insert(System.Single[],System.Int32,System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Single[], Int32, Single)
  nameWithType: Runnable.Array_Insert(Single[], Int32, Single)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Single[], System.Int32, System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 597
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected float[] Array_Insert(float[] array, int index, float value)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Single
      description: Значение, которое будет вставлено
    return:
      type: System.Single[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Single(), index As Integer, value As Single) As Single()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Single(), Int32, Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Single(), System.Int32, System.Single)
  name.vb: Array_Insert(Single(), Int32, Single)
- uid: BMVE.Core.Runnable.Array_Insert(System.Char[],System.Int32,System.Char)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.Char[],System.Int32,System.Char)
  id: Array_Insert(System.Char[],System.Int32,System.Char)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(Char[], Int32, Char)
  nameWithType: Runnable.Array_Insert(Char[], Int32, Char)
  fullName: BMVE.Core.Runnable.Array_Insert(System.Char[], System.Int32, System.Char)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 606
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected char[] Array_Insert(char[] array, int index, char value)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.Char
      description: Значение, которое будет вставлено
    return:
      type: System.Char[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Char(), index As Integer, value As Char) As Char()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(Char(), Int32, Char)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.Char(), System.Int32, System.Char)
  name.vb: Array_Insert(Char(), Int32, Char)
- uid: BMVE.Core.Runnable.Array_Insert(System.String[],System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.String[],System.Int32,System.String)
  id: Array_Insert(System.String[],System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(String[], Int32, String)
  nameWithType: Runnable.Array_Insert(String[], Int32, String)
  fullName: BMVE.Core.Runnable.Array_Insert(System.String[], System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 615
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected string[] Array_Insert(string[] array, int index, string value)
    parameters:
    - id: array
      type: System.String[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.String
      description: Значение, которое будет вставлено
    return:
      type: System.String[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As String(), index As Integer, value As String) As String()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(String(), Int32, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.String(), System.Int32, System.String)
  name.vb: Array_Insert(String(), Int32, String)
- uid: BMVE.Core.Runnable.Array_Insert(System.DateTime[],System.Int32,System.DateTime)
  commentId: M:BMVE.Core.Runnable.Array_Insert(System.DateTime[],System.Int32,System.DateTime)
  id: Array_Insert(System.DateTime[],System.Int32,System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Insert(DateTime[], Int32, DateTime)
  nameWithType: Runnable.Array_Insert(DateTime[], Int32, DateTime)
  fullName: BMVE.Core.Runnable.Array_Insert(System.DateTime[], System.Int32, System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Insert
    path: API/Runnable.Array.cs
    startLine: 624
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВставляет новый элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected DateTime[] Array_Insert(DateTime[] array, int index, DateTime value)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив для вставки
    - id: index
      type: System.Int32
      description: Индекс, куда будет вставлен элемент
    - id: value
      type: System.DateTime
      description: Значение, которое будет вставлено
    return:
      type: System.DateTime[]
      description: Массив со вставленным значением
    content.vb: Protected Function Array_Insert(array As Date(), index As Integer, value As Date) As Date()
  overload: BMVE.Core.Runnable.Array_Insert*
  nameWithType.vb: Runnable.Array_Insert(DateTime(), Int32, DateTime)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Insert(System.DateTime(), System.Int32, System.DateTime)
  name.vb: Array_Insert(DateTime(), Int32, DateTime)
- uid: BMVE.Core.Runnable.Array_Remove(System.UInt64[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.UInt64[],System.Int32)
  id: Array_Remove(System.UInt64[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(UInt64[], Int32)
  nameWithType: Runnable.Array_Remove(UInt64[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.UInt64[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 632
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected ulong[] Array_Remove(ulong[] array, int index)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.UInt64[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As ULong(), index As Integer) As ULong()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(UInt64(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.UInt64(), System.Int32)
  name.vb: Array_Remove(UInt64(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Int64[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Int64[],System.Int32)
  id: Array_Remove(System.Int64[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Int64[], Int32)
  nameWithType: Runnable.Array_Remove(Int64[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Int64[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 640
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected long[] Array_Remove(long[] array, int index)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Int64[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Long(), index As Integer) As Long()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Int64(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Int64(), System.Int32)
  name.vb: Array_Remove(Int64(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.UInt32[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.UInt32[],System.Int32)
  id: Array_Remove(System.UInt32[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(UInt32[], Int32)
  nameWithType: Runnable.Array_Remove(UInt32[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.UInt32[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 648
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected uint[] Array_Remove(uint[] array, int index)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.UInt32[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As UInteger(), index As Integer) As UInteger()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(UInt32(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.UInt32(), System.Int32)
  name.vb: Array_Remove(UInt32(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Int32[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Int32[],System.Int32)
  id: Array_Remove(System.Int32[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Int32[], Int32)
  nameWithType: Runnable.Array_Remove(Int32[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 656
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected int[] Array_Remove(int[] array, int index)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Int32[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Integer(), index As Integer) As Integer()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Int32(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Int32(), System.Int32)
  name.vb: Array_Remove(Int32(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.UInt16[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.UInt16[],System.Int32)
  id: Array_Remove(System.UInt16[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(UInt16[], Int32)
  nameWithType: Runnable.Array_Remove(UInt16[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.UInt16[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 664
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected ushort[] Array_Remove(ushort[] array, int index)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.UInt16[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As UShort(), index As Integer) As UShort()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(UInt16(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.UInt16(), System.Int32)
  name.vb: Array_Remove(UInt16(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Int16[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Int16[],System.Int32)
  id: Array_Remove(System.Int16[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Int16[], Int32)
  nameWithType: Runnable.Array_Remove(Int16[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Int16[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 672
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected short[] Array_Remove(short[] array, int index)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Int16[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Short(), index As Integer) As Short()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Int16(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Int16(), System.Int32)
  name.vb: Array_Remove(Int16(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Byte[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Byte[],System.Int32)
  id: Array_Remove(System.Byte[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Byte[], Int32)
  nameWithType: Runnable.Array_Remove(Byte[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 680
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected byte[] Array_Remove(byte[] array, int index)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Byte[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Byte(), index As Integer) As Byte()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Byte(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Byte(), System.Int32)
  name.vb: Array_Remove(Byte(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.SByte[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.SByte[],System.Int32)
  id: Array_Remove(System.SByte[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(SByte[], Int32)
  nameWithType: Runnable.Array_Remove(SByte[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.SByte[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 688
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected sbyte[] Array_Remove(sbyte[] array, int index)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.SByte[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As SByte(), index As Integer) As SByte()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(SByte(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.SByte(), System.Int32)
  name.vb: Array_Remove(SByte(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Decimal[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Decimal[],System.Int32)
  id: Array_Remove(System.Decimal[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Decimal[], Int32)
  nameWithType: Runnable.Array_Remove(Decimal[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Decimal[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 696
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected decimal[] Array_Remove(decimal[] array, int index)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Decimal[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Decimal(), index As Integer) As Decimal()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Decimal(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Decimal(), System.Int32)
  name.vb: Array_Remove(Decimal(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Double[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Double[],System.Int32)
  id: Array_Remove(System.Double[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Double[], Int32)
  nameWithType: Runnable.Array_Remove(Double[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Double[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 704
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected double[] Array_Remove(double[] array, int index)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Double[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Double(), index As Integer) As Double()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Double(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Double(), System.Int32)
  name.vb: Array_Remove(Double(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Single[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Single[],System.Int32)
  id: Array_Remove(System.Single[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Single[], Int32)
  nameWithType: Runnable.Array_Remove(Single[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Single[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 712
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected float[] Array_Remove(float[] array, int index)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Single[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Single(), index As Integer) As Single()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Single(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Single(), System.Int32)
  name.vb: Array_Remove(Single(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Char[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Char[],System.Int32)
  id: Array_Remove(System.Char[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Char[], Int32)
  nameWithType: Runnable.Array_Remove(Char[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Char[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 720
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected char[] Array_Remove(char[] array, int index)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Char[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Char(), index As Integer) As Char()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Char(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Char(), System.Int32)
  name.vb: Array_Remove(Char(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.String[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.String[],System.Int32)
  id: Array_Remove(System.String[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(String[], Int32)
  nameWithType: Runnable.Array_Remove(String[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.String[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 728
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected string[] Array_Remove(string[] array, int index)
    parameters:
    - id: array
      type: System.String[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.String[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As String(), index As Integer) As String()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(String(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.String(), System.Int32)
  name.vb: Array_Remove(String(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.Boolean[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.Boolean[],System.Int32)
  id: Array_Remove(System.Boolean[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(Boolean[], Int32)
  nameWithType: Runnable.Array_Remove(Boolean[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.Boolean[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 736
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected bool[] Array_Remove(bool[] array, int index)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.Boolean[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Boolean(), index As Integer) As Boolean()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(Boolean(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.Boolean(), System.Int32)
  name.vb: Array_Remove(Boolean(), Int32)
- uid: BMVE.Core.Runnable.Array_Remove(System.DateTime[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Remove(System.DateTime[],System.Int32)
  id: Array_Remove(System.DateTime[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Remove(DateTime[], Int32)
  nameWithType: Runnable.Array_Remove(DateTime[], Int32)
  fullName: BMVE.Core.Runnable.Array_Remove(System.DateTime[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Remove
    path: API/Runnable.Array.cs
    startLine: 744
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет элемент по указанному индексу в массиве\n"
  example: []
  syntax:
    content: protected DateTime[] Array_Remove(DateTime[] array, int index)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив
    - id: index
      type: System.Int32
      description: Индекс, откуда будет удален элемент
    return:
      type: System.DateTime[]
      description: Массив с удаленным значением
    content.vb: Protected Function Array_Remove(array As Date(), index As Integer) As Date()
  overload: BMVE.Core.Runnable.Array_Remove*
  nameWithType.vb: Runnable.Array_Remove(DateTime(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Remove(System.DateTime(), System.Int32)
  name.vb: Array_Remove(DateTime(), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.UInt64[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt64[])
  id: Array_Length(System.UInt64[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt64[])
  nameWithType: Runnable.Array_Length(UInt64[])
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt64[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 751
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(ulong[] array)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As ULong()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt64())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt64())
  name.vb: Array_Length(UInt64())
- uid: BMVE.Core.Runnable.Array_Length(System.UInt64[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt64[0:,0:],System.Int32)
  id: Array_Length(System.UInt64[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt64[,], Int32)
  nameWithType: Runnable.Array_Length(UInt64[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt64[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 759
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(ulong[, ] array, int dimension)
    parameters:
    - id: array
      type: System.UInt64[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As ULong(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt64(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt64(,), System.Int32)
  name.vb: Array_Length(UInt64(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.UInt64[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt64[0:,0:,0:],System.Int32)
  id: Array_Length(System.UInt64[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt64[,,], Int32)
  nameWithType: Runnable.Array_Length(UInt64[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt64[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 767
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(ulong[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.UInt64[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As ULong(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt64(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt64(,,), System.Int32)
  name.vb: Array_Length(UInt64(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Int64[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int64[])
  id: Array_Length(System.Int64[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int64[])
  nameWithType: Runnable.Array_Length(Int64[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Int64[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 774
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(long[] array)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Long()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int64())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int64())
  name.vb: Array_Length(Int64())
- uid: BMVE.Core.Runnable.Array_Length(System.Int64[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int64[0:,0:],System.Int32)
  id: Array_Length(System.Int64[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int64[,], Int32)
  nameWithType: Runnable.Array_Length(Int64[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Int64[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 782
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(long[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Int64[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Long(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int64(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int64(,), System.Int32)
  name.vb: Array_Length(Int64(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Int64[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int64[0:,0:,0:],System.Int32)
  id: Array_Length(System.Int64[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int64[,,], Int32)
  nameWithType: Runnable.Array_Length(Int64[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Int64[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 790
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(long[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Int64[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Long(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int64(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int64(,,), System.Int32)
  name.vb: Array_Length(Int64(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.UInt32[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt32[])
  id: Array_Length(System.UInt32[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt32[])
  nameWithType: Runnable.Array_Length(UInt32[])
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt32[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 797
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(uint[] array)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As UInteger()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt32())
  name.vb: Array_Length(UInt32())
- uid: BMVE.Core.Runnable.Array_Length(System.UInt32[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt32[0:,0:],System.Int32)
  id: Array_Length(System.UInt32[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt32[,], Int32)
  nameWithType: Runnable.Array_Length(UInt32[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt32[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 805
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(uint[, ] array, int dimension)
    parameters:
    - id: array
      type: System.UInt32[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As UInteger(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt32(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt32(,), System.Int32)
  name.vb: Array_Length(UInt32(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.UInt32[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt32[0:,0:,0:],System.Int32)
  id: Array_Length(System.UInt32[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt32[,,], Int32)
  nameWithType: Runnable.Array_Length(UInt32[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt32[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 813
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(uint[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.UInt32[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As UInteger(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt32(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt32(,,), System.Int32)
  name.vb: Array_Length(UInt32(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Int32[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int32[])
  id: Array_Length(System.Int32[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int32[])
  nameWithType: Runnable.Array_Length(Int32[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Int32[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 820
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(int[] array)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Integer()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int32())
  name.vb: Array_Length(Int32())
- uid: BMVE.Core.Runnable.Array_Length(System.Int32[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int32[0:,0:],System.Int32)
  id: Array_Length(System.Int32[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int32[,], Int32)
  nameWithType: Runnable.Array_Length(Int32[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Int32[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 828
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(int[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Int32[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Integer(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int32(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int32(,), System.Int32)
  name.vb: Array_Length(Int32(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Int32[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int32[0:,0:,0:],System.Int32)
  id: Array_Length(System.Int32[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int32[,,], Int32)
  nameWithType: Runnable.Array_Length(Int32[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Int32[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 836
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(int[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Int32[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Integer(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int32(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int32(,,), System.Int32)
  name.vb: Array_Length(Int32(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.UInt16[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt16[])
  id: Array_Length(System.UInt16[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt16[])
  nameWithType: Runnable.Array_Length(UInt16[])
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt16[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 843
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(ushort[] array)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As UShort()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt16())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt16())
  name.vb: Array_Length(UInt16())
- uid: BMVE.Core.Runnable.Array_Length(System.UInt16[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt16[0:,0:],System.Int32)
  id: Array_Length(System.UInt16[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt16[,], Int32)
  nameWithType: Runnable.Array_Length(UInt16[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt16[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 851
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(ushort[, ] array, int dimension)
    parameters:
    - id: array
      type: System.UInt16[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As UShort(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt16(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt16(,), System.Int32)
  name.vb: Array_Length(UInt16(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.UInt16[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.UInt16[0:,0:,0:],System.Int32)
  id: Array_Length(System.UInt16[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(UInt16[,,], Int32)
  nameWithType: Runnable.Array_Length(UInt16[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.UInt16[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 859
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(ushort[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.UInt16[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As UShort(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(UInt16(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.UInt16(,,), System.Int32)
  name.vb: Array_Length(UInt16(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Int16[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int16[])
  id: Array_Length(System.Int16[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int16[])
  nameWithType: Runnable.Array_Length(Int16[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Int16[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 866
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(short[] array)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Short()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int16())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int16())
  name.vb: Array_Length(Int16())
- uid: BMVE.Core.Runnable.Array_Length(System.Int16[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int16[0:,0:],System.Int32)
  id: Array_Length(System.Int16[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int16[,], Int32)
  nameWithType: Runnable.Array_Length(Int16[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Int16[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 874
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(short[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Int16[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Short(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int16(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int16(,), System.Int32)
  name.vb: Array_Length(Int16(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Int16[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Int16[0:,0:,0:],System.Int32)
  id: Array_Length(System.Int16[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Int16[,,], Int32)
  nameWithType: Runnable.Array_Length(Int16[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Int16[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 882
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(short[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Int16[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Short(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Int16(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Int16(,,), System.Int32)
  name.vb: Array_Length(Int16(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Byte[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Byte[])
  id: Array_Length(System.Byte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Byte[])
  nameWithType: Runnable.Array_Length(Byte[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Byte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 889
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(byte[] array)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Byte()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Byte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Byte())
  name.vb: Array_Length(Byte())
- uid: BMVE.Core.Runnable.Array_Length(System.Byte[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Byte[0:,0:],System.Int32)
  id: Array_Length(System.Byte[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Byte[,], Int32)
  nameWithType: Runnable.Array_Length(Byte[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Byte[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 897
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(byte[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Byte[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Byte(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Byte(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Byte(,), System.Int32)
  name.vb: Array_Length(Byte(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Byte[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Byte[0:,0:,0:],System.Int32)
  id: Array_Length(System.Byte[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Byte[,,], Int32)
  nameWithType: Runnable.Array_Length(Byte[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Byte[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 905
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(byte[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Byte[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Byte(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Byte(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Byte(,,), System.Int32)
  name.vb: Array_Length(Byte(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.SByte[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.SByte[])
  id: Array_Length(System.SByte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(SByte[])
  nameWithType: Runnable.Array_Length(SByte[])
  fullName: BMVE.Core.Runnable.Array_Length(System.SByte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 912
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(sbyte[] array)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As SByte()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(SByte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.SByte())
  name.vb: Array_Length(SByte())
- uid: BMVE.Core.Runnable.Array_Length(System.SByte[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.SByte[0:,0:],System.Int32)
  id: Array_Length(System.SByte[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(SByte[,], Int32)
  nameWithType: Runnable.Array_Length(SByte[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.SByte[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 920
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(sbyte[, ] array, int dimension)
    parameters:
    - id: array
      type: System.SByte[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As SByte(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(SByte(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.SByte(,), System.Int32)
  name.vb: Array_Length(SByte(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.SByte[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.SByte[0:,0:,0:],System.Int32)
  id: Array_Length(System.SByte[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(SByte[,,], Int32)
  nameWithType: Runnable.Array_Length(SByte[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.SByte[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 928
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(sbyte[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.SByte[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As SByte(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(SByte(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.SByte(,,), System.Int32)
  name.vb: Array_Length(SByte(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Decimal[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Decimal[])
  id: Array_Length(System.Decimal[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Decimal[])
  nameWithType: Runnable.Array_Length(Decimal[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Decimal[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 935
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(decimal[] array)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Decimal()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Decimal())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Decimal())
  name.vb: Array_Length(Decimal())
- uid: BMVE.Core.Runnable.Array_Length(System.Decimal[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Decimal[0:,0:],System.Int32)
  id: Array_Length(System.Decimal[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Decimal[,], Int32)
  nameWithType: Runnable.Array_Length(Decimal[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Decimal[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 943
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(decimal[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Decimal[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Decimal(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Decimal(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Decimal(,), System.Int32)
  name.vb: Array_Length(Decimal(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Decimal[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Decimal[0:,0:,0:],System.Int32)
  id: Array_Length(System.Decimal[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Decimal[,,], Int32)
  nameWithType: Runnable.Array_Length(Decimal[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Decimal[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 951
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(decimal[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Decimal[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Decimal(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Decimal(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Decimal(,,), System.Int32)
  name.vb: Array_Length(Decimal(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Double[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Double[])
  id: Array_Length(System.Double[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Double[])
  nameWithType: Runnable.Array_Length(Double[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Double[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 958
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(double[] array)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Double()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Double())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Double())
  name.vb: Array_Length(Double())
- uid: BMVE.Core.Runnable.Array_Length(System.Double[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Double[0:,0:],System.Int32)
  id: Array_Length(System.Double[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Double[,], Int32)
  nameWithType: Runnable.Array_Length(Double[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Double[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 966
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(double[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Double[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Double(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Double(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Double(,), System.Int32)
  name.vb: Array_Length(Double(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Double[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Double[0:,0:,0:],System.Int32)
  id: Array_Length(System.Double[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Double[,,], Int32)
  nameWithType: Runnable.Array_Length(Double[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Double[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 974
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(double[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Double[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Double(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Double(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Double(,,), System.Int32)
  name.vb: Array_Length(Double(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Single[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Single[])
  id: Array_Length(System.Single[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Single[])
  nameWithType: Runnable.Array_Length(Single[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Single[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 981
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(float[] array)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Single()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Single())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Single())
  name.vb: Array_Length(Single())
- uid: BMVE.Core.Runnable.Array_Length(System.Single[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Single[0:,0:],System.Int32)
  id: Array_Length(System.Single[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Single[,], Int32)
  nameWithType: Runnable.Array_Length(Single[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Single[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 989
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(float[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Single[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Single(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Single(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Single(,), System.Int32)
  name.vb: Array_Length(Single(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Single[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Single[0:,0:,0:],System.Int32)
  id: Array_Length(System.Single[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Single[,,], Int32)
  nameWithType: Runnable.Array_Length(Single[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Single[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 997
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(float[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Single[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Single(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Single(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Single(,,), System.Int32)
  name.vb: Array_Length(Single(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Char[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Char[])
  id: Array_Length(System.Char[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Char[])
  nameWithType: Runnable.Array_Length(Char[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Char[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1004
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(char[] array)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Char()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Char())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Char())
  name.vb: Array_Length(Char())
- uid: BMVE.Core.Runnable.Array_Length(System.Char[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Char[0:,0:],System.Int32)
  id: Array_Length(System.Char[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Char[,], Int32)
  nameWithType: Runnable.Array_Length(Char[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Char[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1012
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(char[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Char[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Char(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Char(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Char(,), System.Int32)
  name.vb: Array_Length(Char(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Char[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Char[0:,0:,0:],System.Int32)
  id: Array_Length(System.Char[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Char[,,], Int32)
  nameWithType: Runnable.Array_Length(Char[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Char[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1020
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(char[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Char[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Char(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Char(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Char(,,), System.Int32)
  name.vb: Array_Length(Char(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.String[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.String[])
  id: Array_Length(System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(String[])
  nameWithType: Runnable.Array_Length(String[])
  fullName: BMVE.Core.Runnable.Array_Length(System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1027
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(string[] array)
    parameters:
    - id: array
      type: System.String[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As String()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.String())
  name.vb: Array_Length(String())
- uid: BMVE.Core.Runnable.Array_Length(System.String[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.String[0:,0:],System.Int32)
  id: Array_Length(System.String[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(String[,], Int32)
  nameWithType: Runnable.Array_Length(String[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.String[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1035
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(string[, ] array, int dimension)
    parameters:
    - id: array
      type: System.String[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As String(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(String(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.String(,), System.Int32)
  name.vb: Array_Length(String(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.String[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.String[0:,0:,0:],System.Int32)
  id: Array_Length(System.String[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(String[,,], Int32)
  nameWithType: Runnable.Array_Length(String[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.String[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1043
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(string[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.String[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As String(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(String(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.String(,,), System.Int32)
  name.vb: Array_Length(String(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Boolean[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Boolean[])
  id: Array_Length(System.Boolean[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Boolean[])
  nameWithType: Runnable.Array_Length(Boolean[])
  fullName: BMVE.Core.Runnable.Array_Length(System.Boolean[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1050
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(bool[] array)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Boolean()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Boolean())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Boolean())
  name.vb: Array_Length(Boolean())
- uid: BMVE.Core.Runnable.Array_Length(System.Boolean[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Boolean[0:,0:],System.Int32)
  id: Array_Length(System.Boolean[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Boolean[,], Int32)
  nameWithType: Runnable.Array_Length(Boolean[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Boolean[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1058
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(bool[, ] array, int dimension)
    parameters:
    - id: array
      type: System.Boolean[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Boolean(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Boolean(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Boolean(,), System.Int32)
  name.vb: Array_Length(Boolean(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.Boolean[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.Boolean[0:,0:,0:],System.Int32)
  id: Array_Length(System.Boolean[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(Boolean[,,], Int32)
  nameWithType: Runnable.Array_Length(Boolean[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.Boolean[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1066
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(bool[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.Boolean[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Boolean(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(Boolean(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.Boolean(,,), System.Int32)
  name.vb: Array_Length(Boolean(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.DateTime[])
  commentId: M:BMVE.Core.Runnable.Array_Length(System.DateTime[])
  id: Array_Length(System.DateTime[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(DateTime[])
  nameWithType: Runnable.Array_Length(DateTime[])
  fullName: BMVE.Core.Runnable.Array_Length(System.DateTime[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1073
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество элементов в массиве\n"
  example: []
  syntax:
    content: protected int Array_Length(DateTime[] array)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив
    return:
      type: System.Int32
      description: Количество элементов в массиве
    content.vb: Protected Function Array_Length(array As Date()) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(DateTime())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.DateTime())
  name.vb: Array_Length(DateTime())
- uid: BMVE.Core.Runnable.Array_Length(System.DateTime[0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.DateTime[0:,0:],System.Int32)
  id: Array_Length(System.DateTime[0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(DateTime[,], Int32)
  nameWithType: Runnable.Array_Length(DateTime[,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.DateTime[,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1081
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(DateTime[, ] array, int dimension)
    parameters:
    - id: array
      type: System.DateTime[,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Date(,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(DateTime(,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.DateTime(,), System.Int32)
  name.vb: Array_Length(DateTime(,), Int32)
- uid: BMVE.Core.Runnable.Array_Length(System.DateTime[0:,0:,0:],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Length(System.DateTime[0:,0:,0:],System.Int32)
  id: Array_Length(System.DateTime[0:,0:,0:],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Length(DateTime[,,], Int32)
  nameWithType: Runnable.Array_Length(DateTime[,,], Int32)
  fullName: BMVE.Core.Runnable.Array_Length(System.DateTime[,,], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Length
    path: API/Runnable.Array.cs
    startLine: 1089
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размерность указанного измерения массива\n"
  example: []
  syntax:
    content: protected int Array_Length(DateTime[,, ] array, int dimension)
    parameters:
    - id: array
      type: System.DateTime[,,]
      description: Массив
    - id: dimension
      type: System.Int32
      description: Измерение
    return:
      type: System.Int32
      description: Размерность указанного измерения массива
    content.vb: Protected Function Array_Length(array As Date(,,), dimension As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_Length*
  nameWithType.vb: Runnable.Array_Length(DateTime(,,), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Length(System.DateTime(,,), System.Int32)
  name.vb: Array_Length(DateTime(,,), Int32)
- uid: BMVE.Core.Runnable.Array_Contains(System.UInt64[],System.UInt64)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.UInt64[],System.UInt64)
  id: Array_Contains(System.UInt64[],System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(UInt64[], UInt64)
  nameWithType: Runnable.Array_Contains(UInt64[], UInt64)
  fullName: BMVE.Core.Runnable.Array_Contains(System.UInt64[], System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1097
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(ulong[] array, ulong value)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив
    - id: value
      type: System.UInt64
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As ULong(), value As ULong) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(UInt64(), UInt64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.UInt64(), System.UInt64)
  name.vb: Array_Contains(UInt64(), UInt64)
- uid: BMVE.Core.Runnable.Array_Contains(System.Int64[],System.Int64)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Int64[],System.Int64)
  id: Array_Contains(System.Int64[],System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Int64[], Int64)
  nameWithType: Runnable.Array_Contains(Int64[], Int64)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Int64[], System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1105
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(long[] array, long value)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив
    - id: value
      type: System.Int64
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Long(), value As Long) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Int64(), Int64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Int64(), System.Int64)
  name.vb: Array_Contains(Int64(), Int64)
- uid: BMVE.Core.Runnable.Array_Contains(System.UInt32[],System.UInt32)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.UInt32[],System.UInt32)
  id: Array_Contains(System.UInt32[],System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(UInt32[], UInt32)
  nameWithType: Runnable.Array_Contains(UInt32[], UInt32)
  fullName: BMVE.Core.Runnable.Array_Contains(System.UInt32[], System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1113
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(uint[] array, uint value)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив
    - id: value
      type: System.UInt32
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As UInteger(), value As UInteger) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(UInt32(), UInt32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.UInt32(), System.UInt32)
  name.vb: Array_Contains(UInt32(), UInt32)
- uid: BMVE.Core.Runnable.Array_Contains(System.Int32[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Int32[],System.Int32)
  id: Array_Contains(System.Int32[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Int32[], Int32)
  nameWithType: Runnable.Array_Contains(Int32[], Int32)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1121
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(int[] array, int value)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив
    - id: value
      type: System.Int32
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Integer(), value As Integer) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Int32(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Int32(), System.Int32)
  name.vb: Array_Contains(Int32(), Int32)
- uid: BMVE.Core.Runnable.Array_Contains(System.UInt16[],System.UInt16)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.UInt16[],System.UInt16)
  id: Array_Contains(System.UInt16[],System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(UInt16[], UInt16)
  nameWithType: Runnable.Array_Contains(UInt16[], UInt16)
  fullName: BMVE.Core.Runnable.Array_Contains(System.UInt16[], System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1129
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(ushort[] array, ushort value)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив
    - id: value
      type: System.UInt16
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As UShort(), value As UShort) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(UInt16(), UInt16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.UInt16(), System.UInt16)
  name.vb: Array_Contains(UInt16(), UInt16)
- uid: BMVE.Core.Runnable.Array_Contains(System.Int16[],System.Int16)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Int16[],System.Int16)
  id: Array_Contains(System.Int16[],System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Int16[], Int16)
  nameWithType: Runnable.Array_Contains(Int16[], Int16)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Int16[], System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1137
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(short[] array, short value)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив
    - id: value
      type: System.Int16
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Short(), value As Short) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Int16(), Int16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Int16(), System.Int16)
  name.vb: Array_Contains(Int16(), Int16)
- uid: BMVE.Core.Runnable.Array_Contains(System.Byte[],System.Byte)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Byte[],System.Byte)
  id: Array_Contains(System.Byte[],System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Byte[], Byte)
  nameWithType: Runnable.Array_Contains(Byte[], Byte)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Byte[], System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1145
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(byte[] array, byte value)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив
    - id: value
      type: System.Byte
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Byte(), value As Byte) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Byte(), Byte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Byte(), System.Byte)
  name.vb: Array_Contains(Byte(), Byte)
- uid: BMVE.Core.Runnable.Array_Contains(System.SByte[],System.SByte)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.SByte[],System.SByte)
  id: Array_Contains(System.SByte[],System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(SByte[], SByte)
  nameWithType: Runnable.Array_Contains(SByte[], SByte)
  fullName: BMVE.Core.Runnable.Array_Contains(System.SByte[], System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1153
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(sbyte[] array, sbyte value)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив
    - id: value
      type: System.SByte
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As SByte(), value As SByte) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(SByte(), SByte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.SByte(), System.SByte)
  name.vb: Array_Contains(SByte(), SByte)
- uid: BMVE.Core.Runnable.Array_Contains(System.Decimal[],System.Decimal)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Decimal[],System.Decimal)
  id: Array_Contains(System.Decimal[],System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Decimal[], Decimal)
  nameWithType: Runnable.Array_Contains(Decimal[], Decimal)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Decimal[], System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1161
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(decimal[] array, decimal value)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив
    - id: value
      type: System.Decimal
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Decimal(), value As Decimal) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Decimal(), Decimal)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Decimal(), System.Decimal)
  name.vb: Array_Contains(Decimal(), Decimal)
- uid: BMVE.Core.Runnable.Array_Contains(System.Double[],System.Double)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Double[],System.Double)
  id: Array_Contains(System.Double[],System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Double[], Double)
  nameWithType: Runnable.Array_Contains(Double[], Double)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Double[], System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1169
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(double[] array, double value)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив
    - id: value
      type: System.Double
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Double(), value As Double) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Double(), Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Double(), System.Double)
  name.vb: Array_Contains(Double(), Double)
- uid: BMVE.Core.Runnable.Array_Contains(System.Single[],System.Single)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Single[],System.Single)
  id: Array_Contains(System.Single[],System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Single[], Single)
  nameWithType: Runnable.Array_Contains(Single[], Single)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1177
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(float[] array, float value)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив
    - id: value
      type: System.Single
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Single(), value As Single) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Single(), Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Single(), System.Single)
  name.vb: Array_Contains(Single(), Single)
- uid: BMVE.Core.Runnable.Array_Contains(System.Char[],System.Char)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Char[],System.Char)
  id: Array_Contains(System.Char[],System.Char)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Char[], Char)
  nameWithType: Runnable.Array_Contains(Char[], Char)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Char[], System.Char)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1185
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(char[] array, char value)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив
    - id: value
      type: System.Char
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Char(), value As Char) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Char(), Char)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Char(), System.Char)
  name.vb: Array_Contains(Char(), Char)
- uid: BMVE.Core.Runnable.Array_Contains(System.String[],System.String)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.String[],System.String)
  id: Array_Contains(System.String[],System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(String[], String)
  nameWithType: Runnable.Array_Contains(String[], String)
  fullName: BMVE.Core.Runnable.Array_Contains(System.String[], System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1193
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(string[] array, string value)
    parameters:
    - id: array
      type: System.String[]
      description: Массив
    - id: value
      type: System.String
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As String(), value As String) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(String(), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.String(), System.String)
  name.vb: Array_Contains(String(), String)
- uid: BMVE.Core.Runnable.Array_Contains(System.Boolean[],System.Boolean)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.Boolean[],System.Boolean)
  id: Array_Contains(System.Boolean[],System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(Boolean[], Boolean)
  nameWithType: Runnable.Array_Contains(Boolean[], Boolean)
  fullName: BMVE.Core.Runnable.Array_Contains(System.Boolean[], System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1201
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(bool[] array, bool value)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив
    - id: value
      type: System.Boolean
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Boolean(), value As Boolean) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(Boolean(), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.Boolean(), System.Boolean)
  name.vb: Array_Contains(Boolean(), Boolean)
- uid: BMVE.Core.Runnable.Array_Contains(System.DateTime[],System.DateTime)
  commentId: M:BMVE.Core.Runnable.Array_Contains(System.DateTime[],System.DateTime)
  id: Array_Contains(System.DateTime[],System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Contains(DateTime[], DateTime)
  nameWithType: Runnable.Array_Contains(DateTime[], DateTime)
  fullName: BMVE.Core.Runnable.Array_Contains(System.DateTime[], System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Contains
    path: API/Runnable.Array.cs
    startLine: 1209
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет массив на наличие заданного элемента\n"
  example: []
  syntax:
    content: protected bool Array_Contains(DateTime[] array, DateTime value)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив
    - id: value
      type: System.DateTime
      description: Элемент, на наличие которого проверяется
    return:
      type: System.Boolean
      description: Есть ли в массиве указанный элемент
    content.vb: Protected Function Array_Contains(array As Date(), value As Date) As Boolean
  overload: BMVE.Core.Runnable.Array_Contains*
  nameWithType.vb: Runnable.Array_Contains(DateTime(), DateTime)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Contains(System.DateTime(), System.DateTime)
  name.vb: Array_Contains(DateTime(), DateTime)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.UInt64[],System.UInt64)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.UInt64[],System.UInt64)
  id: Array_IndexOf(System.UInt64[],System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(UInt64[], UInt64)
  nameWithType: Runnable.Array_IndexOf(UInt64[], UInt64)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.UInt64[], System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1217
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(ulong[] array, ulong value)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив
    - id: value
      type: System.UInt64
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As ULong(), value As ULong) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(UInt64(), UInt64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.UInt64(), System.UInt64)
  name.vb: Array_IndexOf(UInt64(), UInt64)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Int64[],System.Int64)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Int64[],System.Int64)
  id: Array_IndexOf(System.Int64[],System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Int64[], Int64)
  nameWithType: Runnable.Array_IndexOf(Int64[], Int64)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Int64[], System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1225
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(long[] array, long value)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив
    - id: value
      type: System.Int64
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Long(), value As Long) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Int64(), Int64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Int64(), System.Int64)
  name.vb: Array_IndexOf(Int64(), Int64)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.UInt32[],System.UInt32)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.UInt32[],System.UInt32)
  id: Array_IndexOf(System.UInt32[],System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(UInt32[], UInt32)
  nameWithType: Runnable.Array_IndexOf(UInt32[], UInt32)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.UInt32[], System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1233
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(uint[] array, uint value)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив
    - id: value
      type: System.UInt32
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As UInteger(), value As UInteger) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(UInt32(), UInt32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.UInt32(), System.UInt32)
  name.vb: Array_IndexOf(UInt32(), UInt32)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Int32[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Int32[],System.Int32)
  id: Array_IndexOf(System.Int32[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Int32[], Int32)
  nameWithType: Runnable.Array_IndexOf(Int32[], Int32)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1241
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(int[] array, int value)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив
    - id: value
      type: System.Int32
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Integer(), value As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Int32(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Int32(), System.Int32)
  name.vb: Array_IndexOf(Int32(), Int32)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.UInt16[],System.UInt16)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.UInt16[],System.UInt16)
  id: Array_IndexOf(System.UInt16[],System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(UInt16[], UInt16)
  nameWithType: Runnable.Array_IndexOf(UInt16[], UInt16)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.UInt16[], System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1249
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(ushort[] array, ushort value)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив
    - id: value
      type: System.UInt16
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As UShort(), value As UShort) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(UInt16(), UInt16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.UInt16(), System.UInt16)
  name.vb: Array_IndexOf(UInt16(), UInt16)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Int16[],System.Int16)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Int16[],System.Int16)
  id: Array_IndexOf(System.Int16[],System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Int16[], Int16)
  nameWithType: Runnable.Array_IndexOf(Int16[], Int16)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Int16[], System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1257
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(short[] array, short value)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив
    - id: value
      type: System.Int16
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Short(), value As Short) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Int16(), Int16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Int16(), System.Int16)
  name.vb: Array_IndexOf(Int16(), Int16)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Byte[],System.Byte)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Byte[],System.Byte)
  id: Array_IndexOf(System.Byte[],System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Byte[], Byte)
  nameWithType: Runnable.Array_IndexOf(Byte[], Byte)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Byte[], System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1265
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(byte[] array, byte value)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив
    - id: value
      type: System.Byte
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Byte(), value As Byte) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Byte(), Byte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Byte(), System.Byte)
  name.vb: Array_IndexOf(Byte(), Byte)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.SByte[],System.SByte)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.SByte[],System.SByte)
  id: Array_IndexOf(System.SByte[],System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(SByte[], SByte)
  nameWithType: Runnable.Array_IndexOf(SByte[], SByte)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.SByte[], System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1273
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(sbyte[] array, sbyte value)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив
    - id: value
      type: System.SByte
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As SByte(), value As SByte) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(SByte(), SByte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.SByte(), System.SByte)
  name.vb: Array_IndexOf(SByte(), SByte)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Decimal[],System.Decimal)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Decimal[],System.Decimal)
  id: Array_IndexOf(System.Decimal[],System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Decimal[], Decimal)
  nameWithType: Runnable.Array_IndexOf(Decimal[], Decimal)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Decimal[], System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1281
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(decimal[] array, decimal value)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив
    - id: value
      type: System.Decimal
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Decimal(), value As Decimal) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Decimal(), Decimal)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Decimal(), System.Decimal)
  name.vb: Array_IndexOf(Decimal(), Decimal)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Double[],System.Double)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Double[],System.Double)
  id: Array_IndexOf(System.Double[],System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Double[], Double)
  nameWithType: Runnable.Array_IndexOf(Double[], Double)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Double[], System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1289
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(double[] array, double value)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив
    - id: value
      type: System.Double
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Double(), value As Double) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Double(), Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Double(), System.Double)
  name.vb: Array_IndexOf(Double(), Double)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Single[],System.Single)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Single[],System.Single)
  id: Array_IndexOf(System.Single[],System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Single[], Single)
  nameWithType: Runnable.Array_IndexOf(Single[], Single)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1297
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(float[] array, float value)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив
    - id: value
      type: System.Single
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Single(), value As Single) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Single(), Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Single(), System.Single)
  name.vb: Array_IndexOf(Single(), Single)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Char[],System.Char)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Char[],System.Char)
  id: Array_IndexOf(System.Char[],System.Char)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Char[], Char)
  nameWithType: Runnable.Array_IndexOf(Char[], Char)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Char[], System.Char)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1305
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(char[] array, char value)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив
    - id: value
      type: System.Char
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Char(), value As Char) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Char(), Char)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Char(), System.Char)
  name.vb: Array_IndexOf(Char(), Char)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.String[],System.String)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.String[],System.String)
  id: Array_IndexOf(System.String[],System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(String[], String)
  nameWithType: Runnable.Array_IndexOf(String[], String)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.String[], System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1313
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(string[] array, string value)
    parameters:
    - id: array
      type: System.String[]
      description: Массив
    - id: value
      type: System.String
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As String(), value As String) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(String(), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.String(), System.String)
  name.vb: Array_IndexOf(String(), String)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.Boolean[],System.Boolean)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.Boolean[],System.Boolean)
  id: Array_IndexOf(System.Boolean[],System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(Boolean[], Boolean)
  nameWithType: Runnable.Array_IndexOf(Boolean[], Boolean)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.Boolean[], System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1321
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(bool[] array, bool value)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив
    - id: value
      type: System.Boolean
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Boolean(), value As Boolean) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(Boolean(), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.Boolean(), System.Boolean)
  name.vb: Array_IndexOf(Boolean(), Boolean)
- uid: BMVE.Core.Runnable.Array_IndexOf(System.DateTime[],System.DateTime)
  commentId: M:BMVE.Core.Runnable.Array_IndexOf(System.DateTime[],System.DateTime)
  id: Array_IndexOf(System.DateTime[],System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_IndexOf(DateTime[], DateTime)
  nameWithType: Runnable.Array_IndexOf(DateTime[], DateTime)
  fullName: BMVE.Core.Runnable.Array_IndexOf(System.DateTime[], System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_IndexOf
    path: API/Runnable.Array.cs
    startLine: 1329
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию первого найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_IndexOf(DateTime[] array, DateTime value)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив
    - id: value
      type: System.DateTime
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_IndexOf(array As Date(), value As Date) As Integer
  overload: BMVE.Core.Runnable.Array_IndexOf*
  nameWithType.vb: Runnable.Array_IndexOf(DateTime(), DateTime)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_IndexOf(System.DateTime(), System.DateTime)
  name.vb: Array_IndexOf(DateTime(), DateTime)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt64[],System.UInt64)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.UInt64[],System.UInt64)
  id: Array_LastIndexOf(System.UInt64[],System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(UInt64[], UInt64)
  nameWithType: Runnable.Array_LastIndexOf(UInt64[], UInt64)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt64[], System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1337
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(ulong[] array, ulong value)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Массив
    - id: value
      type: System.UInt64
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As ULong(), value As ULong) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(UInt64(), UInt64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt64(), System.UInt64)
  name.vb: Array_LastIndexOf(UInt64(), UInt64)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Int64[],System.Int64)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Int64[],System.Int64)
  id: Array_LastIndexOf(System.Int64[],System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Int64[], Int64)
  nameWithType: Runnable.Array_LastIndexOf(Int64[], Int64)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Int64[], System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1345
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(long[] array, long value)
    parameters:
    - id: array
      type: System.Int64[]
      description: Массив
    - id: value
      type: System.Int64
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Long(), value As Long) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Int64(), Int64)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Int64(), System.Int64)
  name.vb: Array_LastIndexOf(Int64(), Int64)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt32[],System.UInt32)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.UInt32[],System.UInt32)
  id: Array_LastIndexOf(System.UInt32[],System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(UInt32[], UInt32)
  nameWithType: Runnable.Array_LastIndexOf(UInt32[], UInt32)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt32[], System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1353
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(uint[] array, uint value)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Массив
    - id: value
      type: System.UInt32
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As UInteger(), value As UInteger) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(UInt32(), UInt32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt32(), System.UInt32)
  name.vb: Array_LastIndexOf(UInt32(), UInt32)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Int32[],System.Int32)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Int32[],System.Int32)
  id: Array_LastIndexOf(System.Int32[],System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Int32[], Int32)
  nameWithType: Runnable.Array_LastIndexOf(Int32[], Int32)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1361
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(int[] array, int value)
    parameters:
    - id: array
      type: System.Int32[]
      description: Массив
    - id: value
      type: System.Int32
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Integer(), value As Integer) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Int32(), Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Int32(), System.Int32)
  name.vb: Array_LastIndexOf(Int32(), Int32)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt16[],System.UInt16)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.UInt16[],System.UInt16)
  id: Array_LastIndexOf(System.UInt16[],System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(UInt16[], UInt16)
  nameWithType: Runnable.Array_LastIndexOf(UInt16[], UInt16)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt16[], System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1369
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(ushort[] array, ushort value)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Массив
    - id: value
      type: System.UInt16
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As UShort(), value As UShort) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(UInt16(), UInt16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.UInt16(), System.UInt16)
  name.vb: Array_LastIndexOf(UInt16(), UInt16)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Int16[],System.Int16)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Int16[],System.Int16)
  id: Array_LastIndexOf(System.Int16[],System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Int16[], Int16)
  nameWithType: Runnable.Array_LastIndexOf(Int16[], Int16)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Int16[], System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1377
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(short[] array, short value)
    parameters:
    - id: array
      type: System.Int16[]
      description: Массив
    - id: value
      type: System.Int16
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Short(), value As Short) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Int16(), Int16)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Int16(), System.Int16)
  name.vb: Array_LastIndexOf(Int16(), Int16)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Byte[],System.Byte)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Byte[],System.Byte)
  id: Array_LastIndexOf(System.Byte[],System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Byte[], Byte)
  nameWithType: Runnable.Array_LastIndexOf(Byte[], Byte)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Byte[], System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1385
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(byte[] array, byte value)
    parameters:
    - id: array
      type: System.Byte[]
      description: Массив
    - id: value
      type: System.Byte
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Byte(), value As Byte) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Byte(), Byte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Byte(), System.Byte)
  name.vb: Array_LastIndexOf(Byte(), Byte)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.SByte[],System.SByte)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.SByte[],System.SByte)
  id: Array_LastIndexOf(System.SByte[],System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(SByte[], SByte)
  nameWithType: Runnable.Array_LastIndexOf(SByte[], SByte)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.SByte[], System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1393
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(sbyte[] array, sbyte value)
    parameters:
    - id: array
      type: System.SByte[]
      description: Массив
    - id: value
      type: System.SByte
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As SByte(), value As SByte) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(SByte(), SByte)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.SByte(), System.SByte)
  name.vb: Array_LastIndexOf(SByte(), SByte)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Decimal[],System.Decimal)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Decimal[],System.Decimal)
  id: Array_LastIndexOf(System.Decimal[],System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Decimal[], Decimal)
  nameWithType: Runnable.Array_LastIndexOf(Decimal[], Decimal)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Decimal[], System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1401
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(decimal[] array, decimal value)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Массив
    - id: value
      type: System.Decimal
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Decimal(), value As Decimal) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Decimal(), Decimal)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Decimal(), System.Decimal)
  name.vb: Array_LastIndexOf(Decimal(), Decimal)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Double[],System.Double)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Double[],System.Double)
  id: Array_LastIndexOf(System.Double[],System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Double[], Double)
  nameWithType: Runnable.Array_LastIndexOf(Double[], Double)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Double[], System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1409
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(double[] array, double value)
    parameters:
    - id: array
      type: System.Double[]
      description: Массив
    - id: value
      type: System.Double
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Double(), value As Double) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Double(), Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Double(), System.Double)
  name.vb: Array_LastIndexOf(Double(), Double)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Single[],System.Single)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Single[],System.Single)
  id: Array_LastIndexOf(System.Single[],System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Single[], Single)
  nameWithType: Runnable.Array_LastIndexOf(Single[], Single)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1417
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(float[] array, float value)
    parameters:
    - id: array
      type: System.Single[]
      description: Массив
    - id: value
      type: System.Single
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Single(), value As Single) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Single(), Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Single(), System.Single)
  name.vb: Array_LastIndexOf(Single(), Single)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Char[],System.Char)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Char[],System.Char)
  id: Array_LastIndexOf(System.Char[],System.Char)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Char[], Char)
  nameWithType: Runnable.Array_LastIndexOf(Char[], Char)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Char[], System.Char)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1425
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(char[] array, char value)
    parameters:
    - id: array
      type: System.Char[]
      description: Массив
    - id: value
      type: System.Char
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Char(), value As Char) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Char(), Char)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Char(), System.Char)
  name.vb: Array_LastIndexOf(Char(), Char)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.String[],System.String)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.String[],System.String)
  id: Array_LastIndexOf(System.String[],System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(String[], String)
  nameWithType: Runnable.Array_LastIndexOf(String[], String)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.String[], System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1433
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(string[] array, string value)
    parameters:
    - id: array
      type: System.String[]
      description: Массив
    - id: value
      type: System.String
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As String(), value As String) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(String(), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.String(), System.String)
  name.vb: Array_LastIndexOf(String(), String)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.Boolean[],System.Boolean)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.Boolean[],System.Boolean)
  id: Array_LastIndexOf(System.Boolean[],System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(Boolean[], Boolean)
  nameWithType: Runnable.Array_LastIndexOf(Boolean[], Boolean)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.Boolean[], System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1441
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(bool[] array, bool value)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Массив
    - id: value
      type: System.Boolean
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Boolean(), value As Boolean) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(Boolean(), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.Boolean(), System.Boolean)
  name.vb: Array_LastIndexOf(Boolean(), Boolean)
- uid: BMVE.Core.Runnable.Array_LastIndexOf(System.DateTime[],System.DateTime)
  commentId: M:BMVE.Core.Runnable.Array_LastIndexOf(System.DateTime[],System.DateTime)
  id: Array_LastIndexOf(System.DateTime[],System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_LastIndexOf(DateTime[], DateTime)
  nameWithType: Runnable.Array_LastIndexOf(DateTime[], DateTime)
  fullName: BMVE.Core.Runnable.Array_LastIndexOf(System.DateTime[], System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_LastIndexOf
    path: API/Runnable.Array.cs
    startLine: 1449
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает позицию последнего найденного элемента в массиве, или -1 если элемент не найден\n"
  example: []
  syntax:
    content: protected int Array_LastIndexOf(DateTime[] array, DateTime value)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Массив
    - id: value
      type: System.DateTime
      description: Искомый элемент
    return:
      type: System.Int32
      description: Позиция указанного элемента в массиве или -1, если не найден
    content.vb: Protected Function Array_LastIndexOf(array As Date(), value As Date) As Integer
  overload: BMVE.Core.Runnable.Array_LastIndexOf*
  nameWithType.vb: Runnable.Array_LastIndexOf(DateTime(), DateTime)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_LastIndexOf(System.DateTime(), System.DateTime)
  name.vb: Array_LastIndexOf(DateTime(), DateTime)
- uid: BMVE.Core.Runnable.Array_Copy(System.UInt64[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.UInt64[])
  id: Array_Copy(System.UInt64[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(UInt64[])
  nameWithType: Runnable.Array_Copy(UInt64[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.UInt64[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1456
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected ulong[] Array_Copy(ulong[] array)
    parameters:
    - id: array
      type: System.UInt64[]
      description: Исходный массив
    return:
      type: System.UInt64[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As ULong()) As ULong()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(UInt64())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.UInt64())
  name.vb: Array_Copy(UInt64())
- uid: BMVE.Core.Runnable.Array_Copy(System.Int64[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Int64[])
  id: Array_Copy(System.Int64[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Int64[])
  nameWithType: Runnable.Array_Copy(Int64[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Int64[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1463
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected long[] Array_Copy(long[] array)
    parameters:
    - id: array
      type: System.Int64[]
      description: Исходный массив
    return:
      type: System.Int64[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Long()) As Long()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Int64())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Int64())
  name.vb: Array_Copy(Int64())
- uid: BMVE.Core.Runnable.Array_Copy(System.UInt32[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.UInt32[])
  id: Array_Copy(System.UInt32[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(UInt32[])
  nameWithType: Runnable.Array_Copy(UInt32[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.UInt32[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1470
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected uint[] Array_Copy(uint[] array)
    parameters:
    - id: array
      type: System.UInt32[]
      description: Исходный массив
    return:
      type: System.UInt32[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As UInteger()) As UInteger()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(UInt32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.UInt32())
  name.vb: Array_Copy(UInt32())
- uid: BMVE.Core.Runnable.Array_Copy(System.Int32[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Int32[])
  id: Array_Copy(System.Int32[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Int32[])
  nameWithType: Runnable.Array_Copy(Int32[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Int32[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1477
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected int[] Array_Copy(int[] array)
    parameters:
    - id: array
      type: System.Int32[]
      description: Исходный массив
    return:
      type: System.Int32[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Integer()) As Integer()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Int32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Int32())
  name.vb: Array_Copy(Int32())
- uid: BMVE.Core.Runnable.Array_Copy(System.UInt16[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.UInt16[])
  id: Array_Copy(System.UInt16[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(UInt16[])
  nameWithType: Runnable.Array_Copy(UInt16[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.UInt16[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1484
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected ushort[] Array_Copy(ushort[] array)
    parameters:
    - id: array
      type: System.UInt16[]
      description: Исходный массив
    return:
      type: System.UInt16[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As UShort()) As UShort()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(UInt16())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.UInt16())
  name.vb: Array_Copy(UInt16())
- uid: BMVE.Core.Runnable.Array_Copy(System.Int16[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Int16[])
  id: Array_Copy(System.Int16[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Int16[])
  nameWithType: Runnable.Array_Copy(Int16[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Int16[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1491
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected short[] Array_Copy(short[] array)
    parameters:
    - id: array
      type: System.Int16[]
      description: Исходный массив
    return:
      type: System.Int16[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Short()) As Short()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Int16())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Int16())
  name.vb: Array_Copy(Int16())
- uid: BMVE.Core.Runnable.Array_Copy(System.Byte[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Byte[])
  id: Array_Copy(System.Byte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Byte[])
  nameWithType: Runnable.Array_Copy(Byte[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Byte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1498
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected byte[] Array_Copy(byte[] array)
    parameters:
    - id: array
      type: System.Byte[]
      description: Исходный массив
    return:
      type: System.Byte[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Byte()) As Byte()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Byte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Byte())
  name.vb: Array_Copy(Byte())
- uid: BMVE.Core.Runnable.Array_Copy(System.SByte[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.SByte[])
  id: Array_Copy(System.SByte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(SByte[])
  nameWithType: Runnable.Array_Copy(SByte[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.SByte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1505
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected sbyte[] Array_Copy(sbyte[] array)
    parameters:
    - id: array
      type: System.SByte[]
      description: Исходный массив
    return:
      type: System.SByte[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As SByte()) As SByte()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(SByte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.SByte())
  name.vb: Array_Copy(SByte())
- uid: BMVE.Core.Runnable.Array_Copy(System.Decimal[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Decimal[])
  id: Array_Copy(System.Decimal[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Decimal[])
  nameWithType: Runnable.Array_Copy(Decimal[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Decimal[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1512
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected decimal[] Array_Copy(decimal[] array)
    parameters:
    - id: array
      type: System.Decimal[]
      description: Исходный массив
    return:
      type: System.Decimal[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Decimal()) As Decimal()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Decimal())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Decimal())
  name.vb: Array_Copy(Decimal())
- uid: BMVE.Core.Runnable.Array_Copy(System.Double[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Double[])
  id: Array_Copy(System.Double[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Double[])
  nameWithType: Runnable.Array_Copy(Double[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Double[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1519
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected double[] Array_Copy(double[] array)
    parameters:
    - id: array
      type: System.Double[]
      description: Исходный массив
    return:
      type: System.Double[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Double()) As Double()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Double())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Double())
  name.vb: Array_Copy(Double())
- uid: BMVE.Core.Runnable.Array_Copy(System.Single[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Single[])
  id: Array_Copy(System.Single[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Single[])
  nameWithType: Runnable.Array_Copy(Single[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Single[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1526
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected float[] Array_Copy(float[] array)
    parameters:
    - id: array
      type: System.Single[]
      description: Исходный массив
    return:
      type: System.Single[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Single()) As Single()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Single())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Single())
  name.vb: Array_Copy(Single())
- uid: BMVE.Core.Runnable.Array_Copy(System.Char[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Char[])
  id: Array_Copy(System.Char[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Char[])
  nameWithType: Runnable.Array_Copy(Char[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Char[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1533
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected char[] Array_Copy(char[] array)
    parameters:
    - id: array
      type: System.Char[]
      description: Исходный массив
    return:
      type: System.Char[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Char()) As Char()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Char())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Char())
  name.vb: Array_Copy(Char())
- uid: BMVE.Core.Runnable.Array_Copy(System.String[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.String[])
  id: Array_Copy(System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(String[])
  nameWithType: Runnable.Array_Copy(String[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1540
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected string[] Array_Copy(string[] array)
    parameters:
    - id: array
      type: System.String[]
      description: Исходный массив
    return:
      type: System.String[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As String()) As String()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.String())
  name.vb: Array_Copy(String())
- uid: BMVE.Core.Runnable.Array_Copy(System.Boolean[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.Boolean[])
  id: Array_Copy(System.Boolean[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(Boolean[])
  nameWithType: Runnable.Array_Copy(Boolean[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.Boolean[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1547
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected bool[] Array_Copy(bool[] array)
    parameters:
    - id: array
      type: System.Boolean[]
      description: Исходный массив
    return:
      type: System.Boolean[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Boolean()) As Boolean()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(Boolean())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.Boolean())
  name.vb: Array_Copy(Boolean())
- uid: BMVE.Core.Runnable.Array_Copy(System.DateTime[])
  commentId: M:BMVE.Core.Runnable.Array_Copy(System.DateTime[])
  id: Array_Copy(System.DateTime[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Copy(DateTime[])
  nameWithType: Runnable.Array_Copy(DateTime[])
  fullName: BMVE.Core.Runnable.Array_Copy(System.DateTime[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Copy
    path: API/Runnable.Array.cs
    startLine: 1554
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию массива\n"
  example: []
  syntax:
    content: protected DateTime[] Array_Copy(DateTime[] array)
    parameters:
    - id: array
      type: System.DateTime[]
      description: Исходный массив
    return:
      type: System.DateTime[]
      description: Копия массива
    content.vb: Protected Function Array_Copy(array As Date()) As Date()
  overload: BMVE.Core.Runnable.Array_Copy*
  nameWithType.vb: Runnable.Array_Copy(DateTime())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Copy(System.DateTime())
  name.vb: Array_Copy(DateTime())
- uid: BMVE.Core.Runnable.Array_Concat(System.UInt64[],System.UInt64[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.UInt64[],System.UInt64[])
  id: Array_Concat(System.UInt64[],System.UInt64[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(UInt64[], UInt64[])
  nameWithType: Runnable.Array_Concat(UInt64[], UInt64[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.UInt64[], System.UInt64[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1562
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected ulong[] Array_Concat(ulong[] arrayA, ulong[] arrayB)
    parameters:
    - id: arrayA
      type: System.UInt64[]
      description: Первый массив
    - id: arrayB
      type: System.UInt64[]
      description: Второй массив
    return:
      type: System.UInt64[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As ULong(), arrayB As ULong()) As ULong()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(UInt64(), UInt64())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.UInt64(), System.UInt64())
  name.vb: Array_Concat(UInt64(), UInt64())
- uid: BMVE.Core.Runnable.Array_Concat(System.Int64[],System.Int64[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Int64[],System.Int64[])
  id: Array_Concat(System.Int64[],System.Int64[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Int64[], Int64[])
  nameWithType: Runnable.Array_Concat(Int64[], Int64[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Int64[], System.Int64[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1570
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected long[] Array_Concat(long[] arrayA, long[] arrayB)
    parameters:
    - id: arrayA
      type: System.Int64[]
      description: Первый массив
    - id: arrayB
      type: System.Int64[]
      description: Второй массив
    return:
      type: System.Int64[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Long(), arrayB As Long()) As Long()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Int64(), Int64())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Int64(), System.Int64())
  name.vb: Array_Concat(Int64(), Int64())
- uid: BMVE.Core.Runnable.Array_Concat(System.UInt32[],System.UInt32[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.UInt32[],System.UInt32[])
  id: Array_Concat(System.UInt32[],System.UInt32[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(UInt32[], UInt32[])
  nameWithType: Runnable.Array_Concat(UInt32[], UInt32[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.UInt32[], System.UInt32[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1578
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected uint[] Array_Concat(uint[] arrayA, uint[] arrayB)
    parameters:
    - id: arrayA
      type: System.UInt32[]
      description: Первый массив
    - id: arrayB
      type: System.UInt32[]
      description: Второй массив
    return:
      type: System.UInt32[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As UInteger(), arrayB As UInteger()) As UInteger()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(UInt32(), UInt32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.UInt32(), System.UInt32())
  name.vb: Array_Concat(UInt32(), UInt32())
- uid: BMVE.Core.Runnable.Array_Concat(System.Int32[],System.Int32[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Int32[],System.Int32[])
  id: Array_Concat(System.Int32[],System.Int32[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Int32[], Int32[])
  nameWithType: Runnable.Array_Concat(Int32[], Int32[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Int32[], System.Int32[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1586
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected int[] Array_Concat(int[] arrayA, int[] arrayB)
    parameters:
    - id: arrayA
      type: System.Int32[]
      description: Первый массив
    - id: arrayB
      type: System.Int32[]
      description: Второй массив
    return:
      type: System.Int32[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Integer(), arrayB As Integer()) As Integer()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Int32(), Int32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Int32(), System.Int32())
  name.vb: Array_Concat(Int32(), Int32())
- uid: BMVE.Core.Runnable.Array_Concat(System.UInt16[],System.UInt16[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.UInt16[],System.UInt16[])
  id: Array_Concat(System.UInt16[],System.UInt16[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(UInt16[], UInt16[])
  nameWithType: Runnable.Array_Concat(UInt16[], UInt16[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.UInt16[], System.UInt16[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1594
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected ushort[] Array_Concat(ushort[] arrayA, ushort[] arrayB)
    parameters:
    - id: arrayA
      type: System.UInt16[]
      description: Первый массив
    - id: arrayB
      type: System.UInt16[]
      description: Второй массив
    return:
      type: System.UInt16[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As UShort(), arrayB As UShort()) As UShort()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(UInt16(), UInt16())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.UInt16(), System.UInt16())
  name.vb: Array_Concat(UInt16(), UInt16())
- uid: BMVE.Core.Runnable.Array_Concat(System.Int16[],System.Int16[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Int16[],System.Int16[])
  id: Array_Concat(System.Int16[],System.Int16[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Int16[], Int16[])
  nameWithType: Runnable.Array_Concat(Int16[], Int16[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Int16[], System.Int16[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1602
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected short[] Array_Concat(short[] arrayA, short[] arrayB)
    parameters:
    - id: arrayA
      type: System.Int16[]
      description: Первый массив
    - id: arrayB
      type: System.Int16[]
      description: Второй массив
    return:
      type: System.Int16[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Short(), arrayB As Short()) As Short()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Int16(), Int16())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Int16(), System.Int16())
  name.vb: Array_Concat(Int16(), Int16())
- uid: BMVE.Core.Runnable.Array_Concat(System.Byte[],System.Byte[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Byte[],System.Byte[])
  id: Array_Concat(System.Byte[],System.Byte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Byte[], Byte[])
  nameWithType: Runnable.Array_Concat(Byte[], Byte[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1610
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected byte[] Array_Concat(byte[] arrayA, byte[] arrayB)
    parameters:
    - id: arrayA
      type: System.Byte[]
      description: Первый массив
    - id: arrayB
      type: System.Byte[]
      description: Второй массив
    return:
      type: System.Byte[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Byte(), arrayB As Byte()) As Byte()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Byte(), Byte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Byte(), System.Byte())
  name.vb: Array_Concat(Byte(), Byte())
- uid: BMVE.Core.Runnable.Array_Concat(System.SByte[],System.SByte[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.SByte[],System.SByte[])
  id: Array_Concat(System.SByte[],System.SByte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(SByte[], SByte[])
  nameWithType: Runnable.Array_Concat(SByte[], SByte[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.SByte[], System.SByte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1618
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected sbyte[] Array_Concat(sbyte[] arrayA, sbyte[] arrayB)
    parameters:
    - id: arrayA
      type: System.SByte[]
      description: Первый массив
    - id: arrayB
      type: System.SByte[]
      description: Второй массив
    return:
      type: System.SByte[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As SByte(), arrayB As SByte()) As SByte()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(SByte(), SByte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.SByte(), System.SByte())
  name.vb: Array_Concat(SByte(), SByte())
- uid: BMVE.Core.Runnable.Array_Concat(System.Decimal[],System.Decimal[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Decimal[],System.Decimal[])
  id: Array_Concat(System.Decimal[],System.Decimal[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Decimal[], Decimal[])
  nameWithType: Runnable.Array_Concat(Decimal[], Decimal[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Decimal[], System.Decimal[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1626
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected decimal[] Array_Concat(decimal[] arrayA, decimal[] arrayB)
    parameters:
    - id: arrayA
      type: System.Decimal[]
      description: Первый массив
    - id: arrayB
      type: System.Decimal[]
      description: Второй массив
    return:
      type: System.Decimal[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Decimal(), arrayB As Decimal()) As Decimal()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Decimal(), Decimal())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Decimal(), System.Decimal())
  name.vb: Array_Concat(Decimal(), Decimal())
- uid: BMVE.Core.Runnable.Array_Concat(System.Double[],System.Double[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Double[],System.Double[])
  id: Array_Concat(System.Double[],System.Double[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Double[], Double[])
  nameWithType: Runnable.Array_Concat(Double[], Double[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1634
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected double[] Array_Concat(double[] arrayA, double[] arrayB)
    parameters:
    - id: arrayA
      type: System.Double[]
      description: Первый массив
    - id: arrayB
      type: System.Double[]
      description: Второй массив
    return:
      type: System.Double[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Double(), arrayB As Double()) As Double()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Double(), Double())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Double(), System.Double())
  name.vb: Array_Concat(Double(), Double())
- uid: BMVE.Core.Runnable.Array_Concat(System.Single[],System.Single[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Single[],System.Single[])
  id: Array_Concat(System.Single[],System.Single[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Single[], Single[])
  nameWithType: Runnable.Array_Concat(Single[], Single[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1642
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected float[] Array_Concat(float[] arrayA, float[] arrayB)
    parameters:
    - id: arrayA
      type: System.Single[]
      description: Первый массив
    - id: arrayB
      type: System.Single[]
      description: Второй массив
    return:
      type: System.Single[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Single(), arrayB As Single()) As Single()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Single(), Single())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Single(), System.Single())
  name.vb: Array_Concat(Single(), Single())
- uid: BMVE.Core.Runnable.Array_Concat(System.Char[],System.Char[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Char[],System.Char[])
  id: Array_Concat(System.Char[],System.Char[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Char[], Char[])
  nameWithType: Runnable.Array_Concat(Char[], Char[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Char[], System.Char[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1650
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected char[] Array_Concat(char[] arrayA, char[] arrayB)
    parameters:
    - id: arrayA
      type: System.Char[]
      description: Первый массив
    - id: arrayB
      type: System.Char[]
      description: Второй массив
    return:
      type: System.Char[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Char(), arrayB As Char()) As Char()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Char(), Char())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Char(), System.Char())
  name.vb: Array_Concat(Char(), Char())
- uid: BMVE.Core.Runnable.Array_Concat(System.String[],System.String[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.String[],System.String[])
  id: Array_Concat(System.String[],System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(String[], String[])
  nameWithType: Runnable.Array_Concat(String[], String[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.String[], System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1658
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected string[] Array_Concat(string[] arrayA, string[] arrayB)
    parameters:
    - id: arrayA
      type: System.String[]
      description: Первый массив
    - id: arrayB
      type: System.String[]
      description: Второй массив
    return:
      type: System.String[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As String(), arrayB As String()) As String()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(String(), String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.String(), System.String())
  name.vb: Array_Concat(String(), String())
- uid: BMVE.Core.Runnable.Array_Concat(System.Boolean[],System.Boolean[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.Boolean[],System.Boolean[])
  id: Array_Concat(System.Boolean[],System.Boolean[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(Boolean[], Boolean[])
  nameWithType: Runnable.Array_Concat(Boolean[], Boolean[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.Boolean[], System.Boolean[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1666
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected bool[] Array_Concat(bool[] arrayA, bool[] arrayB)
    parameters:
    - id: arrayA
      type: System.Boolean[]
      description: Первый массив
    - id: arrayB
      type: System.Boolean[]
      description: Второй массив
    return:
      type: System.Boolean[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Boolean(), arrayB As Boolean()) As Boolean()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(Boolean(), Boolean())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.Boolean(), System.Boolean())
  name.vb: Array_Concat(Boolean(), Boolean())
- uid: BMVE.Core.Runnable.Array_Concat(System.DateTime[],System.DateTime[])
  commentId: M:BMVE.Core.Runnable.Array_Concat(System.DateTime[],System.DateTime[])
  id: Array_Concat(System.DateTime[],System.DateTime[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Array_Concat(DateTime[], DateTime[])
  nameWithType: Runnable.Array_Concat(DateTime[], DateTime[])
  fullName: BMVE.Core.Runnable.Array_Concat(System.DateTime[], System.DateTime[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Array.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Array_Concat
    path: API/Runnable.Array.cs
    startLine: 1674
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСцепляет два массива\n"
  example: []
  syntax:
    content: protected DateTime[] Array_Concat(DateTime[] arrayA, DateTime[] arrayB)
    parameters:
    - id: arrayA
      type: System.DateTime[]
      description: Первый массив
    - id: arrayB
      type: System.DateTime[]
      description: Второй массив
    return:
      type: System.DateTime[]
      description: Массив, состоящий из элементов массивов, указанных в параметрах
    content.vb: Protected Function Array_Concat(arrayA As Date(), arrayB As Date()) As Date()
  overload: BMVE.Core.Runnable.Array_Concat*
  nameWithType.vb: Runnable.Array_Concat(DateTime(), DateTime())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Array_Concat(System.DateTime(), System.DateTime())
  name.vb: Array_Concat(DateTime(), DateTime())
- uid: BMVE.Core.Runnable.Convert_ToInt(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.String)
  id: Convert_ToInt(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(String)
  nameWithType: Runnable.Convert_ToInt(String)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As String) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.UInt32)
  id: Convert_ToInt(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(UInt32)
  nameWithType: Runnable.Convert_ToInt(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 23
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As UInteger) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Int64)
  id: Convert_ToInt(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Int64)
  nameWithType: Runnable.Convert_ToInt(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 30
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Long) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.UInt64)
  id: Convert_ToInt(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(UInt64)
  nameWithType: Runnable.Convert_ToInt(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 37
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As ULong) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Int16)
  id: Convert_ToInt(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Int16)
  nameWithType: Runnable.Convert_ToInt(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 44
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Short) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.UInt16)
  id: Convert_ToInt(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(UInt16)
  nameWithType: Runnable.Convert_ToInt(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 51
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As UShort) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Byte)
  id: Convert_ToInt(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Byte)
  nameWithType: Runnable.Convert_ToInt(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 58
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Byte) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.SByte)
  id: Convert_ToInt(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(SByte)
  nameWithType: Runnable.Convert_ToInt(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 65
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As SByte) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Decimal)
  id: Convert_ToInt(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Decimal)
  nameWithType: Runnable.Convert_ToInt(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 72
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Decimal) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Double)
  id: Convert_ToInt(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Double)
  nameWithType: Runnable.Convert_ToInt(Double)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 79
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Double) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Single)
  id: Convert_ToInt(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Single)
  nameWithType: Runnable.Convert_ToInt(Single)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 86
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Single) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToInt(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToInt(System.Boolean)
  id: Convert_ToInt(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToInt(Boolean)
  nameWithType: Runnable.Convert_ToInt(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToInt(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToInt
    path: API/Runnable.Convert.cs
    startLine: 93
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> (System.Int32) - целое число 4 байта со знаком\n"
  example: []
  syntax:
    content: protected int Convert_ToInt(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Int32
      description: Преобразованное к типу <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToInt(value As Boolean) As Integer
  overload: BMVE.Core.Runnable.Convert_ToInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.String)
  id: Convert_ToUInt(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(String)
  nameWithType: Runnable.Convert_ToUInt(String)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 100
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As String) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Int32)
  id: Convert_ToUInt(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Int32)
  nameWithType: Runnable.Convert_ToUInt(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 107
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Integer) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Int64)
  id: Convert_ToUInt(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Int64)
  nameWithType: Runnable.Convert_ToUInt(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 114
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Long) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.UInt64)
  id: Convert_ToUInt(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(UInt64)
  nameWithType: Runnable.Convert_ToUInt(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 121
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As ULong) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Int16)
  id: Convert_ToUInt(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Int16)
  nameWithType: Runnable.Convert_ToUInt(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 128
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Short) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.UInt16)
  id: Convert_ToUInt(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(UInt16)
  nameWithType: Runnable.Convert_ToUInt(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 135
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As UShort) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Byte)
  id: Convert_ToUInt(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Byte)
  nameWithType: Runnable.Convert_ToUInt(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 142
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Byte) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.SByte)
  id: Convert_ToUInt(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(SByte)
  nameWithType: Runnable.Convert_ToUInt(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 149
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As SByte) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Decimal)
  id: Convert_ToUInt(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Decimal)
  nameWithType: Runnable.Convert_ToUInt(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 156
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Decimal) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Double)
  id: Convert_ToUInt(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Double)
  nameWithType: Runnable.Convert_ToUInt(Double)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 163
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Double) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Single)
  id: Convert_ToUInt(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Single)
  nameWithType: Runnable.Convert_ToUInt(Single)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 170
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Single) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUInt(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToUInt(System.Boolean)
  id: Convert_ToUInt(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUInt(Boolean)
  nameWithType: Runnable.Convert_ToUInt(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToUInt(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUInt
    path: API/Runnable.Convert.cs
    startLine: 177
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt32) - целое число 4 байта без знака\n"
  example: []
  syntax:
    content: protected uint Convert_ToUInt(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.UInt32
      description: Преобразованное к типу <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUInt(value As Boolean) As UInteger
  overload: BMVE.Core.Runnable.Convert_ToUInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.String)
  id: Convert_ToLong(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(String)
  nameWithType: Runnable.Convert_ToLong(String)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 184
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As String) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.UInt32)
  id: Convert_ToLong(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(UInt32)
  nameWithType: Runnable.Convert_ToLong(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 191
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As UInteger) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Int32)
  id: Convert_ToLong(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Int32)
  nameWithType: Runnable.Convert_ToLong(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 198
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Integer) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.UInt64)
  id: Convert_ToLong(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(UInt64)
  nameWithType: Runnable.Convert_ToLong(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 205
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As ULong) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Int16)
  id: Convert_ToLong(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Int16)
  nameWithType: Runnable.Convert_ToLong(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 212
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Short) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.UInt16)
  id: Convert_ToLong(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(UInt16)
  nameWithType: Runnable.Convert_ToLong(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 219
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As UShort) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Byte)
  id: Convert_ToLong(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Byte)
  nameWithType: Runnable.Convert_ToLong(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 226
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Byte) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.SByte)
  id: Convert_ToLong(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(SByte)
  nameWithType: Runnable.Convert_ToLong(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 233
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As SByte) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Decimal)
  id: Convert_ToLong(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Decimal)
  nameWithType: Runnable.Convert_ToLong(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 240
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Decimal) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Double)
  id: Convert_ToLong(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Double)
  nameWithType: Runnable.Convert_ToLong(Double)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 247
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Double) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Single)
  id: Convert_ToLong(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Single)
  nameWithType: Runnable.Convert_ToLong(Single)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 254
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Single) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToLong(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToLong(System.Boolean)
  id: Convert_ToLong(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToLong(Boolean)
  nameWithType: Runnable.Convert_ToLong(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToLong(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToLong
    path: API/Runnable.Convert.cs
    startLine: 261
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> (System.Int64) - целое число 8 байта со знаком\n"
  example: []
  syntax:
    content: protected long Convert_ToLong(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Int64
      description: Преобразованное к типу <xref href="System.Int64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToLong(value As Boolean) As Long
  overload: BMVE.Core.Runnable.Convert_ToLong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.String)
  id: Convert_ToULong(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(String)
  nameWithType: Runnable.Convert_ToULong(String)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 268
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As String) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.UInt32)
  id: Convert_ToULong(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(UInt32)
  nameWithType: Runnable.Convert_ToULong(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 275
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As UInteger) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Int32)
  id: Convert_ToULong(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Int32)
  nameWithType: Runnable.Convert_ToULong(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 282
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Integer) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Int64)
  id: Convert_ToULong(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Int64)
  nameWithType: Runnable.Convert_ToULong(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 289
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Long) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Int16)
  id: Convert_ToULong(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Int16)
  nameWithType: Runnable.Convert_ToULong(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 296
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Short) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.UInt16)
  id: Convert_ToULong(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(UInt16)
  nameWithType: Runnable.Convert_ToULong(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 303
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As UShort) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Byte)
  id: Convert_ToULong(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Byte)
  nameWithType: Runnable.Convert_ToULong(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 310
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Byte) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.SByte)
  id: Convert_ToULong(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(SByte)
  nameWithType: Runnable.Convert_ToULong(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 317
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As SByte) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Decimal)
  id: Convert_ToULong(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Decimal)
  nameWithType: Runnable.Convert_ToULong(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 324
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Decimal) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Double)
  id: Convert_ToULong(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Double)
  nameWithType: Runnable.Convert_ToULong(Double)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 331
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Double) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Single)
  id: Convert_ToULong(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Single)
  nameWithType: Runnable.Convert_ToULong(Single)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 338
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Single) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToULong(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToULong(System.Boolean)
  id: Convert_ToULong(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToULong(Boolean)
  nameWithType: Runnable.Convert_ToULong(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToULong(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToULong
    path: API/Runnable.Convert.cs
    startLine: 345
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt64) - целое число 8 байта без знака\n"
  example: []
  syntax:
    content: protected ulong Convert_ToULong(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.UInt64
      description: Преобразованное к типу <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToULong(value As Boolean) As ULong
  overload: BMVE.Core.Runnable.Convert_ToULong*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.String)
  id: Convert_ToShort(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(String)
  nameWithType: Runnable.Convert_ToShort(String)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 352
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As String) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.UInt32)
  id: Convert_ToShort(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(UInt32)
  nameWithType: Runnable.Convert_ToShort(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 359
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As UInteger) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Int32)
  id: Convert_ToShort(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Int32)
  nameWithType: Runnable.Convert_ToShort(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 366
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Integer) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.UInt16)
  id: Convert_ToShort(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(UInt16)
  nameWithType: Runnable.Convert_ToShort(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 373
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As UShort) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.UInt64)
  id: Convert_ToShort(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(UInt64)
  nameWithType: Runnable.Convert_ToShort(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 380
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As ULong) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Int64)
  id: Convert_ToShort(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Int64)
  nameWithType: Runnable.Convert_ToShort(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 387
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Long) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Byte)
  id: Convert_ToShort(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Byte)
  nameWithType: Runnable.Convert_ToShort(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 394
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Byte) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.SByte)
  id: Convert_ToShort(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(SByte)
  nameWithType: Runnable.Convert_ToShort(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 401
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As SByte) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Decimal)
  id: Convert_ToShort(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Decimal)
  nameWithType: Runnable.Convert_ToShort(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 408
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Decimal) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Double)
  id: Convert_ToShort(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Double)
  nameWithType: Runnable.Convert_ToShort(Double)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 415
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Double) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Single)
  id: Convert_ToShort(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Single)
  nameWithType: Runnable.Convert_ToShort(Single)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 422
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Single) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToShort(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToShort(System.Boolean)
  id: Convert_ToShort(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToShort(Boolean)
  nameWithType: Runnable.Convert_ToShort(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToShort(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToShort
    path: API/Runnable.Convert.cs
    startLine: 429
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> (System.Int16) - целое число 2 байта со знаком\n"
  example: []
  syntax:
    content: protected short Convert_ToShort(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Int16
      description: Преобразованное к типу <xref href="System.Int16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToShort(value As Boolean) As Short
  overload: BMVE.Core.Runnable.Convert_ToShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.String)
  id: Convert_ToUShort(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(String)
  nameWithType: Runnable.Convert_ToUShort(String)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 436
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As String) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.UInt32)
  id: Convert_ToUShort(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(UInt32)
  nameWithType: Runnable.Convert_ToUShort(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 443
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As UInteger) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Int32)
  id: Convert_ToUShort(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Int32)
  nameWithType: Runnable.Convert_ToUShort(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 450
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Integer) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Int64)
  id: Convert_ToUShort(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Int64)
  nameWithType: Runnable.Convert_ToUShort(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 457
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Long) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Int16)
  id: Convert_ToUShort(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Int16)
  nameWithType: Runnable.Convert_ToUShort(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 464
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Short) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.UInt64)
  id: Convert_ToUShort(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(UInt64)
  nameWithType: Runnable.Convert_ToUShort(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 471
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As ULong) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Byte)
  id: Convert_ToUShort(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Byte)
  nameWithType: Runnable.Convert_ToUShort(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 478
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Byte) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.SByte)
  id: Convert_ToUShort(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(SByte)
  nameWithType: Runnable.Convert_ToUShort(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 485
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As SByte) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Decimal)
  id: Convert_ToUShort(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Decimal)
  nameWithType: Runnable.Convert_ToUShort(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 492
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Decimal) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Double)
  id: Convert_ToUShort(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Double)
  nameWithType: Runnable.Convert_ToUShort(Double)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 499
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Double) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Single)
  id: Convert_ToUShort(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Single)
  nameWithType: Runnable.Convert_ToUShort(Single)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 506
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Single) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToUShort(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToUShort(System.Boolean)
  id: Convert_ToUShort(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToUShort(Boolean)
  nameWithType: Runnable.Convert_ToUShort(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToUShort(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToUShort
    path: API/Runnable.Convert.cs
    startLine: 513
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> (System.UInt16) - целое число 2 байта без знака\n"
  example: []
  syntax:
    content: protected ushort Convert_ToUShort(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.UInt16
      description: Преобразованное к типу <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToUShort(value As Boolean) As UShort
  overload: BMVE.Core.Runnable.Convert_ToUShort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.String)
  id: Convert_ToByte(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(String)
  nameWithType: Runnable.Convert_ToByte(String)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 520
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As String) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.UInt32)
  id: Convert_ToByte(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(UInt32)
  nameWithType: Runnable.Convert_ToByte(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 527
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As UInteger) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Int32)
  id: Convert_ToByte(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Int32)
  nameWithType: Runnable.Convert_ToByte(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 534
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Integer) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Int16)
  id: Convert_ToByte(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Int16)
  nameWithType: Runnable.Convert_ToByte(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 541
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Short) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.UInt64)
  id: Convert_ToByte(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(UInt64)
  nameWithType: Runnable.Convert_ToByte(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 548
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As ULong) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Int64)
  id: Convert_ToByte(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Int64)
  nameWithType: Runnable.Convert_ToByte(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 555
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Long) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Byte)
  id: Convert_ToByte(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Byte)
  nameWithType: Runnable.Convert_ToByte(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 562
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Byte) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.UInt16)
  id: Convert_ToByte(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(UInt16)
  nameWithType: Runnable.Convert_ToByte(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 569
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As UShort) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Decimal)
  id: Convert_ToByte(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Decimal)
  nameWithType: Runnable.Convert_ToByte(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 576
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Decimal) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Double)
  id: Convert_ToByte(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Double)
  nameWithType: Runnable.Convert_ToByte(Double)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 583
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Double) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Single)
  id: Convert_ToByte(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Single)
  nameWithType: Runnable.Convert_ToByte(Single)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 590
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Single) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToByte(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToByte(System.Boolean)
  id: Convert_ToByte(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToByte(Boolean)
  nameWithType: Runnable.Convert_ToByte(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToByte(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToByte
    path: API/Runnable.Convert.cs
    startLine: 597
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> (System.Byte) - целое число 1 байт без знака\n"
  example: []
  syntax:
    content: protected byte Convert_ToByte(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Byte
      description: Преобразованное к типу <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToByte(value As Boolean) As Byte
  overload: BMVE.Core.Runnable.Convert_ToByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.String)
  id: Convert_ToSByte(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(String)
  nameWithType: Runnable.Convert_ToSByte(String)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 604
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As String) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.UInt32)
  id: Convert_ToSByte(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(UInt32)
  nameWithType: Runnable.Convert_ToSByte(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 611
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As UInteger) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Int32)
  id: Convert_ToSByte(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Int32)
  nameWithType: Runnable.Convert_ToSByte(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 618
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Integer) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Int64)
  id: Convert_ToSByte(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Int64)
  nameWithType: Runnable.Convert_ToSByte(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 625
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Long) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Byte)
  id: Convert_ToSByte(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Byte)
  nameWithType: Runnable.Convert_ToSByte(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 632
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Byte) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.UInt64)
  id: Convert_ToSByte(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(UInt64)
  nameWithType: Runnable.Convert_ToSByte(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 639
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As ULong) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Int16)
  id: Convert_ToSByte(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Int16)
  nameWithType: Runnable.Convert_ToSByte(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 646
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Short) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.UInt16)
  id: Convert_ToSByte(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(UInt16)
  nameWithType: Runnable.Convert_ToSByte(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 653
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As UShort) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Decimal)
  id: Convert_ToSByte(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Decimal)
  nameWithType: Runnable.Convert_ToSByte(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 660
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Decimal) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Double)
  id: Convert_ToSByte(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Double)
  nameWithType: Runnable.Convert_ToSByte(Double)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 667
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Double) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Single)
  id: Convert_ToSByte(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Single)
  nameWithType: Runnable.Convert_ToSByte(Single)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 674
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Single) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToSByte(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToSByte(System.Boolean)
  id: Convert_ToSByte(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToSByte(Boolean)
  nameWithType: Runnable.Convert_ToSByte(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToSByte(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToSByte
    path: API/Runnable.Convert.cs
    startLine: 681
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> (System.SByte) - целое число 1 байт со знаком\n"
  example: []
  syntax:
    content: protected sbyte Convert_ToSByte(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.SByte
      description: Преобразованное к типу <xref href="System.SByte" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToSByte(value As Boolean) As SByte
  overload: BMVE.Core.Runnable.Convert_ToSByte*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.String)
  id: Convert_ToDouble(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(String)
  nameWithType: Runnable.Convert_ToDouble(String)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 688
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As String) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.UInt32)
  id: Convert_ToDouble(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(UInt32)
  nameWithType: Runnable.Convert_ToDouble(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 695
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As UInteger) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Int32)
  id: Convert_ToDouble(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Int32)
  nameWithType: Runnable.Convert_ToDouble(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 702
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Integer) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Int64)
  id: Convert_ToDouble(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Int64)
  nameWithType: Runnable.Convert_ToDouble(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 709
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Long) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Byte)
  id: Convert_ToDouble(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Byte)
  nameWithType: Runnable.Convert_ToDouble(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 716
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Byte) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.UInt64)
  id: Convert_ToDouble(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(UInt64)
  nameWithType: Runnable.Convert_ToDouble(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 723
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As ULong) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Int16)
  id: Convert_ToDouble(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Int16)
  nameWithType: Runnable.Convert_ToDouble(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 730
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Short) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.UInt16)
  id: Convert_ToDouble(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(UInt16)
  nameWithType: Runnable.Convert_ToDouble(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 737
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As UShort) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Decimal)
  id: Convert_ToDouble(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Decimal)
  nameWithType: Runnable.Convert_ToDouble(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 744
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Decimal) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.SByte)
  id: Convert_ToDouble(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(SByte)
  nameWithType: Runnable.Convert_ToDouble(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 751
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As SByte) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Single)
  id: Convert_ToDouble(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Single)
  nameWithType: Runnable.Convert_ToDouble(Single)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 758
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Single) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDouble(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToDouble(System.Boolean)
  id: Convert_ToDouble(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDouble(Boolean)
  nameWithType: Runnable.Convert_ToDouble(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToDouble(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDouble
    path: API/Runnable.Convert.cs
    startLine: 765
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> (System.Double) - дробное число 8 байт (15 цифр после запятой)\n"
  example: []
  syntax:
    content: protected double Convert_ToDouble(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Double
      description: Преобразованное к типу <xref href="System.Double" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDouble(value As Boolean) As Double
  overload: BMVE.Core.Runnable.Convert_ToDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.String)
  id: Convert_ToFloat(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(String)
  nameWithType: Runnable.Convert_ToFloat(String)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 772
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As String) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.UInt32)
  id: Convert_ToFloat(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(UInt32)
  nameWithType: Runnable.Convert_ToFloat(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 779
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As UInteger) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Int32)
  id: Convert_ToFloat(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Int32)
  nameWithType: Runnable.Convert_ToFloat(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 786
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Integer) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Int64)
  id: Convert_ToFloat(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Int64)
  nameWithType: Runnable.Convert_ToFloat(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 793
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Long) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Byte)
  id: Convert_ToFloat(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Byte)
  nameWithType: Runnable.Convert_ToFloat(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 800
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Byte) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.UInt64)
  id: Convert_ToFloat(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(UInt64)
  nameWithType: Runnable.Convert_ToFloat(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 807
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As ULong) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Int16)
  id: Convert_ToFloat(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Int16)
  nameWithType: Runnable.Convert_ToFloat(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 814
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Short) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.UInt16)
  id: Convert_ToFloat(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(UInt16)
  nameWithType: Runnable.Convert_ToFloat(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 821
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As UShort) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Decimal)
  id: Convert_ToFloat(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Decimal)
  nameWithType: Runnable.Convert_ToFloat(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 828
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Decimal) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.SByte)
  id: Convert_ToFloat(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(SByte)
  nameWithType: Runnable.Convert_ToFloat(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 835
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As SByte) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Double)
  id: Convert_ToFloat(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Double)
  nameWithType: Runnable.Convert_ToFloat(Double)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 842
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Double) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToFloat(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToFloat(System.Boolean)
  id: Convert_ToFloat(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToFloat(Boolean)
  nameWithType: Runnable.Convert_ToFloat(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToFloat(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToFloat
    path: API/Runnable.Convert.cs
    startLine: 849
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> (System.Single) - дробное число 4 байт (6-7 цифр после запятой)\n"
  example: []
  syntax:
    content: protected float Convert_ToFloat(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Single
      description: Преобразованное к типу <xref href="System.Single" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToFloat(value As Boolean) As Single
  overload: BMVE.Core.Runnable.Convert_ToFloat*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.String)
  id: Convert_ToDecimal(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(String)
  nameWithType: Runnable.Convert_ToDecimal(String)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 856
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As String) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.UInt32)
  id: Convert_ToDecimal(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(UInt32)
  nameWithType: Runnable.Convert_ToDecimal(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 863
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As UInteger) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Int32)
  id: Convert_ToDecimal(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Int32)
  nameWithType: Runnable.Convert_ToDecimal(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 870
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Integer) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Int64)
  id: Convert_ToDecimal(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Int64)
  nameWithType: Runnable.Convert_ToDecimal(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 877
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Long) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Byte)
  id: Convert_ToDecimal(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Byte)
  nameWithType: Runnable.Convert_ToDecimal(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 884
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Byte) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.UInt64)
  id: Convert_ToDecimal(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(UInt64)
  nameWithType: Runnable.Convert_ToDecimal(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 891
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As ULong) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Int16)
  id: Convert_ToDecimal(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Int16)
  nameWithType: Runnable.Convert_ToDecimal(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 898
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Short) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.UInt16)
  id: Convert_ToDecimal(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(UInt16)
  nameWithType: Runnable.Convert_ToDecimal(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 905
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As UShort) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Double)
  id: Convert_ToDecimal(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Double)
  nameWithType: Runnable.Convert_ToDecimal(Double)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 912
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Double) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.SByte)
  id: Convert_ToDecimal(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(SByte)
  nameWithType: Runnable.Convert_ToDecimal(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 919
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As SByte) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Single)
  id: Convert_ToDecimal(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Single)
  nameWithType: Runnable.Convert_ToDecimal(Single)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 926
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Single) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToDecimal(System.Boolean)
  commentId: M:BMVE.Core.Runnable.Convert_ToDecimal(System.Boolean)
  id: Convert_ToDecimal(System.Boolean)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToDecimal(Boolean)
  nameWithType: Runnable.Convert_ToDecimal(Boolean)
  fullName: BMVE.Core.Runnable.Convert_ToDecimal(System.Boolean)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToDecimal
    path: API/Runnable.Convert.cs
    startLine: 933
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> (System.Decimal) - дробное число 16 байт (28-29 цифр после запятой)\n"
  example: []
  syntax:
    content: protected decimal Convert_ToDecimal(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: Что преобразовывать
    return:
      type: System.Decimal
      description: Преобразованное к типу <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToDecimal(value As Boolean) As Decimal
  overload: BMVE.Core.Runnable.Convert_ToDecimal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.String)
  id: Convert_ToBoolean(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(String)
  nameWithType: Runnable.Convert_ToBoolean(String)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 940
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As String) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.UInt32)
  id: Convert_ToBoolean(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(UInt32)
  nameWithType: Runnable.Convert_ToBoolean(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 947
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As UInteger) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Int32)
  id: Convert_ToBoolean(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Int32)
  nameWithType: Runnable.Convert_ToBoolean(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 954
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Integer) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Int64)
  id: Convert_ToBoolean(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Int64)
  nameWithType: Runnable.Convert_ToBoolean(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 961
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Long) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Byte)
  id: Convert_ToBoolean(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Byte)
  nameWithType: Runnable.Convert_ToBoolean(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 968
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Byte) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.UInt64)
  id: Convert_ToBoolean(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(UInt64)
  nameWithType: Runnable.Convert_ToBoolean(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 975
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As ULong) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Int16)
  id: Convert_ToBoolean(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Int16)
  nameWithType: Runnable.Convert_ToBoolean(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 982
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Short) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.UInt16)
  id: Convert_ToBoolean(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(UInt16)
  nameWithType: Runnable.Convert_ToBoolean(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 989
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As UShort) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Double)
  id: Convert_ToBoolean(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Double)
  nameWithType: Runnable.Convert_ToBoolean(Double)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 996
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Double) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.SByte)
  id: Convert_ToBoolean(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(SByte)
  nameWithType: Runnable.Convert_ToBoolean(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 1003
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As SByte) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Single)
  id: Convert_ToBoolean(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Single)
  nameWithType: Runnable.Convert_ToBoolean(Single)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 1010
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Single) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToBoolean(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToBoolean(System.Decimal)
  id: Convert_ToBoolean(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToBoolean(Decimal)
  nameWithType: Runnable.Convert_ToBoolean(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToBoolean(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToBoolean
    path: API/Runnable.Convert.cs
    startLine: 1017
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> (System.Boolean) - 1 бит\n"
  example: []
  syntax:
    content: protected bool Convert_ToBoolean(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.Boolean
      description: Преобразованное к типу <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToBoolean(value As Decimal) As Boolean
  overload: BMVE.Core.Runnable.Convert_ToBoolean*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.String)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.String)
  id: Convert_ToString(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(String)
  nameWithType: Runnable.Convert_ToString(String)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1024
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(string value)
    parameters:
    - id: value
      type: System.String
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As String) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.UInt32)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.UInt32)
  id: Convert_ToString(System.UInt32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(UInt32)
  nameWithType: Runnable.Convert_ToString(UInt32)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.UInt32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1031
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As UInteger) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Int32)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Int32)
  id: Convert_ToString(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Int32)
  nameWithType: Runnable.Convert_ToString(Int32)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1038
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(int value)
    parameters:
    - id: value
      type: System.Int32
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Integer) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Int64)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Int64)
  id: Convert_ToString(System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Int64)
  nameWithType: Runnable.Convert_ToString(Int64)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1045
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(long value)
    parameters:
    - id: value
      type: System.Int64
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Long) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Byte)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Byte)
  id: Convert_ToString(System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Byte)
  nameWithType: Runnable.Convert_ToString(Byte)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1052
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Byte) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.UInt64)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.UInt64)
  id: Convert_ToString(System.UInt64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(UInt64)
  nameWithType: Runnable.Convert_ToString(UInt64)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.UInt64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1059
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As ULong) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Int16)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Int16)
  id: Convert_ToString(System.Int16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Int16)
  nameWithType: Runnable.Convert_ToString(Int16)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Int16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1066
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(short value)
    parameters:
    - id: value
      type: System.Int16
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Short) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.UInt16)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.UInt16)
  id: Convert_ToString(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(UInt16)
  nameWithType: Runnable.Convert_ToString(UInt16)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1073
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As UShort) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Double)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Double)
  id: Convert_ToString(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Double)
  nameWithType: Runnable.Convert_ToString(Double)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1080
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(double value)
    parameters:
    - id: value
      type: System.Double
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Double) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.SByte)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.SByte)
  id: Convert_ToString(System.SByte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(SByte)
  nameWithType: Runnable.Convert_ToString(SByte)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.SByte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1087
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(sbyte value)
    parameters:
    - id: value
      type: System.SByte
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As SByte) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Single)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Single)
  id: Convert_ToString(System.Single)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Single)
  nameWithType: Runnable.Convert_ToString(Single)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Single)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1094
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(float value)
    parameters:
    - id: value
      type: System.Single
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Single) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.Decimal)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.Decimal)
  id: Convert_ToString(System.Decimal)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(Decimal)
  nameWithType: Runnable.Convert_ToString(Decimal)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.Decimal)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1101
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Decimal) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Convert_ToString(System.DateTime)
  commentId: M:BMVE.Core.Runnable.Convert_ToString(System.DateTime)
  id: Convert_ToString(System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Convert_ToString(DateTime)
  nameWithType: Runnable.Convert_ToString(DateTime)
  fullName: BMVE.Core.Runnable.Convert_ToString(System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Convert.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Convert_ToString
    path: API/Runnable.Convert.cs
    startLine: 1108
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразование к типу <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> (System.String) - строка текста переменной длины, каждый символ - System.Char (2 байта), кодировка Unicode\n"
  example: []
  syntax:
    content: protected string Convert_ToString(DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: Что преобразовывать
    return:
      type: System.String
      description: Преобразованное к типу <xref href="System.String" data-throw-if-not-resolved="false"></xref> значение
    content.vb: Protected Function Convert_ToString(value As Date) As String
  overload: BMVE.Core.Runnable.Convert_ToString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_Now
  commentId: M:BMVE.Core.Runnable.Datetime_Now
  id: Datetime_Now
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_Now()
  nameWithType: Runnable.Datetime_Now()
  fullName: BMVE.Core.Runnable.Datetime_Now()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_Now
    path: API/Runnable.Datetime.cs
    startLine: 15
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую дату и время\n"
  example: []
  syntax:
    content: protected DateTime Datetime_Now()
    return:
      type: System.DateTime
      description: Текущая дата и время
    content.vb: Protected Function Datetime_Now As Date
  overload: BMVE.Core.Runnable.Datetime_Now*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_UtcNow
  commentId: M:BMVE.Core.Runnable.Datetime_UtcNow
  id: Datetime_UtcNow
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_UtcNow()
  nameWithType: Runnable.Datetime_UtcNow()
  fullName: BMVE.Core.Runnable.Datetime_UtcNow()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_UtcNow
    path: API/Runnable.Datetime.cs
    startLine: 21
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую дату и время в формате UTC\n"
  example: []
  syntax:
    content: protected DateTime Datetime_UtcNow()
    return:
      type: System.DateTime
      description: Текущая дата и время в формате UTC
    content.vb: Protected Function Datetime_UtcNow As Date
  overload: BMVE.Core.Runnable.Datetime_UtcNow*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentDate
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentDate
  id: Datetime_GetCurrentDate
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentDate()
  nameWithType: Runnable.Datetime_GetCurrentDate()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentDate()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentDate
    path: API/Runnable.Datetime.cs
    startLine: 27
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую дату\n"
  example: []
  syntax:
    content: protected DateTime Datetime_GetCurrentDate()
    return:
      type: System.DateTime
      description: Текущая дата
    content.vb: Protected Function Datetime_GetCurrentDate As Date
  overload: BMVE.Core.Runnable.Datetime_GetCurrentDate*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentUtcDate
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentUtcDate
  id: Datetime_GetCurrentUtcDate
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentUtcDate()
  nameWithType: Runnable.Datetime_GetCurrentUtcDate()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentUtcDate()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentUtcDate
    path: API/Runnable.Datetime.cs
    startLine: 33
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую дату в формате UTC\n"
  example: []
  syntax:
    content: protected DateTime Datetime_GetCurrentUtcDate()
    return:
      type: System.DateTime
      description: Текущая дата в формате UTC
    content.vb: Protected Function Datetime_GetCurrentUtcDate As Date
  overload: BMVE.Core.Runnable.Datetime_GetCurrentUtcDate*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentTime
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentTime
  id: Datetime_GetCurrentTime
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentTime()
  nameWithType: Runnable.Datetime_GetCurrentTime()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentTime()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentTime
    path: API/Runnable.Datetime.cs
    startLine: 39
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущее время\n"
  example: []
  syntax:
    content: protected DateTime Datetime_GetCurrentTime()
    return:
      type: System.DateTime
      description: Текущее время
    content.vb: Protected Function Datetime_GetCurrentTime As Date
  overload: BMVE.Core.Runnable.Datetime_GetCurrentTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentUtcTime
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentUtcTime
  id: Datetime_GetCurrentUtcTime
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentUtcTime()
  nameWithType: Runnable.Datetime_GetCurrentUtcTime()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentUtcTime()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentUtcTime
    path: API/Runnable.Datetime.cs
    startLine: 45
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущее время в формате UTC\n"
  example: []
  syntax:
    content: protected DateTime Datetime_GetCurrentUtcTime()
    return:
      type: System.DateTime
      description: Текущее время в формате UTC
    content.vb: Protected Function Datetime_GetCurrentUtcTime As Date
  overload: BMVE.Core.Runnable.Datetime_GetCurrentUtcTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentYear
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentYear
  id: Datetime_GetCurrentYear
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentYear()
  nameWithType: Runnable.Datetime_GetCurrentYear()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentYear()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentYear
    path: API/Runnable.Datetime.cs
    startLine: 51
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущий год\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentYear()
    return:
      type: System.Int32
      description: Текущий год
    content.vb: Protected Function Datetime_GetCurrentYear As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentYear*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentMonth
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentMonth
  id: Datetime_GetCurrentMonth
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentMonth()
  nameWithType: Runnable.Datetime_GetCurrentMonth()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentMonth()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentMonth
    path: API/Runnable.Datetime.cs
    startLine: 57
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущий месяц\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentMonth()
    return:
      type: System.Int32
      description: Текущий месяц
    content.vb: Protected Function Datetime_GetCurrentMonth As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentMonth*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentDay
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentDay
  id: Datetime_GetCurrentDay
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentDay()
  nameWithType: Runnable.Datetime_GetCurrentDay()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentDay()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentDay
    path: API/Runnable.Datetime.cs
    startLine: 63
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущий день\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentDay()
    return:
      type: System.Int32
      description: Текущий день
    content.vb: Protected Function Datetime_GetCurrentDay As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentDay*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek
  id: Datetime_GetCurrentDayOfWeek
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentDayOfWeek()
  nameWithType: Runnable.Datetime_GetCurrentDayOfWeek()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentDayOfWeek
    path: API/Runnable.Datetime.cs
    startLine: 69
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущий день недели\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentDayOfWeek()
    return:
      type: System.Int32
      description: Текущий день недели
    content.vb: Protected Function Datetime_GetCurrentDayOfWeek As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentHour
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentHour
  id: Datetime_GetCurrentHour
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentHour()
  nameWithType: Runnable.Datetime_GetCurrentHour()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentHour()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentHour
    path: API/Runnable.Datetime.cs
    startLine: 75
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущий час\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentHour()
    return:
      type: System.Int32
      description: Текущий час
    content.vb: Protected Function Datetime_GetCurrentHour As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentHour*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentMinutes
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentMinutes
  id: Datetime_GetCurrentMinutes
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentMinutes()
  nameWithType: Runnable.Datetime_GetCurrentMinutes()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentMinutes()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentMinutes
    path: API/Runnable.Datetime.cs
    startLine: 81
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую минуту\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentMinutes()
    return:
      type: System.Int32
      description: Текущая минута
    content.vb: Protected Function Datetime_GetCurrentMinutes As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentMinutes*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentSeconds
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentSeconds
  id: Datetime_GetCurrentSeconds
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentSeconds()
  nameWithType: Runnable.Datetime_GetCurrentSeconds()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentSeconds()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentSeconds
    path: API/Runnable.Datetime.cs
    startLine: 87
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую секунду\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentSeconds()
    return:
      type: System.Int32
      description: Текущая секунда
    content.vb: Protected Function Datetime_GetCurrentSeconds As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentSeconds*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds
  commentId: M:BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds
  id: Datetime_GetCurrentMilliseconds
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_GetCurrentMilliseconds()
  nameWithType: Runnable.Datetime_GetCurrentMilliseconds()
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_GetCurrentMilliseconds
    path: API/Runnable.Datetime.cs
    startLine: 93
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущую миллисекунду\n"
  example: []
  syntax:
    content: protected int Datetime_GetCurrentMilliseconds()
    return:
      type: System.Int32
      description: Текущая миллисекунда
    content.vb: Protected Function Datetime_GetCurrentMilliseconds As Integer
  overload: BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_CreateDate(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Datetime_CreateDate(System.Int32,System.Int32,System.Int32)
  id: Datetime_CreateDate(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_CreateDate(Int32, Int32, Int32)
  nameWithType: Runnable.Datetime_CreateDate(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Datetime_CreateDate(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_CreateDate
    path: API/Runnable.Datetime.cs
    startLine: 102
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает форматированную строку даты\n"
  example: []
  syntax:
    content: protected DateTime Datetime_CreateDate(int year, int month = 1, int day = 1)
    parameters:
    - id: year
      type: System.Int32
      description: Год
    - id: month
      type: System.Int32
      description: Месяц
    - id: day
      type: System.Int32
      description: День
    return:
      type: System.DateTime
      description: Дата
    content.vb: Protected Function Datetime_CreateDate(year As Integer, month As Integer = 1, day As Integer = 1) As Date
  overload: BMVE.Core.Runnable.Datetime_CreateDate*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_CreateDatetime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Datetime_CreateDatetime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Datetime_CreateDatetime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_CreateDatetime(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Datetime_CreateDatetime(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Datetime_CreateDatetime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_CreateDatetime
    path: API/Runnable.Datetime.cs
    startLine: 114
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает форматированную строку даты и времени\n"
  example: []
  syntax:
    content: protected DateTime Datetime_CreateDatetime(int year, int month = 1, int day = 1, int hours = 0, int minutes = 0, int seconds = 0)
    parameters:
    - id: year
      type: System.Int32
      description: Год
    - id: month
      type: System.Int32
      description: Месяц
    - id: day
      type: System.Int32
      description: День
    - id: hours
      type: System.Int32
      description: Час
    - id: minutes
      type: System.Int32
      description: Минута
    - id: seconds
      type: System.Int32
      description: Секунда
    return:
      type: System.DateTime
      description: Дата и время
    content.vb: Protected Function Datetime_CreateDatetime(year As Integer, month As Integer = 1, day As Integer = 1, hours As Integer = 0, minutes As Integer = 0, seconds As Integer = 0) As Date
  overload: BMVE.Core.Runnable.Datetime_CreateDatetime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_CreateTime(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Datetime_CreateTime(System.Int32,System.Int32,System.Int32)
  id: Datetime_CreateTime(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_CreateTime(Int32, Int32, Int32)
  nameWithType: Runnable.Datetime_CreateTime(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Datetime_CreateTime(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_CreateTime
    path: API/Runnable.Datetime.cs
    startLine: 123
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает форматированную строку времени\n"
  example: []
  syntax:
    content: protected DateTime Datetime_CreateTime(int hours = 0, int minutes = 0, int seconds = 0)
    parameters:
    - id: hours
      type: System.Int32
      description: Час
    - id: minutes
      type: System.Int32
      description: Минута
    - id: seconds
      type: System.Int32
      description: Секунда
    return:
      type: System.DateTime
      description: Время
    content.vb: Protected Function Datetime_CreateTime(hours As Integer = 0, minutes As Integer = 0, seconds As Integer = 0) As Date
  overload: BMVE.Core.Runnable.Datetime_CreateTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_Add(System.DateTime,System.DateTime)
  commentId: M:BMVE.Core.Runnable.Datetime_Add(System.DateTime,System.DateTime)
  id: Datetime_Add(System.DateTime,System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_Add(DateTime, DateTime)
  nameWithType: Runnable.Datetime_Add(DateTime, DateTime)
  fullName: BMVE.Core.Runnable.Datetime_Add(System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_Add
    path: API/Runnable.Datetime.cs
    startLine: 131
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСкладывает две <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected DateTime Datetime_Add(DateTime first, DateTime second)
    parameters:
    - id: first
      type: System.DateTime
      description: Первая дата и время
    - id: second
      type: System.DateTime
      description: Вторая дата и время
    return:
      type: System.DateTime
      description: Сумма двух <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Function Datetime_Add(first As Date, second As Date) As Date
  overload: BMVE.Core.Runnable.Datetime_Add*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Datetime_Subtract(System.DateTime,System.DateTime)
  commentId: M:BMVE.Core.Runnable.Datetime_Subtract(System.DateTime,System.DateTime)
  id: Datetime_Subtract(System.DateTime,System.DateTime)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Datetime_Subtract(DateTime, DateTime)
  nameWithType: Runnable.Datetime_Subtract(DateTime, DateTime)
  fullName: BMVE.Core.Runnable.Datetime_Subtract(System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Datetime.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Datetime_Subtract
    path: API/Runnable.Datetime.cs
    startLine: 139
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВычитает <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> из <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected DateTime Datetime_Subtract(DateTime first, DateTime second)
    parameters:
    - id: first
      type: System.DateTime
      description: Откуда вычитают
    - id: second
      type: System.DateTime
      description: Сколько вычитают
    return:
      type: System.DateTime
      description: Разность двух <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Function Datetime_Subtract(first As Date, second As Date) As Date
  overload: BMVE.Core.Runnable.Datetime_Subtract*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_Exists(System.String)
  commentId: M:BMVE.Core.Runnable.File_Exists(System.String)
  id: File_Exists(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Exists(String)
  nameWithType: Runnable.File_Exists(String)
  fullName: BMVE.Core.Runnable.File_Exists(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Exists
    path: API/Runnable.File.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет наличие файла по указанному пути\n"
  example: []
  syntax:
    content: protected bool File_Exists(string path)
    parameters:
    - id: path
      type: System.String
      description: Путь к файлу в системе
    return:
      type: System.Boolean
      description: Наличие/отсутствие файла
    content.vb: Protected Function File_Exists(path As String) As Boolean
  overload: BMVE.Core.Runnable.File_Exists*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_DirectoryExists(System.String)
  commentId: M:BMVE.Core.Runnable.File_DirectoryExists(System.String)
  id: File_DirectoryExists(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_DirectoryExists(String)
  nameWithType: Runnable.File_DirectoryExists(String)
  fullName: BMVE.Core.Runnable.File_DirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_DirectoryExists
    path: API/Runnable.File.cs
    startLine: 23
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет наличие каталога по указанному пути\n"
  example: []
  syntax:
    content: protected bool File_DirectoryExists(string path)
    parameters:
    - id: path
      type: System.String
      description: Путь к каталогу в системе
    return:
      type: System.Boolean
      description: Наличие/отсутствие каталога
    content.vb: Protected Function File_DirectoryExists(path As String) As Boolean
  overload: BMVE.Core.Runnable.File_DirectoryExists*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_IsOpened(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_IsOpened(System.Int32)
  id: File_IsOpened(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_IsOpened(Int32)
  nameWithType: Runnable.File_IsOpened(Int32)
  fullName: BMVE.Core.Runnable.File_IsOpened(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_IsOpened
    path: API/Runnable.File.cs
    startLine: 30
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, занят ли номер для файла (открыт ли файл по указанному номеру)\n"
  example: []
  syntax:
    content: protected bool File_IsOpened(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    return:
      type: System.Boolean
      description: Номер занят/свободен
    content.vb: Protected Function File_IsOpened(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.File_IsOpened*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_IsOpenedToRead(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_IsOpenedToRead(System.Int32)
  id: File_IsOpenedToRead(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_IsOpenedToRead(Int32)
  nameWithType: Runnable.File_IsOpenedToRead(Int32)
  fullName: BMVE.Core.Runnable.File_IsOpenedToRead(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_IsOpenedToRead
    path: API/Runnable.File.cs
    startLine: 37
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, открыт ли файл для чтения по указанному номеру\n"
  example: []
  syntax:
    content: protected bool File_IsOpenedToRead(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    return:
      type: System.Boolean
      description: Файл открыт/не открыт
    content.vb: Protected Function File_IsOpenedToRead(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.File_IsOpenedToRead*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_IsOpenedToWrite(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_IsOpenedToWrite(System.Int32)
  id: File_IsOpenedToWrite(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_IsOpenedToWrite(Int32)
  nameWithType: Runnable.File_IsOpenedToWrite(Int32)
  fullName: BMVE.Core.Runnable.File_IsOpenedToWrite(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_IsOpenedToWrite
    path: API/Runnable.File.cs
    startLine: 44
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, открыт ли файл для записи по указанному номеру\n"
  example: []
  syntax:
    content: protected bool File_IsOpenedToWrite(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    return:
      type: System.Boolean
      description: Файл открыт/не открыт
    content.vb: Protected Function File_IsOpenedToWrite(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.File_IsOpenedToWrite*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_OpenToRead(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.File_OpenToRead(System.Int32,System.String)
  id: File_OpenToRead(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_OpenToRead(Int32, String)
  nameWithType: Runnable.File_OpenToRead(Int32, String)
  fullName: BMVE.Core.Runnable.File_OpenToRead(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_OpenToRead
    path: API/Runnable.File.cs
    startLine: 51
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрывает файл для чтения под указанным номером\n"
  example: []
  syntax:
    content: protected void File_OpenToRead(int number, string path)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: path
      type: System.String
      description: Путь к файлу
    content.vb: Protected Sub File_OpenToRead(number As Integer, path As String)
  overload: BMVE.Core.Runnable.File_OpenToRead*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_OpenToWrite(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.File_OpenToWrite(System.Int32,System.String)
  id: File_OpenToWrite(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_OpenToWrite(Int32, String)
  nameWithType: Runnable.File_OpenToWrite(Int32, String)
  fullName: BMVE.Core.Runnable.File_OpenToWrite(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_OpenToWrite
    path: API/Runnable.File.cs
    startLine: 58
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрывает файл для записи под указанным номером\n"
  example: []
  syntax:
    content: protected void File_OpenToWrite(int number, string path)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: path
      type: System.String
      description: Путь к файлу
    content.vb: Protected Sub File_OpenToWrite(number As Integer, path As String)
  overload: BMVE.Core.Runnable.File_OpenToWrite*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_Close(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_Close(System.Int32)
  id: File_Close(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Close(Int32)
  nameWithType: Runnable.File_Close(Int32)
  fullName: BMVE.Core.Runnable.File_Close(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Close
    path: API/Runnable.File.cs
    startLine: 64
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗакрывает файл\n"
  example: []
  syntax:
    content: protected void File_Close(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    content.vb: Protected Sub File_Close(number As Integer)
  overload: BMVE.Core.Runnable.File_Close*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_ReadLine(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_ReadLine(System.Int32)
  id: File_ReadLine(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_ReadLine(Int32)
  nameWithType: Runnable.File_ReadLine(Int32)
  fullName: BMVE.Core.Runnable.File_ReadLine(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_ReadLine
    path: API/Runnable.File.cs
    startLine: 71
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧтение строки текста из файла\n"
  example: []
  syntax:
    content: protected string File_ReadLine(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    return:
      type: System.String
      description: Строка из файла
    content.vb: Protected Function File_ReadLine(number As Integer) As String
  overload: BMVE.Core.Runnable.File_ReadLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_ReadBytes(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.File_ReadBytes(System.Int32,System.Int32)
  id: File_ReadBytes(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_ReadBytes(Int32, Int32)
  nameWithType: Runnable.File_ReadBytes(Int32, Int32)
  fullName: BMVE.Core.Runnable.File_ReadBytes(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_ReadBytes
    path: API/Runnable.File.cs
    startLine: 79
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧтение бинарных данных из файла\n"
  example: []
  syntax:
    content: protected byte[] File_ReadBytes(int number, int length)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: length
      type: System.Int32
      description: Количество байт, которое необходимо считать
    return:
      type: System.Byte[]
      description: Бинарные данные из файла
    content.vb: Protected Function File_ReadBytes(number As Integer, length As Integer) As Byte()
  overload: BMVE.Core.Runnable.File_ReadBytes*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_WriteLine(System.Int32,System.String[])
  commentId: M:BMVE.Core.Runnable.File_WriteLine(System.Int32,System.String[])
  id: File_WriteLine(System.Int32,System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_WriteLine(Int32, String[])
  nameWithType: Runnable.File_WriteLine(Int32, String[])
  fullName: BMVE.Core.Runnable.File_WriteLine(System.Int32, System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_WriteLine
    path: API/Runnable.File.cs
    startLine: 86
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапись строки текста в файл, после записи осуществляет переход на новую строку\n"
  example: []
  syntax:
    content: protected void File_WriteLine(int number, params string[] text)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: text
      type: System.String[]
      description: Строка для записи
    content.vb: Protected Sub File_WriteLine(number As Integer, ParamArray text As String())
  overload: BMVE.Core.Runnable.File_WriteLine*
  nameWithType.vb: Runnable.File_WriteLine(Int32, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.File_WriteLine(System.Int32, System.String())
  name.vb: File_WriteLine(Int32, String())
- uid: BMVE.Core.Runnable.File_Write(System.Int32,System.String[])
  commentId: M:BMVE.Core.Runnable.File_Write(System.Int32,System.String[])
  id: File_Write(System.Int32,System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Write(Int32, String[])
  nameWithType: Runnable.File_Write(Int32, String[])
  fullName: BMVE.Core.Runnable.File_Write(System.Int32, System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Write
    path: API/Runnable.File.cs
    startLine: 93
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапись строки текста в файл, не осуществляет переход на новую строку\n"
  example: []
  syntax:
    content: protected void File_Write(int number, params string[] text)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: text
      type: System.String[]
      description: Строка для записи
    content.vb: Protected Sub File_Write(number As Integer, ParamArray text As String())
  overload: BMVE.Core.Runnable.File_Write*
  nameWithType.vb: Runnable.File_Write(Int32, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.File_Write(System.Int32, System.String())
  name.vb: File_Write(Int32, String())
- uid: BMVE.Core.Runnable.File_WriteBytes(System.Int32,System.Byte[])
  commentId: M:BMVE.Core.Runnable.File_WriteBytes(System.Int32,System.Byte[])
  id: File_WriteBytes(System.Int32,System.Byte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_WriteBytes(Int32, Byte[])
  nameWithType: Runnable.File_WriteBytes(Int32, Byte[])
  fullName: BMVE.Core.Runnable.File_WriteBytes(System.Int32, System.Byte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_WriteBytes
    path: API/Runnable.File.cs
    startLine: 100
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапись строки текста в файл, не осуществляет переход на новую строку\n"
  example: []
  syntax:
    content: protected void File_WriteBytes(int number, byte[] data)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: data
      type: System.Byte[]
      description: Бинарные данные для записи
    content.vb: Protected Sub File_WriteBytes(number As Integer, data As Byte())
  overload: BMVE.Core.Runnable.File_WriteBytes*
  nameWithType.vb: Runnable.File_WriteBytes(Int32, Byte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.File_WriteBytes(System.Int32, System.Byte())
  name.vb: File_WriteBytes(Int32, Byte())
- uid: BMVE.Core.Runnable.File_IsEnd(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_IsEnd(System.Int32)
  id: File_IsEnd(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_IsEnd(Int32)
  nameWithType: Runnable.File_IsEnd(Int32)
  fullName: BMVE.Core.Runnable.File_IsEnd(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_IsEnd
    path: API/Runnable.File.cs
    startLine: 107
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, достигнут ли конец файла при чтении\n"
  example: []
  syntax:
    content: protected bool File_IsEnd(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    return:
      type: System.Boolean
      description: Конец файла достигнут/не достигнут
    content.vb: Protected Function File_IsEnd(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.File_IsEnd*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetDirectories
  commentId: M:BMVE.Core.Runnable.File_GetDirectories
  id: File_GetDirectories
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetDirectories()
  nameWithType: Runnable.File_GetDirectories()
  fullName: BMVE.Core.Runnable.File_GetDirectories()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetDirectories
    path: API/Runnable.File.cs
    startLine: 113
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает названия всех подкаталогов в текущем каталоге\n"
  example: []
  syntax:
    content: protected string[] File_GetDirectories()
    return:
      type: System.String[]
      description: Массив имен всех подкаталогов в текущем каталоге
    content.vb: Protected Function File_GetDirectories As String()
  overload: BMVE.Core.Runnable.File_GetDirectories*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetFiles
  commentId: M:BMVE.Core.Runnable.File_GetFiles
  id: File_GetFiles
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetFiles()
  nameWithType: Runnable.File_GetFiles()
  fullName: BMVE.Core.Runnable.File_GetFiles()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetFiles
    path: API/Runnable.File.cs
    startLine: 119
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает названия всех файлов в текущем каталоге\n"
  example: []
  syntax:
    content: protected string[] File_GetFiles()
    return:
      type: System.String[]
      description: Массив имен всех файлов в текущем каталоге
    content.vb: Protected Function File_GetFiles As String()
  overload: BMVE.Core.Runnable.File_GetFiles*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_SetCurrentDirectory(System.String)
  commentId: M:BMVE.Core.Runnable.File_SetCurrentDirectory(System.String)
  id: File_SetCurrentDirectory(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_SetCurrentDirectory(String)
  nameWithType: Runnable.File_SetCurrentDirectory(String)
  fullName: BMVE.Core.Runnable.File_SetCurrentDirectory(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_SetCurrentDirectory
    path: API/Runnable.File.cs
    startLine: 125
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУстанавливает текущий каталог\n"
  example: []
  syntax:
    content: protected void File_SetCurrentDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: Путь к каталогу
    content.vb: Protected Sub File_SetCurrentDirectory(path As String)
  overload: BMVE.Core.Runnable.File_SetCurrentDirectory*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetCurrentDirectory
  commentId: M:BMVE.Core.Runnable.File_GetCurrentDirectory
  id: File_GetCurrentDirectory
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetCurrentDirectory()
  nameWithType: Runnable.File_GetCurrentDirectory()
  fullName: BMVE.Core.Runnable.File_GetCurrentDirectory()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetCurrentDirectory
    path: API/Runnable.File.cs
    startLine: 131
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает текущий каталог\n"
  example: []
  syntax:
    content: protected string File_GetCurrentDirectory()
    return:
      type: System.String
      description: Путь к текущему каталогу
    content.vb: Protected Function File_GetCurrentDirectory As String
  overload: BMVE.Core.Runnable.File_GetCurrentDirectory*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_CreateDirectory(System.String)
  commentId: M:BMVE.Core.Runnable.File_CreateDirectory(System.String)
  id: File_CreateDirectory(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_CreateDirectory(String)
  nameWithType: Runnable.File_CreateDirectory(String)
  fullName: BMVE.Core.Runnable.File_CreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_CreateDirectory
    path: API/Runnable.File.cs
    startLine: 137
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает каталог по указанному пути\n"
  example: []
  syntax:
    content: protected void File_CreateDirectory(string directoryName)
    parameters:
    - id: directoryName
      type: System.String
      description: Путь к каталогу
    content.vb: Protected Sub File_CreateDirectory(directoryName As String)
  overload: BMVE.Core.Runnable.File_CreateDirectory*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_RenameDirectory(System.String,System.String)
  commentId: M:BMVE.Core.Runnable.File_RenameDirectory(System.String,System.String)
  id: File_RenameDirectory(System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_RenameDirectory(String, String)
  nameWithType: Runnable.File_RenameDirectory(String, String)
  fullName: BMVE.Core.Runnable.File_RenameDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_RenameDirectory
    path: API/Runnable.File.cs
    startLine: 144
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПереименовывает каталог\n"
  example: []
  syntax:
    content: protected void File_RenameDirectory(string oldName, string newName)
    parameters:
    - id: oldName
      type: System.String
      description: Старое название каталога
    - id: newName
      type: System.String
      description: Новое название каталога
    content.vb: Protected Sub File_RenameDirectory(oldName As String, newName As String)
  overload: BMVE.Core.Runnable.File_RenameDirectory*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_DeleteDirectory(System.String)
  commentId: M:BMVE.Core.Runnable.File_DeleteDirectory(System.String)
  id: File_DeleteDirectory(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_DeleteDirectory(String)
  nameWithType: Runnable.File_DeleteDirectory(String)
  fullName: BMVE.Core.Runnable.File_DeleteDirectory(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_DeleteDirectory
    path: API/Runnable.File.cs
    startLine: 150
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет каталог\n"
  example: []
  syntax:
    content: protected void File_DeleteDirectory(string directoryName)
    parameters:
    - id: directoryName
      type: System.String
      description: Путь к каталогу
    content.vb: Protected Sub File_DeleteDirectory(directoryName As String)
  overload: BMVE.Core.Runnable.File_DeleteDirectory*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetSize(System.String)
  commentId: M:BMVE.Core.Runnable.File_GetSize(System.String)
  id: File_GetSize(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetSize(String)
  nameWithType: Runnable.File_GetSize(String)
  fullName: BMVE.Core.Runnable.File_GetSize(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetSize
    path: API/Runnable.File.cs
    startLine: 157
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить размер файла в байтах\n"
  example: []
  syntax:
    content: protected long File_GetSize(string filename)
    parameters:
    - id: filename
      type: System.String
      description: Имя файла
    return:
      type: System.Int64
      description: Размер файла в байтах
    content.vb: Protected Function File_GetSize(filename As String) As Long
  overload: BMVE.Core.Runnable.File_GetSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetOffset(System.Int32)
  commentId: M:BMVE.Core.Runnable.File_GetOffset(System.Int32)
  id: File_GetOffset(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetOffset(Int32)
  nameWithType: Runnable.File_GetOffset(Int32)
  fullName: BMVE.Core.Runnable.File_GetOffset(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetOffset
    path: API/Runnable.File.cs
    startLine: 164
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить текущий отступ файла для чтения/записи\n"
  example: []
  syntax:
    content: protected long File_GetOffset(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    return:
      type: System.Int64
      description: Отступ файла для чтения/записи
    content.vb: Protected Function File_GetOffset(number As Integer) As Long
  overload: BMVE.Core.Runnable.File_GetOffset*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_SetOffset(System.Int32,System.Int64)
  commentId: M:BMVE.Core.Runnable.File_SetOffset(System.Int32,System.Int64)
  id: File_SetOffset(System.Int32,System.Int64)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_SetOffset(Int32, Int64)
  nameWithType: Runnable.File_SetOffset(Int32, Int64)
  fullName: BMVE.Core.Runnable.File_SetOffset(System.Int32, System.Int64)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_SetOffset
    path: API/Runnable.File.cs
    startLine: 171
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадать текущий отступ файла для чтения/записи\n"
  example: []
  syntax:
    content: protected void File_SetOffset(int number, long offset)
    parameters:
    - id: number
      type: System.Int32
      description: Номер файла
    - id: offset
      type: System.Int64
      description: Новый отступ файла для чтения/записи
    content.vb: Protected Sub File_SetOffset(number As Integer, offset As Long)
  overload: BMVE.Core.Runnable.File_SetOffset*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_Rename(System.String,System.String)
  commentId: M:BMVE.Core.Runnable.File_Rename(System.String,System.String)
  id: File_Rename(System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Rename(String, String)
  nameWithType: Runnable.File_Rename(String, String)
  fullName: BMVE.Core.Runnable.File_Rename(System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Rename
    path: API/Runnable.File.cs
    startLine: 178
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПереименовывает файл\n"
  example: []
  syntax:
    content: protected void File_Rename(string oldName, string newName)
    parameters:
    - id: oldName
      type: System.String
      description: Старое название файла
    - id: newName
      type: System.String
      description: Новое название файла
    content.vb: Protected Sub File_Rename(oldName As String, newName As String)
  overload: BMVE.Core.Runnable.File_Rename*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_Delete(System.String)
  commentId: M:BMVE.Core.Runnable.File_Delete(System.String)
  id: File_Delete(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Delete(String)
  nameWithType: Runnable.File_Delete(String)
  fullName: BMVE.Core.Runnable.File_Delete(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Delete
    path: API/Runnable.File.cs
    startLine: 184
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУдаляет файл\n"
  example: []
  syntax:
    content: protected void File_Delete(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: Путь к файлу
    content.vb: Protected Sub File_Delete(fileName As String)
  overload: BMVE.Core.Runnable.File_Delete*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_Copy(System.String,System.String)
  commentId: M:BMVE.Core.Runnable.File_Copy(System.String,System.String)
  id: File_Copy(System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Copy(String, String)
  nameWithType: Runnable.File_Copy(String, String)
  fullName: BMVE.Core.Runnable.File_Copy(System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Copy
    path: API/Runnable.File.cs
    startLine: 191
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКопирует файл\n"
  example: []
  syntax:
    content: protected void File_Copy(string path, string newPath)
    parameters:
    - id: path
      type: System.String
      description: Путь к копируемому файлу
    - id: newPath
      type: System.String
      description: Путь, где должна быть создана копия
    content.vb: Protected Sub File_Copy(path As String, newPath As String)
  overload: BMVE.Core.Runnable.File_Copy*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_Move(System.String,System.String)
  commentId: M:BMVE.Core.Runnable.File_Move(System.String,System.String)
  id: File_Move(System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_Move(String, String)
  nameWithType: Runnable.File_Move(String, String)
  fullName: BMVE.Core.Runnable.File_Move(System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_Move
    path: API/Runnable.File.cs
    startLine: 198
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПеремещает файл\n"
  example: []
  syntax:
    content: protected void File_Move(string path, string newPath)
    parameters:
    - id: path
      type: System.String
      description: Путь к перемещаемому файлу
    - id: newPath
      type: System.String
      description: Путь, по которому файл должен быть перемещен
    content.vb: Protected Sub File_Move(path As String, newPath As String)
  overload: BMVE.Core.Runnable.File_Move*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetFilenameFromPath(System.String)
  commentId: M:BMVE.Core.Runnable.File_GetFilenameFromPath(System.String)
  id: File_GetFilenameFromPath(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetFilenameFromPath(String)
  nameWithType: Runnable.File_GetFilenameFromPath(String)
  fullName: BMVE.Core.Runnable.File_GetFilenameFromPath(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetFilenameFromPath
    path: API/Runnable.File.cs
    startLine: 205
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить имя конечного файла из пути\n"
  example: []
  syntax:
    content: protected string File_GetFilenameFromPath(string path)
    parameters:
    - id: path
      type: System.String
      description: Путь
    return:
      type: System.String
      description: Имя файла
    content.vb: Protected Function File_GetFilenameFromPath(path As String) As String
  overload: BMVE.Core.Runnable.File_GetFilenameFromPath*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.File_GetDirectoryPathFromPath(System.String)
  commentId: M:BMVE.Core.Runnable.File_GetDirectoryPathFromPath(System.String)
  id: File_GetDirectoryPathFromPath(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: File_GetDirectoryPathFromPath(String)
  nameWithType: Runnable.File_GetDirectoryPathFromPath(String)
  fullName: BMVE.Core.Runnable.File_GetDirectoryPathFromPath(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.File.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: File_GetDirectoryPathFromPath
    path: API/Runnable.File.cs
    startLine: 212
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить путь без указания конечного файла\n"
  example: []
  syntax:
    content: protected string File_GetDirectoryPathFromPath(string path)
    parameters:
    - id: path
      type: System.String
      description: Путь
    return:
      type: System.String
      description: Путь без имени файла
    content.vb: Protected Function File_GetDirectoryPathFromPath(path As String) As String
  overload: BMVE.Core.Runnable.File_GetDirectoryPathFromPath*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Image_Load(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Image_Load(System.Int32,System.String)
  id: Image_Load(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Image_Load(Int32, String)
  nameWithType: Runnable.Image_Load(Int32, String)
  fullName: BMVE.Core.Runnable.Image_Load(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Image.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Image_Load
    path: API/Runnable.Image.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗагружает изображение\n"
  example: []
  syntax:
    content: protected void Image_Load(int number, string path)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения, под которым будет загружено изображение
    - id: path
      type: System.String
      description: Путь к изображению
    content.vb: Protected Sub Image_Load(number As Integer, path As String)
  overload: BMVE.Core.Runnable.Image_Load*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Image_Close(System.Int32)
  commentId: M:BMVE.Core.Runnable.Image_Close(System.Int32)
  id: Image_Close(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Image_Close(Int32)
  nameWithType: Runnable.Image_Close(Int32)
  fullName: BMVE.Core.Runnable.Image_Close(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Image.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Image_Close
    path: API/Runnable.Image.cs
    startLine: 22
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗакрывает изображение\n"
  example: []
  syntax:
    content: protected void Image_Close(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    content.vb: Protected Sub Image_Close(number As Integer)
  overload: BMVE.Core.Runnable.Image_Close*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Image_Rotate(System.Int32,System.Double)
  commentId: M:BMVE.Core.Runnable.Image_Rotate(System.Int32,System.Double)
  id: Image_Rotate(System.Int32,System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Image_Rotate(Int32, Double)
  nameWithType: Runnable.Image_Rotate(Int32, Double)
  fullName: BMVE.Core.Runnable.Image_Rotate(System.Int32, System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Image.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Image_Rotate
    path: API/Runnable.Image.cs
    startLine: 29
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПоворачивает изображение\n"
  example: []
  syntax:
    content: protected void Image_Rotate(int number, double degrees)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    - id: degrees
      type: System.Double
      description: Угол в градусах
    content.vb: Protected Sub Image_Rotate(number As Integer, degrees As Double)
  overload: BMVE.Core.Runnable.Image_Rotate*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Image_GetAngle(System.Int32)
  commentId: M:BMVE.Core.Runnable.Image_GetAngle(System.Int32)
  id: Image_GetAngle(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Image_GetAngle(Int32)
  nameWithType: Runnable.Image_GetAngle(Int32)
  fullName: BMVE.Core.Runnable.Image_GetAngle(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Image.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Image_GetAngle
    path: API/Runnable.Image.cs
    startLine: 36
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает угол, на который повернуто изображение\n"
  example: []
  syntax:
    content: protected double Image_GetAngle(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    return:
      type: System.Double
      description: Угол в градусах
    content.vb: Protected Function Image_GetAngle(number As Integer) As Double
  overload: BMVE.Core.Runnable.Image_GetAngle*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Image_GetWidth(System.Int32)
  commentId: M:BMVE.Core.Runnable.Image_GetWidth(System.Int32)
  id: Image_GetWidth(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Image_GetWidth(Int32)
  nameWithType: Runnable.Image_GetWidth(Int32)
  fullName: BMVE.Core.Runnable.Image_GetWidth(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Image.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Image_GetWidth
    path: API/Runnable.Image.cs
    startLine: 43
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает ширину изображения\n"
  example: []
  syntax:
    content: protected int Image_GetWidth(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    return:
      type: System.Int32
      description: Ширина в пикселях
    content.vb: Protected Function Image_GetWidth(number As Integer) As Integer
  overload: BMVE.Core.Runnable.Image_GetWidth*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Image_GetHeight(System.Int32)
  commentId: M:BMVE.Core.Runnable.Image_GetHeight(System.Int32)
  id: Image_GetHeight(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Image_GetHeight(Int32)
  nameWithType: Runnable.Image_GetHeight(Int32)
  fullName: BMVE.Core.Runnable.Image_GetHeight(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Image.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Image_GetHeight
    path: API/Runnable.Image.cs
    startLine: 50
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает высоту изображения\n"
  example: []
  syntax:
    content: protected int Image_GetHeight(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    return:
      type: System.Int32
      description: Высота в пикселях
    content.vb: Protected Function Image_GetHeight(number As Integer) As Integer
  overload: BMVE.Core.Runnable.Image_GetHeight*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_WaitForKey
  commentId: M:BMVE.Core.Runnable.Input_WaitForKey
  id: Input_WaitForKey
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_WaitForKey()
  nameWithType: Runnable.Input_WaitForKey()
  fullName: BMVE.Core.Runnable.Input_WaitForKey()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_WaitForKey
    path: API/Runnable.Input.cs
    startLine: 15
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОжидает нажатия клавиши на клавиатуре\n"
  example: []
  syntax:
    content: protected int Input_WaitForKey()
    return:
      type: System.Int32
      description: Код нажатой клавиши
    content.vb: Protected Function Input_WaitForKey As Integer
  overload: BMVE.Core.Runnable.Input_WaitForKey*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsKeyPressed(System.Int32)
  commentId: M:BMVE.Core.Runnable.Input_IsKeyPressed(System.Int32)
  id: Input_IsKeyPressed(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsKeyPressed(Int32)
  nameWithType: Runnable.Input_IsKeyPressed(Int32)
  fullName: BMVE.Core.Runnable.Input_IsKeyPressed(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsKeyPressed
    path: API/Runnable.Input.cs
    startLine: 22
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка с указанным кодом\n"
  example: []
  syntax:
    content: protected bool Input_IsKeyPressed(int code)
    parameters:
    - id: code
      type: System.Int32
      description: Виртуальный код кнопки
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsKeyPressed(code As Integer) As Boolean
  overload: BMVE.Core.Runnable.Input_IsKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_LeftArrowKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_LeftArrowKeyPressed
  id: Input_LeftArrowKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_LeftArrowKeyPressed()
  nameWithType: Runnable.Input_LeftArrowKeyPressed()
  fullName: BMVE.Core.Runnable.Input_LeftArrowKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_LeftArrowKeyPressed
    path: API/Runnable.Input.cs
    startLine: 28
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;стрелка влево&quot;\n"
  example: []
  syntax:
    content: protected bool Input_LeftArrowKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_LeftArrowKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_LeftArrowKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_RightArrowKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_RightArrowKeyPressed
  id: Input_RightArrowKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_RightArrowKeyPressed()
  nameWithType: Runnable.Input_RightArrowKeyPressed()
  fullName: BMVE.Core.Runnable.Input_RightArrowKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_RightArrowKeyPressed
    path: API/Runnable.Input.cs
    startLine: 34
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;стрелка вправо&quot;\n"
  example: []
  syntax:
    content: protected bool Input_RightArrowKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_RightArrowKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_RightArrowKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_UpArrowKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_UpArrowKeyPressed
  id: Input_UpArrowKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_UpArrowKeyPressed()
  nameWithType: Runnable.Input_UpArrowKeyPressed()
  fullName: BMVE.Core.Runnable.Input_UpArrowKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_UpArrowKeyPressed
    path: API/Runnable.Input.cs
    startLine: 40
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;стрелка вверх&quot;\n"
  example: []
  syntax:
    content: protected bool Input_UpArrowKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_UpArrowKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_UpArrowKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_DownArrowKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_DownArrowKeyPressed
  id: Input_DownArrowKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_DownArrowKeyPressed()
  nameWithType: Runnable.Input_DownArrowKeyPressed()
  fullName: BMVE.Core.Runnable.Input_DownArrowKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_DownArrowKeyPressed
    path: API/Runnable.Input.cs
    startLine: 46
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;стрелка вниз&quot;\n"
  example: []
  syntax:
    content: protected bool Input_DownArrowKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_DownArrowKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_DownArrowKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_ShiftPressed
  commentId: M:BMVE.Core.Runnable.Input_ShiftPressed
  id: Input_ShiftPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_ShiftPressed()
  nameWithType: Runnable.Input_ShiftPressed()
  fullName: BMVE.Core.Runnable.Input_ShiftPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_ShiftPressed
    path: API/Runnable.Input.cs
    startLine: 52
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Shift&quot;\n"
  example: []
  syntax:
    content: protected bool Input_ShiftPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_ShiftPressed As Boolean
  overload: BMVE.Core.Runnable.Input_ShiftPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_LeftShiftPressed
  commentId: M:BMVE.Core.Runnable.Input_LeftShiftPressed
  id: Input_LeftShiftPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_LeftShiftPressed()
  nameWithType: Runnable.Input_LeftShiftPressed()
  fullName: BMVE.Core.Runnable.Input_LeftShiftPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_LeftShiftPressed
    path: API/Runnable.Input.cs
    startLine: 58
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Левый Shift&quot;\n"
  example: []
  syntax:
    content: protected bool Input_LeftShiftPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_LeftShiftPressed As Boolean
  overload: BMVE.Core.Runnable.Input_LeftShiftPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_RightShiftPressed
  commentId: M:BMVE.Core.Runnable.Input_RightShiftPressed
  id: Input_RightShiftPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_RightShiftPressed()
  nameWithType: Runnable.Input_RightShiftPressed()
  fullName: BMVE.Core.Runnable.Input_RightShiftPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_RightShiftPressed
    path: API/Runnable.Input.cs
    startLine: 64
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Правый Shift&quot;\n"
  example: []
  syntax:
    content: protected bool Input_RightShiftPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_RightShiftPressed As Boolean
  overload: BMVE.Core.Runnable.Input_RightShiftPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_ControlPressed
  commentId: M:BMVE.Core.Runnable.Input_ControlPressed
  id: Input_ControlPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_ControlPressed()
  nameWithType: Runnable.Input_ControlPressed()
  fullName: BMVE.Core.Runnable.Input_ControlPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_ControlPressed
    path: API/Runnable.Input.cs
    startLine: 70
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Ctrl&quot;\n"
  example: []
  syntax:
    content: protected bool Input_ControlPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_ControlPressed As Boolean
  overload: BMVE.Core.Runnable.Input_ControlPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_LeftControlPressed
  commentId: M:BMVE.Core.Runnable.Input_LeftControlPressed
  id: Input_LeftControlPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_LeftControlPressed()
  nameWithType: Runnable.Input_LeftControlPressed()
  fullName: BMVE.Core.Runnable.Input_LeftControlPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_LeftControlPressed
    path: API/Runnable.Input.cs
    startLine: 76
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Левый Ctrl&quot;\n"
  example: []
  syntax:
    content: protected bool Input_LeftControlPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_LeftControlPressed As Boolean
  overload: BMVE.Core.Runnable.Input_LeftControlPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_RightControlPressed
  commentId: M:BMVE.Core.Runnable.Input_RightControlPressed
  id: Input_RightControlPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_RightControlPressed()
  nameWithType: Runnable.Input_RightControlPressed()
  fullName: BMVE.Core.Runnable.Input_RightControlPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_RightControlPressed
    path: API/Runnable.Input.cs
    startLine: 82
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Правый Ctrl&quot;\n"
  example: []
  syntax:
    content: protected bool Input_RightControlPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_RightControlPressed As Boolean
  overload: BMVE.Core.Runnable.Input_RightControlPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_AltPressed
  commentId: M:BMVE.Core.Runnable.Input_AltPressed
  id: Input_AltPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_AltPressed()
  nameWithType: Runnable.Input_AltPressed()
  fullName: BMVE.Core.Runnable.Input_AltPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_AltPressed
    path: API/Runnable.Input.cs
    startLine: 88
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Alt&quot;\n"
  example: []
  syntax:
    content: protected bool Input_AltPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_AltPressed As Boolean
  overload: BMVE.Core.Runnable.Input_AltPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_LeftAltPressed
  commentId: M:BMVE.Core.Runnable.Input_LeftAltPressed
  id: Input_LeftAltPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_LeftAltPressed()
  nameWithType: Runnable.Input_LeftAltPressed()
  fullName: BMVE.Core.Runnable.Input_LeftAltPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_LeftAltPressed
    path: API/Runnable.Input.cs
    startLine: 94
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Левый Alt&quot;\n"
  example: []
  syntax:
    content: protected bool Input_LeftAltPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_LeftAltPressed As Boolean
  overload: BMVE.Core.Runnable.Input_LeftAltPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_RightAltPressed
  commentId: M:BMVE.Core.Runnable.Input_RightAltPressed
  id: Input_RightAltPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_RightAltPressed()
  nameWithType: Runnable.Input_RightAltPressed()
  fullName: BMVE.Core.Runnable.Input_RightAltPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_RightAltPressed
    path: API/Runnable.Input.cs
    startLine: 100
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Правый Alt&quot;\n"
  example: []
  syntax:
    content: protected bool Input_RightAltPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_RightAltPressed As Boolean
  overload: BMVE.Core.Runnable.Input_RightAltPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_WinKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_WinKeyPressed
  id: Input_WinKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_WinKeyPressed()
  nameWithType: Runnable.Input_WinKeyPressed()
  fullName: BMVE.Core.Runnable.Input_WinKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_WinKeyPressed
    path: API/Runnable.Input.cs
    startLine: 106
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;WinKey&quot;\n"
  example: []
  syntax:
    content: protected bool Input_WinKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_WinKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_WinKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_LeftWinKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_LeftWinKeyPressed
  id: Input_LeftWinKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_LeftWinKeyPressed()
  nameWithType: Runnable.Input_LeftWinKeyPressed()
  fullName: BMVE.Core.Runnable.Input_LeftWinKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_LeftWinKeyPressed
    path: API/Runnable.Input.cs
    startLine: 112
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Левый WinKey&quot;\n"
  example: []
  syntax:
    content: protected bool Input_LeftWinKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_LeftWinKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_LeftWinKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_RightWinKeyPressed
  commentId: M:BMVE.Core.Runnable.Input_RightWinKeyPressed
  id: Input_RightWinKeyPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_RightWinKeyPressed()
  nameWithType: Runnable.Input_RightWinKeyPressed()
  fullName: BMVE.Core.Runnable.Input_RightWinKeyPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_RightWinKeyPressed
    path: API/Runnable.Input.cs
    startLine: 118
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Правый WinKey&quot;\n"
  example: []
  syntax:
    content: protected bool Input_RightWinKeyPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_RightWinKeyPressed As Boolean
  overload: BMVE.Core.Runnable.Input_RightWinKeyPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_EscapePressed
  commentId: M:BMVE.Core.Runnable.Input_EscapePressed
  id: Input_EscapePressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_EscapePressed()
  nameWithType: Runnable.Input_EscapePressed()
  fullName: BMVE.Core.Runnable.Input_EscapePressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_EscapePressed
    path: API/Runnable.Input.cs
    startLine: 124
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Escape&quot;\n"
  example: []
  syntax:
    content: protected bool Input_EscapePressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_EscapePressed As Boolean
  overload: BMVE.Core.Runnable.Input_EscapePressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_EnterPressed
  commentId: M:BMVE.Core.Runnable.Input_EnterPressed
  id: Input_EnterPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_EnterPressed()
  nameWithType: Runnable.Input_EnterPressed()
  fullName: BMVE.Core.Runnable.Input_EnterPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_EnterPressed
    path: API/Runnable.Input.cs
    startLine: 130
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Enter&quot;\n"
  example: []
  syntax:
    content: protected bool Input_EnterPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_EnterPressed As Boolean
  overload: BMVE.Core.Runnable.Input_EnterPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_SpacePressed
  commentId: M:BMVE.Core.Runnable.Input_SpacePressed
  id: Input_SpacePressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_SpacePressed()
  nameWithType: Runnable.Input_SpacePressed()
  fullName: BMVE.Core.Runnable.Input_SpacePressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_SpacePressed
    path: API/Runnable.Input.cs
    startLine: 136
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка &quot;Пробел&quot;\n"
  example: []
  syntax:
    content: protected bool Input_SpacePressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_SpacePressed As Boolean
  overload: BMVE.Core.Runnable.Input_SpacePressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_ReadString(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Input_ReadString(System.Int32,System.Int32)
  id: Input_ReadString(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_ReadString(Int32, Int32)
  nameWithType: Runnable.Input_ReadString(Int32, Int32)
  fullName: BMVE.Core.Runnable.Input_ReadString(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_ReadString
    path: API/Runnable.Input.cs
    startLine: 144
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОрганизовывает ввод строки по указанным координатам применяя указанные настройки шрифта\n"
  example: []
  syntax:
    content: protected string Input_ReadString(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    return:
      type: System.String
      description: Введенный текст
    content.vb: Protected Function Input_ReadString(x As Integer, y As Integer) As String
  overload: BMVE.Core.Runnable.Input_ReadString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_GetPressedChars
  commentId: M:BMVE.Core.Runnable.Input_GetPressedChars
  id: Input_GetPressedChars
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_GetPressedChars()
  nameWithType: Runnable.Input_GetPressedChars()
  fullName: BMVE.Core.Runnable.Input_GetPressedChars()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_GetPressedChars
    path: API/Runnable.Input.cs
    startLine: 150
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПозволяет получить массив всех нажатых в данный момент клавиш, представленных в виде символов\n"
  example: []
  syntax:
    content: protected string[] Input_GetPressedChars()
    return:
      type: System.String[]
      description: Массив символов всех нажатых в данный момент клавиш
    content.vb: Protected Function Input_GetPressedChars As String()
  overload: BMVE.Core.Runnable.Input_GetPressedChars*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_GetMousePositionX
  commentId: M:BMVE.Core.Runnable.Input_GetMousePositionX
  id: Input_GetMousePositionX
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_GetMousePositionX()
  nameWithType: Runnable.Input_GetMousePositionX()
  fullName: BMVE.Core.Runnable.Input_GetMousePositionX()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_GetMousePositionX
    path: API/Runnable.Input.cs
    startLine: 156
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПозволяет получить координату X курсора мыши\n"
  example: []
  syntax:
    content: protected int Input_GetMousePositionX()
    return:
      type: System.Int32
      description: Позиция X курсора мыши относительно окна
    content.vb: Protected Function Input_GetMousePositionX As Integer
  overload: BMVE.Core.Runnable.Input_GetMousePositionX*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_GetMousePositionY
  commentId: M:BMVE.Core.Runnable.Input_GetMousePositionY
  id: Input_GetMousePositionY
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_GetMousePositionY()
  nameWithType: Runnable.Input_GetMousePositionY()
  fullName: BMVE.Core.Runnable.Input_GetMousePositionY()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_GetMousePositionY
    path: API/Runnable.Input.cs
    startLine: 162
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПозволяет получить координату Y курсора мыши\n"
  example: []
  syntax:
    content: protected int Input_GetMousePositionY()
    return:
      type: System.Int32
      description: Позиция Y курсора мыши относительно окна
    content.vb: Protected Function Input_GetMousePositionY As Integer
  overload: BMVE.Core.Runnable.Input_GetMousePositionY*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsMousePressed(System.Int32)
  commentId: M:BMVE.Core.Runnable.Input_IsMousePressed(System.Int32)
  id: Input_IsMousePressed(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsMousePressed(Int32)
  nameWithType: Runnable.Input_IsMousePressed(Int32)
  fullName: BMVE.Core.Runnable.Input_IsMousePressed(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsMousePressed
    path: API/Runnable.Input.cs
    startLine: 169
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли кнопка мыши с указанным кодом\n"
  example: []
  syntax:
    content: protected bool Input_IsMousePressed(int button)
    parameters:
    - id: button
      type: System.Int32
      description: Код кнопки мыши
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsMousePressed(button As Integer) As Boolean
  overload: BMVE.Core.Runnable.Input_IsMousePressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed
  commentId: M:BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed
  id: Input_IsLeftMouseButtonPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsLeftMouseButtonPressed()
  nameWithType: Runnable.Input_IsLeftMouseButtonPressed()
  fullName: BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsLeftMouseButtonPressed
    path: API/Runnable.Input.cs
    startLine: 175
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли левая кнопка мыши\n"
  example: []
  syntax:
    content: protected bool Input_IsLeftMouseButtonPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsLeftMouseButtonPressed As Boolean
  overload: BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsRightMouseButtonPressed
  commentId: M:BMVE.Core.Runnable.Input_IsRightMouseButtonPressed
  id: Input_IsRightMouseButtonPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsRightMouseButtonPressed()
  nameWithType: Runnable.Input_IsRightMouseButtonPressed()
  fullName: BMVE.Core.Runnable.Input_IsRightMouseButtonPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsRightMouseButtonPressed
    path: API/Runnable.Input.cs
    startLine: 181
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли правая кнопка мыши\n"
  example: []
  syntax:
    content: protected bool Input_IsRightMouseButtonPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsRightMouseButtonPressed As Boolean
  overload: BMVE.Core.Runnable.Input_IsRightMouseButtonPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed
  commentId: M:BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed
  id: Input_IsMiddleMouseButtonPressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsMiddleMouseButtonPressed()
  nameWithType: Runnable.Input_IsMiddleMouseButtonPressed()
  fullName: BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsMiddleMouseButtonPressed
    path: API/Runnable.Input.cs
    startLine: 187
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли средняя кнопка мыши\n"
  example: []
  syntax:
    content: protected bool Input_IsMiddleMouseButtonPressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsMiddleMouseButtonPressed As Boolean
  overload: BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsXMouseButton1Pressed
  commentId: M:BMVE.Core.Runnable.Input_IsXMouseButton1Pressed
  id: Input_IsXMouseButton1Pressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsXMouseButton1Pressed()
  nameWithType: Runnable.Input_IsXMouseButton1Pressed()
  fullName: BMVE.Core.Runnable.Input_IsXMouseButton1Pressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsXMouseButton1Pressed
    path: API/Runnable.Input.cs
    startLine: 193
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли первая дополнительная кнопка мыши\n"
  example: []
  syntax:
    content: protected bool Input_IsXMouseButton1Pressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsXMouseButton1Pressed As Boolean
  overload: BMVE.Core.Runnable.Input_IsXMouseButton1Pressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Input_IsXMouseButton2Pressed
  commentId: M:BMVE.Core.Runnable.Input_IsXMouseButton2Pressed
  id: Input_IsXMouseButton2Pressed
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Input_IsXMouseButton2Pressed()
  nameWithType: Runnable.Input_IsXMouseButton2Pressed()
  fullName: BMVE.Core.Runnable.Input_IsXMouseButton2Pressed()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Input.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Input_IsXMouseButton2Pressed
    path: API/Runnable.Input.cs
    startLine: 199
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, нажата ли вторая дополнительная кнопка мыши\n"
  example: []
  syntax:
    content: protected bool Input_IsXMouseButton2Pressed()
    return:
      type: System.Boolean
      description: Кнопка нажата/не нажата
    content.vb: Protected Function Input_IsXMouseButton2Pressed As Boolean
  overload: BMVE.Core.Runnable.Input_IsXMouseButton2Pressed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Acos(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Acos(System.Double)
  id: Math_Acos(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Acos(Double)
  nameWithType: Runnable.Math_Acos(Double)
  fullName: BMVE.Core.Runnable.Math_Acos(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Acos
    path: API/Runnable.Math.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nАрккосинус числа\n"
  example: []
  syntax:
    content: protected double Math_Acos(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Арккосинус числа
    content.vb: Protected Function Math_Acos(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Acos*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Asin(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Asin(System.Double)
  id: Math_Asin(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Asin(Double)
  nameWithType: Runnable.Math_Asin(Double)
  fullName: BMVE.Core.Runnable.Math_Asin(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Asin
    path: API/Runnable.Math.cs
    startLine: 23
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nАрксинус числа\n"
  example: []
  syntax:
    content: protected double Math_Asin(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Арксинус числа
    content.vb: Protected Function Math_Asin(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Asin*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Atan(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Atan(System.Double)
  id: Math_Atan(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Atan(Double)
  nameWithType: Runnable.Math_Atan(Double)
  fullName: BMVE.Core.Runnable.Math_Atan(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Atan
    path: API/Runnable.Math.cs
    startLine: 30
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nАрктангенс числа\n"
  example: []
  syntax:
    content: protected double Math_Atan(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Арктангенс числа
    content.vb: Protected Function Math_Atan(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Atan*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Atan2(System.Double,System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Atan2(System.Double,System.Double)
  id: Math_Atan2(System.Double,System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Atan2(Double, Double)
  nameWithType: Runnable.Math_Atan2(Double, Double)
  fullName: BMVE.Core.Runnable.Math_Atan2(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Atan2
    path: API/Runnable.Math.cs
    startLine: 38
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает угол, тангенс которого равен отношению двух указанных чисел\n"
  example: []
  syntax:
    content: protected double Math_Atan2(double a, double b)
    parameters:
    - id: a
      type: System.Double
      description: Число A
    - id: b
      type: System.Double
      description: Число B
    return:
      type: System.Double
      description: Угол, тангенс которого равен отношению двух указанных чисел
    content.vb: Protected Function Math_Atan2(a As Double, b As Double) As Double
  overload: BMVE.Core.Runnable.Math_Atan2*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Abs(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Abs(System.Double)
  id: Math_Abs(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Abs(Double)
  nameWithType: Runnable.Math_Abs(Double)
  fullName: BMVE.Core.Runnable.Math_Abs(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Abs
    path: API/Runnable.Math.cs
    startLine: 45
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nМодуль числа\n"
  example: []
  syntax:
    content: protected double Math_Abs(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Модуль числа
    content.vb: Protected Function Math_Abs(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Abs*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Ceil(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Ceil(System.Double)
  id: Math_Ceil(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Ceil(Double)
  nameWithType: Runnable.Math_Ceil(Double)
  fullName: BMVE.Core.Runnable.Math_Ceil(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Ceil
    path: API/Runnable.Math.cs
    startLine: 52
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОкругляет число в большую сторону\n"
  example: []
  syntax:
    content: protected double Math_Ceil(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Округленное число
    content.vb: Protected Function Math_Ceil(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Ceil*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Cos(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Cos(System.Double)
  id: Math_Cos(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Cos(Double)
  nameWithType: Runnable.Math_Cos(Double)
  fullName: BMVE.Core.Runnable.Math_Cos(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Cos
    path: API/Runnable.Math.cs
    startLine: 59
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКосинус числа\n"
  example: []
  syntax:
    content: protected double Math_Cos(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Косинус числа
    content.vb: Protected Function Math_Cos(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Cos*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Cosh(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Cosh(System.Double)
  id: Math_Cosh(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Cosh(Double)
  nameWithType: Runnable.Math_Cosh(Double)
  fullName: BMVE.Core.Runnable.Math_Cosh(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Cosh
    path: API/Runnable.Math.cs
    startLine: 66
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nГиперболический косинус числа\n"
  example: []
  syntax:
    content: protected double Math_Cosh(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Гиперболический косинус числа
    content.vb: Protected Function Math_Cosh(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Cosh*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Exp(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Exp(System.Double)
  id: Math_Exp(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Exp(Double)
  nameWithType: Runnable.Math_Exp(Double)
  fullName: BMVE.Core.Runnable.Math_Exp(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Exp
    path: API/Runnable.Math.cs
    startLine: 73
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЭкспонента числа\n"
  example: []
  syntax:
    content: protected double Math_Exp(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Экспонента числа
    content.vb: Protected Function Math_Exp(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Exp*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Floor(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Floor(System.Double)
  id: Math_Floor(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Floor(Double)
  nameWithType: Runnable.Math_Floor(Double)
  fullName: BMVE.Core.Runnable.Math_Floor(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Floor
    path: API/Runnable.Math.cs
    startLine: 80
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОкругляет число в меньшую сторону\n"
  example: []
  syntax:
    content: protected double Math_Floor(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Округленное число
    content.vb: Protected Function Math_Floor(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Floor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Log(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Log(System.Double)
  id: Math_Log(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Log(Double)
  nameWithType: Runnable.Math_Log(Double)
  fullName: BMVE.Core.Runnable.Math_Log(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Log
    path: API/Runnable.Math.cs
    startLine: 87
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЛогарифм числа\n"
  example: []
  syntax:
    content: protected double Math_Log(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Логарифм числа
    content.vb: Protected Function Math_Log(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Log*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Log10(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Log10(System.Double)
  id: Math_Log10(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Log10(Double)
  nameWithType: Runnable.Math_Log10(Double)
  fullName: BMVE.Core.Runnable.Math_Log10(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Log10
    path: API/Runnable.Math.cs
    startLine: 94
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДесятичный логарифм числа\n"
  example: []
  syntax:
    content: protected double Math_Log10(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Десятичный логарифм числа
    content.vb: Protected Function Math_Log10(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Log10*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Pow(System.Double,System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Pow(System.Double,System.Double)
  id: Math_Pow(System.Double,System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Pow(Double, Double)
  nameWithType: Runnable.Math_Pow(Double, Double)
  fullName: BMVE.Core.Runnable.Math_Pow(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Pow
    path: API/Runnable.Math.cs
    startLine: 102
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозводит число в указанную степень\n"
  example: []
  syntax:
    content: protected double Math_Pow(double a, double power)
    parameters:
    - id: a
      type: System.Double
      description: Число
    - id: power
      type: System.Double
      description: Степень
    return:
      type: System.Double
      description: Число в указанной степени
    content.vb: Protected Function Math_Pow(a As Double, power As Double) As Double
  overload: BMVE.Core.Runnable.Math_Pow*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Round(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Round(System.Double)
  id: Math_Round(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Round(Double)
  nameWithType: Runnable.Math_Round(Double)
  fullName: BMVE.Core.Runnable.Math_Round(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Round
    path: API/Runnable.Math.cs
    startLine: 109
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОкругляет число\n"
  example: []
  syntax:
    content: protected double Math_Round(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Округленное число
    content.vb: Protected Function Math_Round(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Round*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Sin(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Sin(System.Double)
  id: Math_Sin(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Sin(Double)
  nameWithType: Runnable.Math_Sin(Double)
  fullName: BMVE.Core.Runnable.Math_Sin(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Sin
    path: API/Runnable.Math.cs
    startLine: 116
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСинус числа\n"
  example: []
  syntax:
    content: protected double Math_Sin(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Синус числа
    content.vb: Protected Function Math_Sin(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Sin*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Sinh(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Sinh(System.Double)
  id: Math_Sinh(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Sinh(Double)
  nameWithType: Runnable.Math_Sinh(Double)
  fullName: BMVE.Core.Runnable.Math_Sinh(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Sinh
    path: API/Runnable.Math.cs
    startLine: 123
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nГиперболический синус числа\n"
  example: []
  syntax:
    content: protected double Math_Sinh(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Гиперболический синус числа
    content.vb: Protected Function Math_Sinh(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Sinh*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Sqrt(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Sqrt(System.Double)
  id: Math_Sqrt(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Sqrt(Double)
  nameWithType: Runnable.Math_Sqrt(Double)
  fullName: BMVE.Core.Runnable.Math_Sqrt(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Sqrt
    path: API/Runnable.Math.cs
    startLine: 130
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКвадратный корень числа\n"
  example: []
  syntax:
    content: protected double Math_Sqrt(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Квадратный корень числа
    content.vb: Protected Function Math_Sqrt(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Sqrt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Tan(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Tan(System.Double)
  id: Math_Tan(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Tan(Double)
  nameWithType: Runnable.Math_Tan(Double)
  fullName: BMVE.Core.Runnable.Math_Tan(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Tan
    path: API/Runnable.Math.cs
    startLine: 137
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nТангенс числа\n"
  example: []
  syntax:
    content: protected double Math_Tan(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Тангенс
    content.vb: Protected Function Math_Tan(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Tan*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Tanh(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Tanh(System.Double)
  id: Math_Tanh(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Tanh(Double)
  nameWithType: Runnable.Math_Tanh(Double)
  fullName: BMVE.Core.Runnable.Math_Tanh(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Tanh
    path: API/Runnable.Math.cs
    startLine: 144
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nГиперболический тангенс числа\n"
  example: []
  syntax:
    content: protected double Math_Tanh(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Гиперболический тангенс числа
    content.vb: Protected Function Math_Tanh(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Tanh*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_Truncate(System.Double)
  commentId: M:BMVE.Core.Runnable.Math_Truncate(System.Double)
  id: Math_Truncate(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_Truncate(Double)
  nameWithType: Runnable.Math_Truncate(Double)
  fullName: BMVE.Core.Runnable.Math_Truncate(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_Truncate
    path: API/Runnable.Math.cs
    startLine: 151
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткидывает дробную часть\n"
  example: []
  syntax:
    content: protected double Math_Truncate(double a)
    parameters:
    - id: a
      type: System.Double
      description: Число
    return:
      type: System.Double
      description: Число без дробной части
    content.vb: Protected Function Math_Truncate(a As Double) As Double
  overload: BMVE.Core.Runnable.Math_Truncate*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_PI
  commentId: M:BMVE.Core.Runnable.Math_PI
  id: Math_PI
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_PI()
  nameWithType: Runnable.Math_PI()
  fullName: BMVE.Core.Runnable.Math_PI()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_PI
    path: API/Runnable.Math.cs
    startLine: 157
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает число пи\n"
  example: []
  syntax:
    content: protected double Math_PI()
    return:
      type: System.Double
      description: Число пи
    content.vb: Protected Function Math_PI As Double
  overload: BMVE.Core.Runnable.Math_PI*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_RandomInt
  commentId: M:BMVE.Core.Runnable.Math_RandomInt
  id: Math_RandomInt
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_RandomInt()
  nameWithType: Runnable.Math_RandomInt()
  fullName: BMVE.Core.Runnable.Math_RandomInt()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_RandomInt
    path: API/Runnable.Math.cs
    startLine: 163
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает случайное целое число\n"
  example: []
  syntax:
    content: protected int Math_RandomInt()
    return:
      type: System.Int32
      description: Случайное число
    content.vb: Protected Function Math_RandomInt As Integer
  overload: BMVE.Core.Runnable.Math_RandomInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Math_RandomDouble
  commentId: M:BMVE.Core.Runnable.Math_RandomDouble
  id: Math_RandomDouble
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Math_RandomDouble()
  nameWithType: Runnable.Math_RandomDouble()
  fullName: BMVE.Core.Runnable.Math_RandomDouble()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Math.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Math_RandomDouble
    path: API/Runnable.Math.cs
    startLine: 169
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает случайное десятичное число\n"
  example: []
  syntax:
    content: protected double Math_RandomDouble()
    return:
      type: System.Double
      description: Случайное число
    content.vb: Protected Function Math_RandomDouble As Double
  overload: BMVE.Core.Runnable.Math_RandomDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawText(System.Int32,System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Screen_DrawText(System.Int32,System.Int32,System.String)
  id: Screen_DrawText(System.Int32,System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawText(Int32, Int32, String)
  nameWithType: Runnable.Screen_DrawText(Int32, Int32, String)
  fullName: BMVE.Core.Runnable.Screen_DrawText(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawText
    path: API/Runnable.Screen.cs
    startLine: 17
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОтображает текст по указанным координатам\n"
  example: []
  syntax:
    content: protected void Screen_DrawText(int x, int y, string text)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: text
      type: System.String
      description: Текст
    content.vb: Protected Sub Screen_DrawText(x As Integer, y As Integer, text As String)
  overload: BMVE.Core.Runnable.Screen_DrawText*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawText(System.Int32,System.Int32,System.String,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawText(System.Int32,System.Int32,System.String,System.Int32)
  id: Screen_DrawText(System.Int32,System.Int32,System.String,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawText(Int32, Int32, String, Int32)
  nameWithType: Runnable.Screen_DrawText(Int32, Int32, String, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawText(System.Int32, System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawText
    path: API/Runnable.Screen.cs
    startLine: 26
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОтображает окрашенный текст по указанным координатам\n"
  example: []
  syntax:
    content: protected void Screen_DrawText(int x, int y, string text, int color)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: text
      type: System.String
      description: Текст
    - id: color
      type: System.Int32
      description: Цвет текста
    content.vb: Protected Sub Screen_DrawText(x As Integer, y As Integer, text As String, color As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawText*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_SetLineSize(System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_SetLineSize(System.Int32)
  id: Screen_SetLineSize(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_SetLineSize(Int32)
  nameWithType: Runnable.Screen_SetLineSize(Int32)
  fullName: BMVE.Core.Runnable.Screen_SetLineSize(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_SetLineSize
    path: API/Runnable.Screen.cs
    startLine: 32
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает размер линии\n"
  example: []
  syntax:
    content: protected void Screen_SetLineSize(int size)
    parameters:
    - id: size
      type: System.Int32
      description: Размер линии
    content.vb: Protected Sub Screen_SetLineSize(size As Integer)
  overload: BMVE.Core.Runnable.Screen_SetLineSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_GetLineSize
  commentId: M:BMVE.Core.Runnable.Screen_GetLineSize
  id: Screen_GetLineSize
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_GetLineSize()
  nameWithType: Runnable.Screen_GetLineSize()
  fullName: BMVE.Core.Runnable.Screen_GetLineSize()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_GetLineSize
    path: API/Runnable.Screen.cs
    startLine: 38
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размер линии\n"
  example: []
  syntax:
    content: protected int Screen_GetLineSize()
    return:
      type: System.Int32
      description: Размер линии
    content.vb: Protected Function Screen_GetLineSize As Integer
  overload: BMVE.Core.Runnable.Screen_GetLineSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Screen_DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawLine(Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawLine(Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawLine(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawLine
    path: API/Runnable.Screen.cs
    startLine: 48
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует линию заданным цветом\n"
  example: []
  syntax:
    content: protected void Screen_DrawLine(int x, int y, int width, int height, int color)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: width
      type: System.Int32
      description: Ширина линии
    - id: height
      type: System.Int32
      description: Высота линии
    - id: color
      type: System.Int32
      description: Цвет линии
    content.vb: Protected Sub Screen_DrawLine(x As Integer, y As Integer, width As Integer, height As Integer, color As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawRectangle(Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawRectangle(Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawRectangle
    path: API/Runnable.Screen.cs
    startLine: 58
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует незакрашенный прямоугольник\n"
  example: []
  syntax:
    content: protected void Screen_DrawRectangle(int x, int y, int width, int height, int color)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: width
      type: System.Int32
      description: Ширина
    - id: height
      type: System.Int32
      description: Высота
    - id: color
      type: System.Int32
      description: Цвет окантовки
    content.vb: Protected Sub Screen_DrawRectangle(x As Integer, y As Integer, width As Integer, height As Integer, color As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawRectangle*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Screen_DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawRectangle(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawRectangle(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawRectangle(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawRectangle
    path: API/Runnable.Screen.cs
    startLine: 69
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует закрашенный прямоугольник\n"
  example: []
  syntax:
    content: protected void Screen_DrawRectangle(int x, int y, int width, int height, int foregroundColor, int backgroundColor)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: width
      type: System.Int32
      description: Ширина
    - id: height
      type: System.Int32
      description: Высота
    - id: foregroundColor
      type: System.Int32
      description: Цвет окантовки
    - id: backgroundColor
      type: System.Int32
      description: Цвет заливки
    content.vb: Protected Sub Screen_DrawRectangle(x As Integer, y As Integer, width As Integer, height As Integer, foregroundColor As Integer, backgroundColor As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawRectangle*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawEllipse(Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawEllipse(Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawEllipse
    path: API/Runnable.Screen.cs
    startLine: 79
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует незакрашенный эллипс\n"
  example: []
  syntax:
    content: protected void Screen_DrawEllipse(int x, int y, int width, int height, int color)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: width
      type: System.Int32
      description: Ширина
    - id: height
      type: System.Int32
      description: Высота
    - id: color
      type: System.Int32
      description: Цвет окантовки
    content.vb: Protected Sub Screen_DrawEllipse(x As Integer, y As Integer, width As Integer, height As Integer, color As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawEllipse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Screen_DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawEllipse(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawEllipse(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawEllipse(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawEllipse
    path: API/Runnable.Screen.cs
    startLine: 90
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует закрашенный эллипс\n"
  example: []
  syntax:
    content: protected void Screen_DrawEllipse(int x, int y, int width, int height, int foregroundColor, int backgroundColor)
    parameters:
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: width
      type: System.Int32
      description: Ширина
    - id: height
      type: System.Int32
      description: Высота
    - id: foregroundColor
      type: System.Int32
      description: Цвет окантовки
    - id: backgroundColor
      type: System.Int32
      description: Цвет заливки
    content.vb: Protected Sub Screen_DrawEllipse(x As Integer, y As Integer, width As Integer, height As Integer, foregroundColor As Integer, backgroundColor As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawEllipse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawImage(System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawImage(System.Int32,System.Int32,System.Int32)
  id: Screen_DrawImage(System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawImage(Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawImage(Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawImage(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawImage
    path: API/Runnable.Screen.cs
    startLine: 98
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует изображение по указанным координатам\n"
  example: []
  syntax:
    content: protected void Screen_DrawImage(int number, int x, int y)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    content.vb: Protected Sub Screen_DrawImage(number As Integer, x As Integer, y As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawImage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_DrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_DrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Screen_DrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_DrawImage(Int32, Int32, Int32, Int32, Int32)
  nameWithType: Runnable.Screen_DrawImage(Int32, Int32, Int32, Int32, Int32)
  fullName: BMVE.Core.Runnable.Screen_DrawImage(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_DrawImage
    path: API/Runnable.Screen.cs
    startLine: 108
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nРисует изображение по указанных размеров по координатам\n"
  example: []
  syntax:
    content: protected void Screen_DrawImage(int number, int x, int y, int width, int height)
    parameters:
    - id: number
      type: System.Int32
      description: Номер изображения
    - id: x
      type: System.Int32
      description: Координата X
    - id: y
      type: System.Int32
      description: Координата Y
    - id: width
      type: System.Int32
      description: Ширина
    - id: height
      type: System.Int32
      description: Высота
    content.vb: Protected Sub Screen_DrawImage(number As Integer, x As Integer, y As Integer, width As Integer, height As Integer)
  overload: BMVE.Core.Runnable.Screen_DrawImage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.RGB(System.Byte,System.Byte,System.Byte)
  commentId: M:BMVE.Core.Runnable.RGB(System.Byte,System.Byte,System.Byte)
  id: RGB(System.Byte,System.Byte,System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: RGB(Byte, Byte, Byte)
  nameWithType: Runnable.RGB(Byte, Byte, Byte)
  fullName: BMVE.Core.Runnable.RGB(System.Byte, System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: RGB
    path: API/Runnable.Screen.cs
    startLine: 117
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКодирует цвет как комбинацию трёх основных цветов: красного, зелёного и синего\n"
  example: []
  syntax:
    content: protected int RGB(byte r, byte g, byte b)
    parameters:
    - id: r
      type: System.Byte
      description: Насыщенность красного цвета (от 0 до 255)
    - id: g
      type: System.Byte
      description: Насыщенность зеленого цвета (от 0 до 255)
    - id: b
      type: System.Byte
      description: Насыщенность синего цвета (от 0 до 255)
    return:
      type: System.Int32
      description: Закодированный цвет
    content.vb: Protected Function RGB(r As Byte, g As Byte, b As Byte) As Integer
  overload: BMVE.Core.Runnable.RGB*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.RGBA(System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:BMVE.Core.Runnable.RGBA(System.Byte,System.Byte,System.Byte,System.Byte)
  id: RGBA(System.Byte,System.Byte,System.Byte,System.Byte)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: RGBA(Byte, Byte, Byte, Byte)
  nameWithType: Runnable.RGBA(Byte, Byte, Byte, Byte)
  fullName: BMVE.Core.Runnable.RGBA(System.Byte, System.Byte, System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: RGBA
    path: API/Runnable.Screen.cs
    startLine: 127
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКодирует цвет как комбинацию четырёх компонент: красного, зелёного, синего цветов и альфа-канала (коэффициент прозрачности)\n"
  example: []
  syntax:
    content: protected int RGBA(byte r, byte g, byte b, byte a)
    parameters:
    - id: r
      type: System.Byte
      description: Насыщенность красного цвета (от 0 до 255)
    - id: g
      type: System.Byte
      description: Насыщенность зеленого цвета (от 0 до 255)
    - id: b
      type: System.Byte
      description: Насыщенность синего цвета (от 0 до 255)
    - id: a
      type: System.Byte
      description: Альфа-канал (коеффициент прозрачности) (от 0 до 255)
    return:
      type: System.Int32
      description: Закодированный цвет
    content.vb: Protected Function RGBA(r As Byte, g As Byte, b As Byte, a As Byte) As Integer
  overload: BMVE.Core.Runnable.RGBA*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_Clear
  commentId: M:BMVE.Core.Runnable.Screen_Clear
  id: Screen_Clear
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_Clear()
  nameWithType: Runnable.Screen_Clear()
  fullName: BMVE.Core.Runnable.Screen_Clear()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_Clear
    path: API/Runnable.Screen.cs
    startLine: 132
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОчистка экрана и заливка его цветом, указанным при помощи команды <xref href=\"BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected void Screen_Clear()
    content.vb: Protected Sub Screen_Clear
  overload: BMVE.Core.Runnable.Screen_Clear*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)
  id: Screen_SetBackgroundColor(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_SetBackgroundColor(Int32)
  nameWithType: Runnable.Screen_SetBackgroundColor(Int32)
  fullName: BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_SetBackgroundColor
    path: API/Runnable.Screen.cs
    startLine: 138
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУстанавливает цвет заливки экрана при очистке с помощью команды <xref href=\"BMVE.Core.Runnable.Screen_Clear\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected void Screen_SetBackgroundColor(int color)
    parameters:
    - id: color
      type: System.Int32
      description: Цвет заливки
    content.vb: Protected Sub Screen_SetBackgroundColor(color As Integer)
  overload: BMVE.Core.Runnable.Screen_SetBackgroundColor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_Render
  commentId: M:BMVE.Core.Runnable.Screen_Render
  id: Screen_Render
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_Render()
  nameWithType: Runnable.Screen_Render()
  fullName: BMVE.Core.Runnable.Screen_Render()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_Render
    path: API/Runnable.Screen.cs
    startLine: 143
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКоманда отрисовки элементов на экран при включенном режиме <see cref=\"!:System_SetBufferedDrawingMode\"></see>\n"
  example: []
  syntax:
    content: protected void Screen_Render()
    content.vb: Protected Sub Screen_Render
  overload: BMVE.Core.Runnable.Screen_Render*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_SetImmediateDrawingMode
  commentId: M:BMVE.Core.Runnable.Screen_SetImmediateDrawingMode
  id: Screen_SetImmediateDrawingMode
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_SetImmediateDrawingMode()
  nameWithType: Runnable.Screen_SetImmediateDrawingMode()
  fullName: BMVE.Core.Runnable.Screen_SetImmediateDrawingMode()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_SetImmediateDrawingMode
    path: API/Runnable.Screen.cs
    startLine: 148
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает режим отображения: немедленное отображение\n"
  example: []
  syntax:
    content: protected void Screen_SetImmediateDrawingMode()
    content.vb: Protected Sub Screen_SetImmediateDrawingMode
  overload: BMVE.Core.Runnable.Screen_SetImmediateDrawingMode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Screen_SetBufferedDrawingMode
  commentId: M:BMVE.Core.Runnable.Screen_SetBufferedDrawingMode
  id: Screen_SetBufferedDrawingMode
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Screen_SetBufferedDrawingMode()
  nameWithType: Runnable.Screen_SetBufferedDrawingMode()
  fullName: BMVE.Core.Runnable.Screen_SetBufferedDrawingMode()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Screen.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Screen_SetBufferedDrawingMode
    path: API/Runnable.Screen.cs
    startLine: 153
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает режим отображения: буферизованное отображение\n"
  example: []
  syntax:
    content: protected void Screen_SetBufferedDrawingMode()
    content.vb: Protected Sub Screen_SetBufferedDrawingMode
  overload: BMVE.Core.Runnable.Screen_SetBufferedDrawingMode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_Load(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Sound_Load(System.Int32,System.String)
  id: Sound_Load(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_Load(Int32, String)
  nameWithType: Runnable.Sound_Load(Int32, String)
  fullName: BMVE.Core.Runnable.Sound_Load(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_Load
    path: API/Runnable.Sound.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗагружает аудиофайл\n"
  example: []
  syntax:
    content: protected void Sound_Load(int number, string filename)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    - id: filename
      type: System.String
      description: Путь к файлу
    content.vb: Protected Sub Sound_Load(number As Integer, filename As String)
  overload: BMVE.Core.Runnable.Sound_Load*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_IsLoaded(System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_IsLoaded(System.Int32)
  id: Sound_IsLoaded(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_IsLoaded(Int32)
  nameWithType: Runnable.Sound_IsLoaded(Int32)
  fullName: BMVE.Core.Runnable.Sound_IsLoaded(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_IsLoaded
    path: API/Runnable.Sound.cs
    startLine: 23
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗагружен ли аудиофайл с указанным номером\n"
  example: []
  syntax:
    content: protected bool Sound_IsLoaded(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    return:
      type: System.Boolean
      description: Загружен ли аудиофайл с указанным номером
    content.vb: Protected Function Sound_IsLoaded(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.Sound_IsLoaded*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_Play(System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_Play(System.Int32)
  id: Sound_Play(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_Play(Int32)
  nameWithType: Runnable.Sound_Play(Int32)
  fullName: BMVE.Core.Runnable.Sound_Play(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_Play
    path: API/Runnable.Sound.cs
    startLine: 29
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапускает воспроизведение аудиофайла\n"
  example: []
  syntax:
    content: protected void Sound_Play(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    content.vb: Protected Sub Sound_Play(number As Integer)
  overload: BMVE.Core.Runnable.Sound_Play*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_Pause(System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_Pause(System.Int32)
  id: Sound_Pause(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_Pause(Int32)
  nameWithType: Runnable.Sound_Pause(Int32)
  fullName: BMVE.Core.Runnable.Sound_Pause(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_Pause
    path: API/Runnable.Sound.cs
    startLine: 35
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПриостанавливает воспроизведение аудиофайла\n"
  example: []
  syntax:
    content: protected void Sound_Pause(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    content.vb: Protected Sub Sound_Pause(number As Integer)
  overload: BMVE.Core.Runnable.Sound_Pause*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_Stop(System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_Stop(System.Int32)
  id: Sound_Stop(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_Stop(Int32)
  nameWithType: Runnable.Sound_Stop(Int32)
  fullName: BMVE.Core.Runnable.Sound_Stop(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_Stop
    path: API/Runnable.Sound.cs
    startLine: 41
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОстанавливает воспроизведение аудиофайла\n"
  example: []
  syntax:
    content: protected void Sound_Stop(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    content.vb: Protected Sub Sound_Stop(number As Integer)
  overload: BMVE.Core.Runnable.Sound_Stop*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_SetVolume(System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_SetVolume(System.Int32,System.Int32)
  id: Sound_SetVolume(System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_SetVolume(Int32, Int32)
  nameWithType: Runnable.Sound_SetVolume(Int32, Int32)
  fullName: BMVE.Core.Runnable.Sound_SetVolume(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_SetVolume
    path: API/Runnable.Sound.cs
    startLine: 48
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает громкость воспроизведения аудиофайла\n"
  example: []
  syntax:
    content: protected void Sound_SetVolume(int number, int volume)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    - id: volume
      type: System.Int32
      description: Громкость в процентном соотношении (от 0 до 100)
    content.vb: Protected Sub Sound_SetVolume(number As Integer, volume As Integer)
  overload: BMVE.Core.Runnable.Sound_SetVolume*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_GetVolume(System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_GetVolume(System.Int32)
  id: Sound_GetVolume(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_GetVolume(Int32)
  nameWithType: Runnable.Sound_GetVolume(Int32)
  fullName: BMVE.Core.Runnable.Sound_GetVolume(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_GetVolume
    path: API/Runnable.Sound.cs
    startLine: 55
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает громкость воспроизведения аудиофайла\n"
  example: []
  syntax:
    content: protected int Sound_GetVolume(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    return:
      type: System.Int32
      description: Громкость в процентном соотношении (от 0 до 100)
    content.vb: Protected Function Sound_GetVolume(number As Integer) As Integer
  overload: BMVE.Core.Runnable.Sound_GetVolume*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Sound_Close(System.Int32)
  commentId: M:BMVE.Core.Runnable.Sound_Close(System.Int32)
  id: Sound_Close(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Sound_Close(Int32)
  nameWithType: Runnable.Sound_Close(Int32)
  fullName: BMVE.Core.Runnable.Sound_Close(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Sound.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Sound_Close
    path: API/Runnable.Sound.cs
    startLine: 61
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗакрывает аудиофайл\n"
  example: []
  syntax:
    content: protected void Sound_Close(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер аудиофайла
    content.vb: Protected Sub Sound_Close(number As Integer)
  overload: BMVE.Core.Runnable.Sound_Close*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages
  commentId: M:BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages
  id: Speech_GetAvailableRecognitionLanguages
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_GetAvailableRecognitionLanguages()
  nameWithType: Runnable.Speech_GetAvailableRecognitionLanguages()
  fullName: BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_GetAvailableRecognitionLanguages
    path: API/Runnable.Speech.cs
    startLine: 15
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает список всех доступных языков для распознавания речи\n"
  example: []
  syntax:
    content: protected string[] Speech_GetAvailableRecognitionLanguages()
    return:
      type: System.String[]
      description: Список всех доступных языков для распознавания речи
    content.vb: Protected Function Speech_GetAvailableRecognitionLanguages As String()
  overload: BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_SetRecognitionLanguage(System.String)
  commentId: M:BMVE.Core.Runnable.Speech_SetRecognitionLanguage(System.String)
  id: Speech_SetRecognitionLanguage(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_SetRecognitionLanguage(String)
  nameWithType: Runnable.Speech_SetRecognitionLanguage(String)
  fullName: BMVE.Core.Runnable.Speech_SetRecognitionLanguage(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_SetRecognitionLanguage
    path: API/Runnable.Speech.cs
    startLine: 21
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУстанавливает язык распознавания речи\n"
  example: []
  syntax:
    content: protected void Speech_SetRecognitionLanguage(string languageCode)
    parameters:
    - id: languageCode
      type: System.String
      description: Код языка распознавания речи, например &quot;en_US&quot;
    content.vb: Protected Sub Speech_SetRecognitionLanguage(languageCode As String)
  overload: BMVE.Core.Runnable.Speech_SetRecognitionLanguage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_StartRecognition
  commentId: M:BMVE.Core.Runnable.Speech_StartRecognition
  id: Speech_StartRecognition
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_StartRecognition()
  nameWithType: Runnable.Speech_StartRecognition()
  fullName: BMVE.Core.Runnable.Speech_StartRecognition()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_StartRecognition
    path: API/Runnable.Speech.cs
    startLine: 26
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nНачинает распознавание речи\n"
  example: []
  syntax:
    content: protected void Speech_StartRecognition()
    content.vb: Protected Sub Speech_StartRecognition
  overload: BMVE.Core.Runnable.Speech_StartRecognition*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_StopRecognition
  commentId: M:BMVE.Core.Runnable.Speech_StopRecognition
  id: Speech_StopRecognition
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_StopRecognition()
  nameWithType: Runnable.Speech_StopRecognition()
  fullName: BMVE.Core.Runnable.Speech_StopRecognition()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_StopRecognition
    path: API/Runnable.Speech.cs
    startLine: 31
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОстанавливает распознавание речи. <br />ВНИМАНИЕ!!! Остановка распознавания проиходит не сразу и требует некоторой задержки перед считыванием распознанного текста.\n"
  example: []
  syntax:
    content: protected void Speech_StopRecognition()
    content.vb: Protected Sub Speech_StopRecognition
  overload: BMVE.Core.Runnable.Speech_StopRecognition*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_GetRecognizedText
  commentId: M:BMVE.Core.Runnable.Speech_GetRecognizedText
  id: Speech_GetRecognizedText
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_GetRecognizedText()
  nameWithType: Runnable.Speech_GetRecognizedText()
  fullName: BMVE.Core.Runnable.Speech_GetRecognizedText()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_GetRecognizedText
    path: API/Runnable.Speech.cs
    startLine: 37
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить распознанный текст\n"
  example: []
  syntax:
    content: protected string Speech_GetRecognizedText()
    return:
      type: System.String
      description: Распознанный текст
    content.vb: Protected Function Speech_GetRecognizedText As String
  overload: BMVE.Core.Runnable.Speech_GetRecognizedText*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_ClearRecognizedText
  commentId: M:BMVE.Core.Runnable.Speech_ClearRecognizedText
  id: Speech_ClearRecognizedText
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_ClearRecognizedText()
  nameWithType: Runnable.Speech_ClearRecognizedText()
  fullName: BMVE.Core.Runnable.Speech_ClearRecognizedText()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_ClearRecognizedText
    path: API/Runnable.Speech.cs
    startLine: 42
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОчищает распознанный текст\n"
  example: []
  syntax:
    content: protected void Speech_ClearRecognizedText()
    content.vb: Protected Sub Speech_ClearRecognizedText
  overload: BMVE.Core.Runnable.Speech_ClearRecognizedText*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_GetAvailableSynthesizers
  commentId: M:BMVE.Core.Runnable.Speech_GetAvailableSynthesizers
  id: Speech_GetAvailableSynthesizers
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_GetAvailableSynthesizers()
  nameWithType: Runnable.Speech_GetAvailableSynthesizers()
  fullName: BMVE.Core.Runnable.Speech_GetAvailableSynthesizers()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_GetAvailableSynthesizers
    path: API/Runnable.Speech.cs
    startLine: 48
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает список имён доступных речевых синтезаторов\n"
  example: []
  syntax:
    content: protected string[] Speech_GetAvailableSynthesizers()
    return:
      type: System.String[]
      description: Список имён доступных речевых синтезаторов
    content.vb: Protected Function Speech_GetAvailableSynthesizers As String()
  overload: BMVE.Core.Runnable.Speech_GetAvailableSynthesizers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_GetSynthesizerLanguage(System.String)
  commentId: M:BMVE.Core.Runnable.Speech_GetSynthesizerLanguage(System.String)
  id: Speech_GetSynthesizerLanguage(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_GetSynthesizerLanguage(String)
  nameWithType: Runnable.Speech_GetSynthesizerLanguage(String)
  fullName: BMVE.Core.Runnable.Speech_GetSynthesizerLanguage(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_GetSynthesizerLanguage
    path: API/Runnable.Speech.cs
    startLine: 55
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить язык указанного речевого синтезатора\n"
  example: []
  syntax:
    content: protected string Speech_GetSynthesizerLanguage(string synthesizerName)
    parameters:
    - id: synthesizerName
      type: System.String
      description: Имя речевого синтезатора
    return:
      type: System.String
      description: Язык речевого синтезатора
    content.vb: Protected Function Speech_GetSynthesizerLanguage(synthesizerName As String) As String
  overload: BMVE.Core.Runnable.Speech_GetSynthesizerLanguage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_GetCurrentSynthesizer
  commentId: M:BMVE.Core.Runnable.Speech_GetCurrentSynthesizer
  id: Speech_GetCurrentSynthesizer
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_GetCurrentSynthesizer()
  nameWithType: Runnable.Speech_GetCurrentSynthesizer()
  fullName: BMVE.Core.Runnable.Speech_GetCurrentSynthesizer()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_GetCurrentSynthesizer
    path: API/Runnable.Speech.cs
    startLine: 61
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить имя текущего речевого синтезатора\n"
  example: []
  syntax:
    content: protected string Speech_GetCurrentSynthesizer()
    return:
      type: System.String
      description: Имя текущего речевого синтезатора
    content.vb: Protected Function Speech_GetCurrentSynthesizer As String
  overload: BMVE.Core.Runnable.Speech_GetCurrentSynthesizer*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_SetCurrentSynthesizer(System.String)
  commentId: M:BMVE.Core.Runnable.Speech_SetCurrentSynthesizer(System.String)
  id: Speech_SetCurrentSynthesizer(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_SetCurrentSynthesizer(String)
  nameWithType: Runnable.Speech_SetCurrentSynthesizer(String)
  fullName: BMVE.Core.Runnable.Speech_SetCurrentSynthesizer(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_SetCurrentSynthesizer
    path: API/Runnable.Speech.cs
    startLine: 67
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадать синтезатор речи\n"
  example: []
  syntax:
    content: protected void Speech_SetCurrentSynthesizer(string synthesizerName)
    parameters:
    - id: synthesizerName
      type: System.String
      description: Имя речевого синтезатора
    content.vb: Protected Sub Speech_SetCurrentSynthesizer(synthesizerName As String)
  overload: BMVE.Core.Runnable.Speech_SetCurrentSynthesizer*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_SynthesizerSpeak(System.String)
  commentId: M:BMVE.Core.Runnable.Speech_SynthesizerSpeak(System.String)
  id: Speech_SynthesizerSpeak(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_SynthesizerSpeak(String)
  nameWithType: Runnable.Speech_SynthesizerSpeak(String)
  fullName: BMVE.Core.Runnable.Speech_SynthesizerSpeak(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_SynthesizerSpeak
    path: API/Runnable.Speech.cs
    startLine: 73
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧитает заданный текст при помощи текущего речевого синтезатора\n"
  example: []
  syntax:
    content: protected void Speech_SynthesizerSpeak(string text)
    parameters:
    - id: text
      type: System.String
      description: Текст для прочтения речевым синтезатором
    content.vb: Protected Sub Speech_SynthesizerSpeak(text As String)
  overload: BMVE.Core.Runnable.Speech_SynthesizerSpeak*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking
  commentId: M:BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking
  id: Speech_IsSynthesizerSpeaking
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Speech_IsSynthesizerSpeaking()
  nameWithType: Runnable.Speech_IsSynthesizerSpeaking()
  fullName: BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Speech.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Speech_IsSynthesizerSpeaking
    path: API/Runnable.Speech.cs
    startLine: 79
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧитает ли текст ли синтезатор в данный момент\n"
  example: []
  syntax:
    content: protected bool Speech_IsSynthesizerSpeaking()
    return:
      type: System.Boolean
      description: Читает ли текст ли синтезатор в данный момент
    content.vb: Protected Function Speech_IsSynthesizerSpeaking As Boolean
  overload: BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_Start(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_Start(System.Int32)
  id: Stopwatch_Start(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_Start(Int32)
  nameWithType: Runnable.Stopwatch_Start(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_Start(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_Start
    path: API/Runnable.Stopwatch.cs
    startLine: 15
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапуск таймера\n"
  example: []
  syntax:
    content: protected void Stopwatch_Start(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    content.vb: Protected Sub Stopwatch_Start(number As Integer)
  overload: BMVE.Core.Runnable.Stopwatch_Start*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed(System.Int32)
  id: Stopwatch_GetMillisecondsElapsed(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_GetMillisecondsElapsed(Int32)
  nameWithType: Runnable.Stopwatch_GetMillisecondsElapsed(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_GetMillisecondsElapsed
    path: API/Runnable.Stopwatch.cs
    startLine: 22
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить количество милисекунд, прошешее с начала запуска указанного таймера\n"
  example: []
  syntax:
    content: protected long Stopwatch_GetMillisecondsElapsed(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    return:
      type: System.Int64
      description: Прошедшее время в миллисекундах
    content.vb: Protected Function Stopwatch_GetMillisecondsElapsed(number As Integer) As Long
  overload: BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed(System.Int32)
  id: Stopwatch_GetSecondsElapsed(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_GetSecondsElapsed(Int32)
  nameWithType: Runnable.Stopwatch_GetSecondsElapsed(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_GetSecondsElapsed
    path: API/Runnable.Stopwatch.cs
    startLine: 29
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить количество секунд, прошешее с начала запуска указанного таймера\n"
  example: []
  syntax:
    content: protected long Stopwatch_GetSecondsElapsed(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    return:
      type: System.Int64
      description: Прошедшее время в секундах
    content.vb: Protected Function Stopwatch_GetSecondsElapsed(number As Integer) As Long
  overload: BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_Stop(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_Stop(System.Int32)
  id: Stopwatch_Stop(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_Stop(Int32)
  nameWithType: Runnable.Stopwatch_Stop(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_Stop(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_Stop
    path: API/Runnable.Stopwatch.cs
    startLine: 35
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОстановка таймера\n"
  example: []
  syntax:
    content: protected void Stopwatch_Stop(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    content.vb: Protected Sub Stopwatch_Stop(number As Integer)
  overload: BMVE.Core.Runnable.Stopwatch_Stop*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_Close(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_Close(System.Int32)
  id: Stopwatch_Close(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_Close(Int32)
  nameWithType: Runnable.Stopwatch_Close(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_Close(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_Close
    path: API/Runnable.Stopwatch.cs
    startLine: 41
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗакрыть сокет таймера\n"
  example: []
  syntax:
    content: protected void Stopwatch_Close(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    content.vb: Protected Sub Stopwatch_Close(number As Integer)
  overload: BMVE.Core.Runnable.Stopwatch_Close*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_IsRunning(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_IsRunning(System.Int32)
  id: Stopwatch_IsRunning(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_IsRunning(Int32)
  nameWithType: Runnable.Stopwatch_IsRunning(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_IsRunning(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_IsRunning
    path: API/Runnable.Stopwatch.cs
    startLine: 48
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапущен ли таймер с указанным номером\n"
  example: []
  syntax:
    content: protected bool Stopwatch_IsRunning(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    return:
      type: System.Boolean
      description: Запущен ли таймер
    content.vb: Protected Function Stopwatch_IsRunning(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.Stopwatch_IsRunning*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Stopwatch_IsCreated(System.Int32)
  commentId: M:BMVE.Core.Runnable.Stopwatch_IsCreated(System.Int32)
  id: Stopwatch_IsCreated(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Stopwatch_IsCreated(Int32)
  nameWithType: Runnable.Stopwatch_IsCreated(Int32)
  fullName: BMVE.Core.Runnable.Stopwatch_IsCreated(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Stopwatch.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Stopwatch_IsCreated
    path: API/Runnable.Stopwatch.cs
    startLine: 55
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздан ли таймер с указанным номером\n"
  example: []
  syntax:
    content: protected bool Stopwatch_IsCreated(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер таймера
    return:
      type: System.Boolean
      description: Создан ли таймер
    content.vb: Protected Function Stopwatch_IsCreated(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.Stopwatch_IsCreated*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_GetCharCode(System.String)
  commentId: M:BMVE.Core.Runnable.String_GetCharCode(System.String)
  id: String_GetCharCode(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_GetCharCode(String)
  nameWithType: Runnable.String_GetCharCode(String)
  fullName: BMVE.Core.Runnable.String_GetCharCode(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_GetCharCode
    path: API/Runnable.String.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучить код первого символа в строке\n"
  example: []
  syntax:
    content: protected int String_GetCharCode(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка, содержащая как минимум один символ
    return:
      type: System.Int32
      description: Код символа
    content.vb: Protected Function String_GetCharCode(str As String) As Integer
  overload: BMVE.Core.Runnable.String_GetCharCode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Length(System.String)
  commentId: M:BMVE.Core.Runnable.String_Length(System.String)
  id: String_Length(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Length(String)
  nameWithType: Runnable.String_Length(String)
  fullName: BMVE.Core.Runnable.String_Length(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Length
    path: API/Runnable.String.cs
    startLine: 23
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает длину указанной строки\n"
  example: []
  syntax:
    content: protected int String_Length(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Int32
      description: Длина строки
    content.vb: Protected Function String_Length(str As String) As Integer
  overload: BMVE.Core.Runnable.String_Length*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_CharAt(System.String,System.Int32)
  commentId: M:BMVE.Core.Runnable.String_CharAt(System.String,System.Int32)
  id: String_CharAt(System.String,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_CharAt(String, Int32)
  nameWithType: Runnable.String_CharAt(String, Int32)
  fullName: BMVE.Core.Runnable.String_CharAt(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_CharAt
    path: API/Runnable.String.cs
    startLine: 31
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает символ, находящийся по указанному индексу в указанной строке\n"
  example: []
  syntax:
    content: protected string String_CharAt(string str, int index)
    parameters:
    - id: str
      type: System.String
      description: Строка
    - id: index
      type: System.Int32
      description: Индекс символа
    return:
      type: System.String
      description: Строка, содержащая символ
    content.vb: Protected Function String_CharAt(str As String, index As Integer) As String
  overload: BMVE.Core.Runnable.String_CharAt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IndexOf(System.String,System.String)
  commentId: M:BMVE.Core.Runnable.String_IndexOf(System.String,System.String)
  id: String_IndexOf(System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IndexOf(String, String)
  nameWithType: Runnable.String_IndexOf(String, String)
  fullName: BMVE.Core.Runnable.String_IndexOf(System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IndexOf
    path: API/Runnable.String.cs
    startLine: 39
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает индекс первой найденной указанной строки в другой строке\n"
  example: []
  syntax:
    content: protected int String_IndexOf(string fullString, string findString)
    parameters:
    - id: fullString
      type: System.String
      description: Строка, в которой будет осуществляться поиск
    - id: findString
      type: System.String
      description: Строка, вхождение которой будет искаться
    return:
      type: System.Int32
      description: Индекс первой найденной указанной строки в другой строке или -1, если не найдена
    content.vb: Protected Function String_IndexOf(fullString As String, findString As String) As Integer
  overload: BMVE.Core.Runnable.String_IndexOf*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_LastIndexOf(System.String,System.String)
  commentId: M:BMVE.Core.Runnable.String_LastIndexOf(System.String,System.String)
  id: String_LastIndexOf(System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_LastIndexOf(String, String)
  nameWithType: Runnable.String_LastIndexOf(String, String)
  fullName: BMVE.Core.Runnable.String_LastIndexOf(System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_LastIndexOf
    path: API/Runnable.String.cs
    startLine: 47
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает индекс последней найденной указанной строки в другой строке\n"
  example: []
  syntax:
    content: protected int String_LastIndexOf(string fullString, string findString)
    parameters:
    - id: fullString
      type: System.String
      description: Строка, в которой будет осуществляться поиск
    - id: findString
      type: System.String
      description: Строка, вхождение которой будет искаться
    return:
      type: System.Int32
      description: Индекс последней найденной указанной строки в другой строке или -1, если не найдена
    content.vb: Protected Function String_LastIndexOf(fullString As String, findString As String) As Integer
  overload: BMVE.Core.Runnable.String_LastIndexOf*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_LeftSubstring(System.String,System.Int32)
  commentId: M:BMVE.Core.Runnable.String_LeftSubstring(System.String,System.Int32)
  id: String_LeftSubstring(System.String,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_LeftSubstring(String, Int32)
  nameWithType: Runnable.String_LeftSubstring(String, Int32)
  fullName: BMVE.Core.Runnable.String_LeftSubstring(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_LeftSubstring
    path: API/Runnable.String.cs
    startLine: 55
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает строку, содержающую указанное количество символов слева из другой строки\n"
  example: []
  syntax:
    content: protected string String_LeftSubstring(string str, int length)
    parameters:
    - id: str
      type: System.String
      description: Строка, из которой будет взята подстрока
    - id: length
      type: System.Int32
      description: Количество символов слева, которое должно быть взято
    return:
      type: System.String
      description: Строка, содержающая указанное количество символов слева из другой строки
    content.vb: Protected Function String_LeftSubstring(str As String, length As Integer) As String
  overload: BMVE.Core.Runnable.String_LeftSubstring*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_RightSubstring(System.String,System.Int32)
  commentId: M:BMVE.Core.Runnable.String_RightSubstring(System.String,System.Int32)
  id: String_RightSubstring(System.String,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_RightSubstring(String, Int32)
  nameWithType: Runnable.String_RightSubstring(String, Int32)
  fullName: BMVE.Core.Runnable.String_RightSubstring(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_RightSubstring
    path: API/Runnable.String.cs
    startLine: 63
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает строку, содержающую указанное количество символов справа из другой строки\n"
  example: []
  syntax:
    content: protected string String_RightSubstring(string str, int length)
    parameters:
    - id: str
      type: System.String
      description: Строка, из которой будет взята подстрока
    - id: length
      type: System.Int32
      description: Количество символов справа, которое должно быть взято
    return:
      type: System.String
      description: Строка, содержающая указанное количество символов справа из другой строки
    content.vb: Protected Function String_RightSubstring(str As String, length As Integer) As String
  overload: BMVE.Core.Runnable.String_RightSubstring*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Substring(System.String,System.Int32,System.Int32)
  commentId: M:BMVE.Core.Runnable.String_Substring(System.String,System.Int32,System.Int32)
  id: String_Substring(System.String,System.Int32,System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Substring(String, Int32, Int32)
  nameWithType: Runnable.String_Substring(String, Int32, Int32)
  fullName: BMVE.Core.Runnable.String_Substring(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Substring
    path: API/Runnable.String.cs
    startLine: 72
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает строку, содержащую указанное количество символов, скопированное из другой строки, начиная с указанного индекса\n"
  example: []
  syntax:
    content: protected string String_Substring(string str, int start, int length)
    parameters:
    - id: str
      type: System.String
      description: Строка, из которой будет взята подстрока
    - id: start
      type: System.Int32
      description: Индекс, начиная с которого символы должны быть скопированы
    - id: length
      type: System.Int32
      description: Количество символов, которое должно быть скопировано
    return:
      type: System.String
      description: Строка, содержающая указанное количество символов из другой строки
    content.vb: Protected Function String_Substring(str As String, start As Integer, length As Integer) As String
  overload: BMVE.Core.Runnable.String_Substring*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_ToLower(System.String)
  commentId: M:BMVE.Core.Runnable.String_ToLower(System.String)
  id: String_ToLower(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_ToLower(String)
  nameWithType: Runnable.String_ToLower(String)
  fullName: BMVE.Core.Runnable.String_ToLower(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_ToLower
    path: API/Runnable.String.cs
    startLine: 79
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразовывает строку к нижнему регистру\n"
  example: []
  syntax:
    content: protected string String_ToLower(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Строка в нижнем регистре
    content.vb: Protected Function String_ToLower(str As String) As String
  overload: BMVE.Core.Runnable.String_ToLower*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_ToUpper(System.String)
  commentId: M:BMVE.Core.Runnable.String_ToUpper(System.String)
  id: String_ToUpper(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_ToUpper(String)
  nameWithType: Runnable.String_ToUpper(String)
  fullName: BMVE.Core.Runnable.String_ToUpper(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_ToUpper
    path: API/Runnable.String.cs
    startLine: 86
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПреобразовывает строку к ВЕРХНЕМУ регистру\n"
  example: []
  syntax:
    content: protected string String_ToUpper(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Строка в ВЕРХНЕМ регистре
    content.vb: Protected Function String_ToUpper(str As String) As String
  overload: BMVE.Core.Runnable.String_ToUpper*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_TrimLeft(System.String)
  commentId: M:BMVE.Core.Runnable.String_TrimLeft(System.String)
  id: String_TrimLeft(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_TrimLeft(String)
  nameWithType: Runnable.String_TrimLeft(String)
  fullName: BMVE.Core.Runnable.String_TrimLeft(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_TrimLeft
    path: API/Runnable.String.cs
    startLine: 93
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУбирает все отступы и пробелы слева в строке\n"
  example: []
  syntax:
    content: protected string String_TrimLeft(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Строка без отступов слева
    content.vb: Protected Function String_TrimLeft(str As String) As String
  overload: BMVE.Core.Runnable.String_TrimLeft*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_TrimRight(System.String)
  commentId: M:BMVE.Core.Runnable.String_TrimRight(System.String)
  id: String_TrimRight(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_TrimRight(String)
  nameWithType: Runnable.String_TrimRight(String)
  fullName: BMVE.Core.Runnable.String_TrimRight(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_TrimRight
    path: API/Runnable.String.cs
    startLine: 100
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУбирает все отступы и пробелы справа в строке\n"
  example: []
  syntax:
    content: protected string String_TrimRight(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Строка без отступов справа
    content.vb: Protected Function String_TrimRight(str As String) As String
  overload: BMVE.Core.Runnable.String_TrimRight*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Trim(System.String)
  commentId: M:BMVE.Core.Runnable.String_Trim(System.String)
  id: String_Trim(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Trim(String)
  nameWithType: Runnable.String_Trim(String)
  fullName: BMVE.Core.Runnable.String_Trim(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Trim
    path: API/Runnable.String.cs
    startLine: 107
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУбирает все отступы и пробелы в начале и конце строки\n"
  example: []
  syntax:
    content: protected string String_Trim(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Строка без отступов в начале и в конце
    content.vb: Protected Function String_Trim(str As String) As String
  overload: BMVE.Core.Runnable.String_Trim*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Replace(System.String,System.String,System.String)
  commentId: M:BMVE.Core.Runnable.String_Replace(System.String,System.String,System.String)
  id: String_Replace(System.String,System.String,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Replace(String, String, String)
  nameWithType: Runnable.String_Replace(String, String, String)
  fullName: BMVE.Core.Runnable.String_Replace(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Replace
    path: API/Runnable.String.cs
    startLine: 116
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗаменяет все вхождения указанной подстроки на другую подстроку в указанной строке\n"
  example: []
  syntax:
    content: protected string String_Replace(string fullString, string oldValue, string newValue)
    parameters:
    - id: fullString
      type: System.String
      description: Строка
    - id: oldValue
      type: System.String
      description: Подстрока для замены
    - id: newValue
      type: System.String
      description: Подстрока, на которую будет заменено старое значение
    return:
      type: System.String
      description: Строка с замененными последовательностями
    content.vb: Protected Function String_Replace(fullString As String, oldValue As String, newValue As String) As String
  overload: BMVE.Core.Runnable.String_Replace*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Reverse(System.String)
  commentId: M:BMVE.Core.Runnable.String_Reverse(System.String)
  id: String_Reverse(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Reverse(String)
  nameWithType: Runnable.String_Reverse(String)
  fullName: BMVE.Core.Runnable.String_Reverse(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Reverse
    path: API/Runnable.String.cs
    startLine: 123
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПереворачивает строку задом наперед\n"
  example: []
  syntax:
    content: protected string String_Reverse(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Перевернутая строка
    content.vb: Protected Function String_Reverse(str As String) As String
  overload: BMVE.Core.Runnable.String_Reverse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_CreateEmpty
  commentId: M:BMVE.Core.Runnable.String_CreateEmpty
  id: String_CreateEmpty
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_CreateEmpty()
  nameWithType: Runnable.String_CreateEmpty()
  fullName: BMVE.Core.Runnable.String_CreateEmpty()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_CreateEmpty
    path: API/Runnable.String.cs
    startLine: 129
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает пустую строку\n"
  example: []
  syntax:
    content: protected string String_CreateEmpty()
    return:
      type: System.String
      description: Пустая строка
    content.vb: Protected Function String_CreateEmpty As String
  overload: BMVE.Core.Runnable.String_CreateEmpty*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_CreateSpaces(System.Int32)
  commentId: M:BMVE.Core.Runnable.String_CreateSpaces(System.Int32)
  id: String_CreateSpaces(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_CreateSpaces(Int32)
  nameWithType: Runnable.String_CreateSpaces(Int32)
  fullName: BMVE.Core.Runnable.String_CreateSpaces(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_CreateSpaces
    path: API/Runnable.String.cs
    startLine: 136
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает строку, состоящую из указанного количества пробелов\n"
  example: []
  syntax:
    content: protected string String_CreateSpaces(int length)
    parameters:
    - id: length
      type: System.Int32
      description: Количество пробелов
    return:
      type: System.String
      description: Строка из пробелов
    content.vb: Protected Function String_CreateSpaces(length As Integer) As String
  overload: BMVE.Core.Runnable.String_CreateSpaces*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IsOnlyDigits(System.String)
  commentId: M:BMVE.Core.Runnable.String_IsOnlyDigits(System.String)
  id: String_IsOnlyDigits(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IsOnlyDigits(String)
  nameWithType: Runnable.String_IsOnlyDigits(String)
  fullName: BMVE.Core.Runnable.String_IsOnlyDigits(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IsOnlyDigits
    path: API/Runnable.String.cs
    startLine: 143
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, находятся ли в строке только цифры\n"
  example: []
  syntax:
    content: protected bool String_IsOnlyDigits(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Boolean
      description: В строке только/не только цифры
    content.vb: Protected Function String_IsOnlyDigits(str As String) As Boolean
  overload: BMVE.Core.Runnable.String_IsOnlyDigits*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IsOnlyLetters(System.String)
  commentId: M:BMVE.Core.Runnable.String_IsOnlyLetters(System.String)
  id: String_IsOnlyLetters(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IsOnlyLetters(String)
  nameWithType: Runnable.String_IsOnlyLetters(String)
  fullName: BMVE.Core.Runnable.String_IsOnlyLetters(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IsOnlyLetters
    path: API/Runnable.String.cs
    startLine: 150
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПроверяет, находятся ли в строке только буквы\n"
  example: []
  syntax:
    content: protected bool String_IsOnlyLetters(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Boolean
      description: В строке только/не только буквы
    content.vb: Protected Function String_IsOnlyLetters(str As String) As Boolean
  overload: BMVE.Core.Runnable.String_IsOnlyLetters*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IsNumber(System.String)
  commentId: M:BMVE.Core.Runnable.String_IsNumber(System.String)
  id: String_IsNumber(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IsNumber(String)
  nameWithType: Runnable.String_IsNumber(String)
  fullName: BMVE.Core.Runnable.String_IsNumber(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IsNumber
    path: API/Runnable.String.cs
    startLine: 157
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЯвляется ли строка числом\n"
  example: []
  syntax:
    content: protected bool String_IsNumber(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Boolean
      description: Является ли строка числом
    content.vb: Protected Function String_IsNumber(str As String) As Boolean
  overload: BMVE.Core.Runnable.String_IsNumber*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IsLowerCase(System.String)
  commentId: M:BMVE.Core.Runnable.String_IsLowerCase(System.String)
  id: String_IsLowerCase(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IsLowerCase(String)
  nameWithType: Runnable.String_IsLowerCase(String)
  fullName: BMVE.Core.Runnable.String_IsLowerCase(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IsLowerCase
    path: API/Runnable.String.cs
    startLine: 164
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nНаходится ли вся строка в нижнем регистре\n"
  example: []
  syntax:
    content: protected bool String_IsLowerCase(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Boolean
      description: Находится ли вся строка в нижнем регистре
    content.vb: Protected Function String_IsLowerCase(str As String) As Boolean
  overload: BMVE.Core.Runnable.String_IsLowerCase*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IsUpperCase(System.String)
  commentId: M:BMVE.Core.Runnable.String_IsUpperCase(System.String)
  id: String_IsUpperCase(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IsUpperCase(String)
  nameWithType: Runnable.String_IsUpperCase(String)
  fullName: BMVE.Core.Runnable.String_IsUpperCase(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IsUpperCase
    path: API/Runnable.String.cs
    startLine: 171
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nНаходится ли вся строка в ВЕРХНЕМ регистре\n"
  example: []
  syntax:
    content: protected bool String_IsUpperCase(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Boolean
      description: Находится ли вся строка в ВЕРХНЕМ регистре
    content.vb: Protected Function String_IsUpperCase(str As String) As Boolean
  overload: BMVE.Core.Runnable.String_IsUpperCase*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_IsEmpty(System.String)
  commentId: M:BMVE.Core.Runnable.String_IsEmpty(System.String)
  id: String_IsEmpty(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_IsEmpty(String)
  nameWithType: Runnable.String_IsEmpty(String)
  fullName: BMVE.Core.Runnable.String_IsEmpty(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_IsEmpty
    path: API/Runnable.String.cs
    startLine: 178
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЯвляется ли строка пустой\n"
  example: []
  syntax:
    content: protected bool String_IsEmpty(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.Boolean
      description: Является ли строка пустой
    content.vb: Protected Function String_IsEmpty(str As String) As Boolean
  overload: BMVE.Core.Runnable.String_IsEmpty*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Copy(System.String)
  commentId: M:BMVE.Core.Runnable.String_Copy(System.String)
  id: String_Copy(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Copy(String)
  nameWithType: Runnable.String_Copy(String)
  fullName: BMVE.Core.Runnable.String_Copy(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Copy
    path: API/Runnable.String.cs
    startLine: 185
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает копию строки\n"
  example: []
  syntax:
    content: protected string String_Copy(string str)
    parameters:
    - id: str
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Копия строки
    content.vb: Protected Function String_Copy(str As String) As String
  overload: BMVE.Core.Runnable.String_Copy*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.String_Format(System.String,System.Object[])
  commentId: M:BMVE.Core.Runnable.String_Format(System.String,System.Object[])
  id: String_Format(System.String,System.Object[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: String_Format(String, Object[])
  nameWithType: Runnable.String_Format(String, Object[])
  fullName: BMVE.Core.Runnable.String_Format(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.String.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: String_Format
    path: API/Runnable.String.cs
    startLine: 193
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nФорматирует строку\n"
  example: []
  syntax:
    content: protected string String_Format(string str, params object[] values)
    parameters:
    - id: str
      type: System.String
      description: Строка
    - id: values
      type: System.Object[]
      description: Значения для подстановки
    return:
      type: System.String
      description: Форматированная строка
    content.vb: Protected Function String_Format(str As String, ParamArray values As Object()) As String
  overload: BMVE.Core.Runnable.String_Format*
  nameWithType.vb: Runnable.String_Format(String, Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.String_Format(System.String, System.Object())
  name.vb: String_Format(String, Object())
- uid: BMVE.Core.Runnable.System_Sleep(System.Int32)
  commentId: M:BMVE.Core.Runnable.System_Sleep(System.Int32)
  id: System_Sleep(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_Sleep(Int32)
  nameWithType: Runnable.System_Sleep(Int32)
  fullName: BMVE.Core.Runnable.System_Sleep(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_Sleep
    path: API/Runnable.System.cs
    startLine: 15
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПриостановка выполнения программы на указанное количество миллисекунд\n"
  example: []
  syntax:
    content: protected void System_Sleep(int milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int32
      description: Количество миллисекунд, на которое приостановить выполнение
    content.vb: Protected Sub System_Sleep(milliseconds As Integer)
  overload: BMVE.Core.Runnable.System_Sleep*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetEnvironmentArguments
  commentId: M:BMVE.Core.Runnable.System_GetEnvironmentArguments
  id: System_GetEnvironmentArguments
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetEnvironmentArguments()
  nameWithType: Runnable.System_GetEnvironmentArguments()
  fullName: BMVE.Core.Runnable.System_GetEnvironmentArguments()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetEnvironmentArguments
    path: API/Runnable.System.cs
    startLine: 21
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучает список всех аргументов командной строки, использованной при запуске программы\n"
  example: []
  syntax:
    content: protected string[] System_GetEnvironmentArguments()
    return:
      type: System.String[]
      description: Список всех аргументов командной строки
    content.vb: Protected Function System_GetEnvironmentArguments As String()
  overload: BMVE.Core.Runnable.System_GetEnvironmentArguments*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetMachineName
  commentId: M:BMVE.Core.Runnable.System_GetMachineName
  id: System_GetMachineName
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetMachineName()
  nameWithType: Runnable.System_GetMachineName()
  fullName: BMVE.Core.Runnable.System_GetMachineName()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetMachineName
    path: API/Runnable.System.cs
    startLine: 27
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает имя netBIOS данного локального компьютера\n"
  example: []
  syntax:
    content: protected string System_GetMachineName()
    return:
      type: System.String
      description: Возвращает имя netBIOS данного локального компьютера
    content.vb: Protected Function System_GetMachineName As String
  overload: BMVE.Core.Runnable.System_GetMachineName*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetOSVersion
  commentId: M:BMVE.Core.Runnable.System_GetOSVersion
  id: System_GetOSVersion
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetOSVersion()
  nameWithType: Runnable.System_GetOSVersion()
  fullName: BMVE.Core.Runnable.System_GetOSVersion()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetOSVersion
    path: API/Runnable.System.cs
    startLine: 33
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает идентификатор платформы, версию и пакет обновления, установленные в системе\n"
  example: []
  syntax:
    content: protected string System_GetOSVersion()
    return:
      type: System.String
      description: Возвращает идентификатор платформы, версию и пакет обновления, установленные в системе
    content.vb: Protected Function System_GetOSVersion As String
  overload: BMVE.Core.Runnable.System_GetOSVersion*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetProcessorCount
  commentId: M:BMVE.Core.Runnable.System_GetProcessorCount
  id: System_GetProcessorCount
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetProcessorCount()
  nameWithType: Runnable.System_GetProcessorCount()
  fullName: BMVE.Core.Runnable.System_GetProcessorCount()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetProcessorCount
    path: API/Runnable.System.cs
    startLine: 39
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает число процессоров на текущей машине\n"
  example: []
  syntax:
    content: protected int System_GetProcessorCount()
    return:
      type: System.Int32
      description: Возвращает число процессоров на текущей машине
    content.vb: Protected Function System_GetProcessorCount As Integer
  overload: BMVE.Core.Runnable.System_GetProcessorCount*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetSystemPageSize
  commentId: M:BMVE.Core.Runnable.System_GetSystemPageSize
  id: System_GetSystemPageSize
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetSystemPageSize()
  nameWithType: Runnable.System_GetSystemPageSize()
  fullName: BMVE.Core.Runnable.System_GetSystemPageSize()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetSystemPageSize
    path: API/Runnable.System.cs
    startLine: 45
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает количество байтов на странице оперативной памяти системы\n"
  example: []
  syntax:
    content: protected int System_GetSystemPageSize()
    return:
      type: System.Int32
      description: Возвращает количество байтов на странице оперативной памяти системы
    content.vb: Protected Function System_GetSystemPageSize As Integer
  overload: BMVE.Core.Runnable.System_GetSystemPageSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetSystemDirectory
  commentId: M:BMVE.Core.Runnable.System_GetSystemDirectory
  id: System_GetSystemDirectory
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetSystemDirectory()
  nameWithType: Runnable.System_GetSystemDirectory()
  fullName: BMVE.Core.Runnable.System_GetSystemDirectory()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetSystemDirectory
    path: API/Runnable.System.cs
    startLine: 51
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает полный путь к системному каталогу\n"
  example: []
  syntax:
    content: protected string System_GetSystemDirectory()
    return:
      type: System.String
      description: Возвращает полный путь к системному каталогу
    content.vb: Protected Function System_GetSystemDirectory As String
  overload: BMVE.Core.Runnable.System_GetSystemDirectory*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetUserDomainName
  commentId: M:BMVE.Core.Runnable.System_GetUserDomainName
  id: System_GetUserDomainName
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetUserDomainName()
  nameWithType: Runnable.System_GetUserDomainName()
  fullName: BMVE.Core.Runnable.System_GetUserDomainName()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetUserDomainName
    path: API/Runnable.System.cs
    startLine: 57
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает имя сетевого домена, связанного с текущим пользователем\n"
  example: []
  syntax:
    content: protected string System_GetUserDomainName()
    return:
      type: System.String
      description: Возвращает имя сетевого домена, связанного с текущим пользователем
    content.vb: Protected Function System_GetUserDomainName As String
  overload: BMVE.Core.Runnable.System_GetUserDomainName*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetUserName
  commentId: M:BMVE.Core.Runnable.System_GetUserName
  id: System_GetUserName
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetUserName()
  nameWithType: Runnable.System_GetUserName()
  fullName: BMVE.Core.Runnable.System_GetUserName()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetUserName
    path: API/Runnable.System.cs
    startLine: 63
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает имя пользователя, который на данный момент выполнил вход в операционную систему\n"
  example: []
  syntax:
    content: protected string System_GetUserName()
    return:
      type: System.String
      description: Имя пользователя
    content.vb: Protected Function System_GetUserName As String
  overload: BMVE.Core.Runnable.System_GetUserName*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_GetWorkingMemorySet
  commentId: M:BMVE.Core.Runnable.System_GetWorkingMemorySet
  id: System_GetWorkingMemorySet
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_GetWorkingMemorySet()
  nameWithType: Runnable.System_GetWorkingMemorySet()
  fullName: BMVE.Core.Runnable.System_GetWorkingMemorySet()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_GetWorkingMemorySet
    path: API/Runnable.System.cs
    startLine: 69
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает объем физической памяти, сопоставленной контексту текущего процесса\n"
  example: []
  syntax:
    content: protected string System_GetWorkingMemorySet()
    return:
      type: System.String
      description: ''
    content.vb: Protected Function System_GetWorkingMemorySet As String
  overload: BMVE.Core.Runnable.System_GetWorkingMemorySet*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.System_Version
  commentId: M:BMVE.Core.Runnable.System_Version
  id: System_Version
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: System_Version()
  nameWithType: Runnable.System_Version()
  fullName: BMVE.Core.Runnable.System_Version()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.System.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: System_Version
    path: API/Runnable.System.cs
    startLine: 75
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВерсия продукта Black Magic Virtual Environment\n"
  example: []
  syntax:
    content: protected string System_Version()
    return:
      type: System.String
      description: Версия продукта BMVE
    content.vb: Protected Function System_Version As String
  overload: BMVE.Core.Runnable.System_Version*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_SetFont(System.String)
  commentId: M:BMVE.Core.Runnable.Text_SetFont(System.String)
  id: Text_SetFont(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_SetFont(String)
  nameWithType: Runnable.Text_SetFont(String)
  fullName: BMVE.Core.Runnable.Text_SetFont(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_SetFont
    path: API/Runnable.Text.cs
    startLine: 15
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает семейство шрифтов для отображения текста\n"
  example: []
  syntax:
    content: protected void Text_SetFont(string fontFamily)
    parameters:
    - id: fontFamily
      type: System.String
      description: Название семейства шрифтов
    content.vb: Protected Sub Text_SetFont(fontFamily As String)
  overload: BMVE.Core.Runnable.Text_SetFont*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_SetFontSize(System.Double)
  commentId: M:BMVE.Core.Runnable.Text_SetFontSize(System.Double)
  id: Text_SetFontSize(System.Double)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_SetFontSize(Double)
  nameWithType: Runnable.Text_SetFontSize(Double)
  fullName: BMVE.Core.Runnable.Text_SetFontSize(System.Double)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_SetFontSize
    path: API/Runnable.Text.cs
    startLine: 21
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает размер шрифта\n"
  example: []
  syntax:
    content: protected void Text_SetFontSize(double fontSize)
    parameters:
    - id: fontSize
      type: System.Double
      description: Размер шрифта
    content.vb: Protected Sub Text_SetFontSize(fontSize As Double)
  overload: BMVE.Core.Runnable.Text_SetFontSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_SetFontNormal
  commentId: M:BMVE.Core.Runnable.Text_SetFontNormal
  id: Text_SetFontNormal
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_SetFontNormal()
  nameWithType: Runnable.Text_SetFontNormal()
  fullName: BMVE.Core.Runnable.Text_SetFontNormal()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_SetFontNormal
    path: API/Runnable.Text.cs
    startLine: 26
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает стиль текста: обычный\n"
  example: []
  syntax:
    content: protected void Text_SetFontNormal()
    content.vb: Protected Sub Text_SetFontNormal
  overload: BMVE.Core.Runnable.Text_SetFontNormal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_SetFontBold
  commentId: M:BMVE.Core.Runnable.Text_SetFontBold
  id: Text_SetFontBold
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_SetFontBold()
  nameWithType: Runnable.Text_SetFontBold()
  fullName: BMVE.Core.Runnable.Text_SetFontBold()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_SetFontBold
    path: API/Runnable.Text.cs
    startLine: 31
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает стиль текста: жирный\n"
  example: []
  syntax:
    content: protected void Text_SetFontBold()
    content.vb: Protected Sub Text_SetFontBold
  overload: BMVE.Core.Runnable.Text_SetFontBold*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_SetFontItalic
  commentId: M:BMVE.Core.Runnable.Text_SetFontItalic
  id: Text_SetFontItalic
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_SetFontItalic()
  nameWithType: Runnable.Text_SetFontItalic()
  fullName: BMVE.Core.Runnable.Text_SetFontItalic()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_SetFontItalic
    path: API/Runnable.Text.cs
    startLine: 36
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает стиль текста: курсив\n"
  example: []
  syntax:
    content: protected void Text_SetFontItalic()
    content.vb: Protected Sub Text_SetFontItalic
  overload: BMVE.Core.Runnable.Text_SetFontItalic*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_SetFontBoldItalic
  commentId: M:BMVE.Core.Runnable.Text_SetFontBoldItalic
  id: Text_SetFontBoldItalic
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_SetFontBoldItalic()
  nameWithType: Runnable.Text_SetFontBoldItalic()
  fullName: BMVE.Core.Runnable.Text_SetFontBoldItalic()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_SetFontBoldItalic
    path: API/Runnable.Text.cs
    startLine: 41
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗадает стиль текста: жирый курсив\n"
  example: []
  syntax:
    content: protected void Text_SetFontBoldItalic()
    content.vb: Protected Sub Text_SetFontBoldItalic
  overload: BMVE.Core.Runnable.Text_SetFontBoldItalic*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_GetFont
  commentId: M:BMVE.Core.Runnable.Text_GetFont
  id: Text_GetFont
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_GetFont()
  nameWithType: Runnable.Text_GetFont()
  fullName: BMVE.Core.Runnable.Text_GetFont()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_GetFont
    path: API/Runnable.Text.cs
    startLine: 47
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает название используемого шрифта\n"
  example: []
  syntax:
    content: protected string Text_GetFont()
    return:
      type: System.String
      description: Название используемого шрифта
    content.vb: Protected Function Text_GetFont As String
  overload: BMVE.Core.Runnable.Text_GetFont*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Text_GetFontSize
  commentId: M:BMVE.Core.Runnable.Text_GetFontSize
  id: Text_GetFontSize
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Text_GetFontSize()
  nameWithType: Runnable.Text_GetFontSize()
  fullName: BMVE.Core.Runnable.Text_GetFontSize()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Text.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Text_GetFontSize
    path: API/Runnable.Text.cs
    startLine: 53
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВозвращает размер используемого шрифта\n"
  example: []
  syntax:
    content: protected double Text_GetFontSize()
    return:
      type: System.Double
      description: Размер используемого шрифта
    content.vb: Protected Function Text_GetFontSize As Double
  overload: BMVE.Core.Runnable.Text_GetFontSize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Thread_Create(System.Int32,System.Action)
  commentId: M:BMVE.Core.Runnable.Thread_Create(System.Int32,System.Action)
  id: Thread_Create(System.Int32,System.Action)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Create(Int32, Action)
  nameWithType: Runnable.Thread_Create(Int32, Action)
  fullName: BMVE.Core.Runnable.Thread_Create(System.Int32, System.Action)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Create
    path: API/Runnable.Thread.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает и запускает новый поток, выполняющий указанную функцию\n"
  example: []
  syntax:
    content: protected void Thread_Create(int number, Action function)
    parameters:
    - id: number
      type: System.Int32
      description: Номер потока
    - id: function
      type: System.Action
      description: Функция без параметров и возвращаемого значения, которая будет выполняться потоком
    content.vb: Protected Sub Thread_Create(number As Integer, function As Action)
  overload: BMVE.Core.Runnable.Thread_Create*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Thread_Create(System.Int32,System.Action{System.String},System.String)
  commentId: M:BMVE.Core.Runnable.Thread_Create(System.Int32,System.Action{System.String},System.String)
  id: Thread_Create(System.Int32,System.Action{System.String},System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Create(Int32, Action<String>, String)
  nameWithType: Runnable.Thread_Create(Int32, Action<String>, String)
  fullName: BMVE.Core.Runnable.Thread_Create(System.Int32, System.Action<System.String>, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Create
    path: API/Runnable.Thread.cs
    startLine: 24
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nСоздает и запускает новый поток, выполняющий указанную функцию с указанным параметром типа <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected void Thread_Create(int number, Action<string> function, string parameter)
    parameters:
    - id: number
      type: System.Int32
      description: Номер потока
    - id: function
      type: System.Action{System.String}
      description: Функция с единственным параметром типа <xref href="System.String" data-throw-if-not-resolved="false"></xref> и без возвращаемого значения, которая будет выполняться потоком
    - id: parameter
      type: System.String
      description: Параметр функции, которая будет выполняться
    content.vb: Protected Sub Thread_Create(number As Integer, function As Action(Of String), parameter As String)
  overload: BMVE.Core.Runnable.Thread_Create*
  nameWithType.vb: Runnable.Thread_Create(Int32, Action(Of String), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Thread_Create(System.Int32, System.Action(Of System.String), System.String)
  name.vb: Thread_Create(Int32, Action(Of String), String)
- uid: BMVE.Core.Runnable.Thread_Pause(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Pause(System.Int32)
  id: Thread_Pause(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Pause(Int32)
  nameWithType: Runnable.Thread_Pause(Int32)
  fullName: BMVE.Core.Runnable.Thread_Pause(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Pause
    path: API/Runnable.Thread.cs
    startLine: 30
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПриостанавливает указанный поток\n"
  example: []
  syntax:
    content: protected void Thread_Pause(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер потока
    content.vb: Protected Sub Thread_Pause(number As Integer)
  overload: BMVE.Core.Runnable.Thread_Pause*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Thread_Continue(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Continue(System.Int32)
  id: Thread_Continue(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Continue(Int32)
  nameWithType: Runnable.Thread_Continue(Int32)
  fullName: BMVE.Core.Runnable.Thread_Continue(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Continue
    path: API/Runnable.Thread.cs
    startLine: 36
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПродолжает выполнение указанного потока, если он приостановлен\n"
  example: []
  syntax:
    content: protected void Thread_Continue(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер потока
    content.vb: Protected Sub Thread_Continue(number As Integer)
  overload: BMVE.Core.Runnable.Thread_Continue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Thread_Lock(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Lock(System.Int32)
  id: Thread_Lock(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Lock(Int32)
  nameWithType: Runnable.Thread_Lock(Int32)
  fullName: BMVE.Core.Runnable.Thread_Lock(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Lock
    path: API/Runnable.Thread.cs
    startLine: 43
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУстанавливает блокировку для всех потоков, выполняющих текущую функцию\n<p>Только один поток единовременно может выполнять код, начинающийся с этой команды и до выполнения команды освобождения блокировки <xref href=\"BMVE.Core.Runnable.Thread_Unlock(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
  example: []
  syntax:
    content: protected void Thread_Lock(int lockNumber)
    parameters:
    - id: lockNumber
      type: System.Int32
      description: Номер блокировки
    content.vb: Protected Sub Thread_Lock(lockNumber As Integer)
  overload: BMVE.Core.Runnable.Thread_Lock*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Thread_Unlock(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Unlock(System.Int32)
  id: Thread_Unlock(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Unlock(Int32)
  nameWithType: Runnable.Thread_Unlock(Int32)
  fullName: BMVE.Core.Runnable.Thread_Unlock(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Unlock
    path: API/Runnable.Thread.cs
    startLine: 49
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОсвобождает блокировку, позволяя другому потоку войти в секцию <xref href=\"BMVE.Core.Runnable.Thread_Lock(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected void Thread_Unlock(int lockNumber)
    parameters:
    - id: lockNumber
      type: System.Int32
      description: Номер блокировки
    content.vb: Protected Sub Thread_Unlock(lockNumber As Integer)
  overload: BMVE.Core.Runnable.Thread_Unlock*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Thread_Stop(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Stop(System.Int32)
  id: Thread_Stop(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Thread_Stop(Int32)
  nameWithType: Runnable.Thread_Stop(Int32)
  fullName: BMVE.Core.Runnable.Thread_Stop(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Thread.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Thread_Stop
    path: API/Runnable.Thread.cs
    startLine: 55
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОстанавливает указанный поток\n"
  example: []
  syntax:
    content: protected void Thread_Stop(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер потока
    content.vb: Protected Sub Thread_Stop(number As Integer)
  overload: BMVE.Core.Runnable.Thread_Stop*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_Start(System.String,System.UInt16)
  commentId: M:BMVE.Core.Runnable.WebServer_Start(System.String,System.UInt16)
  id: WebServer_Start(System.String,System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_Start(String, UInt16)
  nameWithType: Runnable.WebServer_Start(String, UInt16)
  fullName: BMVE.Core.Runnable.WebServer_Start(System.String, System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_Start
    path: API/Runnable.WebServer.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапуск слушающего веб-сервера\n"
  example: []
  syntax:
    content: protected void WebServer_Start(string domain, ushort port)
    parameters:
    - id: domain
      type: System.String
      description: Доменный адрес сервера
    - id: port
      type: System.UInt16
      description: Порт, который будет прослушиваться
    content.vb: Protected Sub WebServer_Start(domain As String, port As UShort)
  overload: BMVE.Core.Runnable.WebServer_Start*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_NextRequest
  commentId: M:BMVE.Core.Runnable.WebServer_NextRequest
  id: WebServer_NextRequest
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_NextRequest()
  nameWithType: Runnable.WebServer_NextRequest()
  fullName: BMVE.Core.Runnable.WebServer_NextRequest()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_NextRequest
    path: API/Runnable.WebServer.cs
    startLine: 21
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОжидание следующего запроса и установка контекстов запроса и ответа\n"
  example: []
  syntax:
    content: protected void WebServer_NextRequest()
    content.vb: Protected Sub WebServer_NextRequest
  overload: BMVE.Core.Runnable.WebServer_NextRequest*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestUrl
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestUrl
  id: WebServer_GetRequestUrl
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestUrl()
  nameWithType: Runnable.WebServer_GetRequestUrl()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestUrl()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestUrl
    path: API/Runnable.WebServer.cs
    startLine: 27
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение адреса запроса относительно веб-сервера\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestUrl()
    return:
      type: System.String
      description: Относительный адрес запроса
    content.vb: Protected Function WebServer_GetRequestUrl As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestUrl*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestFullUrl
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestFullUrl
  id: WebServer_GetRequestFullUrl
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestFullUrl()
  nameWithType: Runnable.WebServer_GetRequestFullUrl()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestFullUrl()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestFullUrl
    path: API/Runnable.WebServer.cs
    startLine: 33
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение полного адреса запроса\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestFullUrl()
    return:
      type: System.String
      description: Полный адрес запроса
    content.vb: Protected Function WebServer_GetRequestFullUrl As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestFullUrl*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestMethod
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestMethod
  id: WebServer_GetRequestMethod
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestMethod()
  nameWithType: Runnable.WebServer_GetRequestMethod()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestMethod()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestMethod
    path: API/Runnable.WebServer.cs
    startLine: 39
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение метода запроса\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestMethod()
    return:
      type: System.String
      description: GET/POST/PATCH и т.п.
    content.vb: Protected Function WebServer_GetRequestMethod As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestMethod*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestUserAgent
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestUserAgent
  id: WebServer_GetRequestUserAgent
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestUserAgent()
  nameWithType: Runnable.WebServer_GetRequestUserAgent()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestUserAgent()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestUserAgent
    path: API/Runnable.WebServer.cs
    startLine: 45
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение обозначения устройства запроса\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestUserAgent()
    return:
      type: System.String
      description: Обозначение устройства (заголовок UserAgent)
    content.vb: Protected Function WebServer_GetRequestUserAgent As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestUserAgent*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestContentType
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestContentType
  id: WebServer_GetRequestContentType
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestContentType()
  nameWithType: Runnable.WebServer_GetRequestContentType()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestContentType()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestContentType
    path: API/Runnable.WebServer.cs
    startLine: 51
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение типа контента запроса\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestContentType()
    return:
      type: System.String
      description: Тип контента (заголовок ContentType)
    content.vb: Protected Function WebServer_GetRequestContentType As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestContentType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys
  id: WebServer_GetRequestQueryStringKeys
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestQueryStringKeys()
  nameWithType: Runnable.WebServer_GetRequestQueryStringKeys()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestQueryStringKeys
    path: API/Runnable.WebServer.cs
    startLine: 57
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение ключей параметров строки запроса\n"
  example: []
  syntax:
    content: protected string[] WebServer_GetRequestQueryStringKeys()
    return:
      type: System.String[]
      description: Ключи параметров строки запроса
    content.vb: Protected Function WebServer_GetRequestQueryStringKeys As String()
  overload: BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue(System.String)
  id: WebServer_GetRequestQueryStringValue(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestQueryStringValue(String)
  nameWithType: Runnable.WebServer_GetRequestQueryStringValue(String)
  fullName: BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestQueryStringValue
    path: API/Runnable.WebServer.cs
    startLine: 64
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение значения из строки запроса по ключу\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestQueryStringValue(string key)
    parameters:
    - id: key
      type: System.String
      description: Ключ параметра строки запроса
    return:
      type: System.String
      description: Значение параметра строки запроса
    content.vb: Protected Function WebServer_GetRequestQueryStringValue(key As String) As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys
  id: WebServer_GetRequestFormDataKeys
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestFormDataKeys()
  nameWithType: Runnable.WebServer_GetRequestFormDataKeys()
  fullName: BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestFormDataKeys
    path: API/Runnable.WebServer.cs
    startLine: 70
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение ключей параметров в формате FormData\n"
  example: []
  syntax:
    content: protected string[] WebServer_GetRequestFormDataKeys()
    return:
      type: System.String[]
      description: Ключи параметров FormData
    content.vb: Protected Function WebServer_GetRequestFormDataKeys As String()
  overload: BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetRequestFormDataValue(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_GetRequestFormDataValue(System.String)
  id: WebServer_GetRequestFormDataValue(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetRequestFormDataValue(String)
  nameWithType: Runnable.WebServer_GetRequestFormDataValue(String)
  fullName: BMVE.Core.Runnable.WebServer_GetRequestFormDataValue(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetRequestFormDataValue
    path: API/Runnable.WebServer.cs
    startLine: 77
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение значения из параметров в формате FormData по ключу\n"
  example: []
  syntax:
    content: protected string WebServer_GetRequestFormDataValue(string key)
    parameters:
    - id: key
      type: System.String
      description: Ключ параметра FormData
    return:
      type: System.String
      description: Значение параметра FormData
    content.vb: Protected Function WebServer_GetRequestFormDataValue(key As String) As String
  overload: BMVE.Core.Runnable.WebServer_GetRequestFormDataValue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_ReadRequestBody
  commentId: M:BMVE.Core.Runnable.WebServer_ReadRequestBody
  id: WebServer_ReadRequestBody
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_ReadRequestBody()
  nameWithType: Runnable.WebServer_ReadRequestBody()
  fullName: BMVE.Core.Runnable.WebServer_ReadRequestBody()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_ReadRequestBody
    path: API/Runnable.WebServer.cs
    startLine: 83
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧтение тела запроса\n"
  example: []
  syntax:
    content: protected byte[] WebServer_ReadRequestBody()
    return:
      type: System.Byte[]
      description: Тело запроса в виде массива байт
    content.vb: Protected Function WebServer_ReadRequestBody As Byte()
  overload: BMVE.Core.Runnable.WebServer_ReadRequestBody*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_ReadRequestBodyString
  commentId: M:BMVE.Core.Runnable.WebServer_ReadRequestBodyString
  id: WebServer_ReadRequestBodyString
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_ReadRequestBodyString()
  nameWithType: Runnable.WebServer_ReadRequestBodyString()
  fullName: BMVE.Core.Runnable.WebServer_ReadRequestBodyString()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_ReadRequestBodyString
    path: API/Runnable.WebServer.cs
    startLine: 89
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧтение тела запроса (результат в виде строки unicode)\n"
  example: []
  syntax:
    content: protected string WebServer_ReadRequestBodyString()
    return:
      type: System.String
      description: Тело запроса в виде строки
    content.vb: Protected Function WebServer_ReadRequestBodyString As String
  overload: BMVE.Core.Runnable.WebServer_ReadRequestBodyString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_Write(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_Write(System.String)
  id: WebServer_Write(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_Write(String)
  nameWithType: Runnable.WebServer_Write(String)
  fullName: BMVE.Core.Runnable.WebServer_Write(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_Write
    path: API/Runnable.WebServer.cs
    startLine: 95
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапись текста в ответ запроса\n"
  example: []
  syntax:
    content: protected void WebServer_Write(string text)
    parameters:
    - id: text
      type: System.String
      description: Текст
    content.vb: Protected Sub WebServer_Write(text As String)
  overload: BMVE.Core.Runnable.WebServer_Write*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_WriteLine(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_WriteLine(System.String)
  id: WebServer_WriteLine(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_WriteLine(String)
  nameWithType: Runnable.WebServer_WriteLine(String)
  fullName: BMVE.Core.Runnable.WebServer_WriteLine(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_WriteLine
    path: API/Runnable.WebServer.cs
    startLine: 101
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗапись текста в ответ запроса с переводом на новую строку\n"
  example: []
  syntax:
    content: protected void WebServer_WriteLine(string text)
    parameters:
    - id: text
      type: System.String
      description: Текст
    content.vb: Protected Sub WebServer_WriteLine(text As String)
  overload: BMVE.Core.Runnable.WebServer_WriteLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_SendResponse
  commentId: M:BMVE.Core.Runnable.WebServer_SendResponse
  id: WebServer_SendResponse
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_SendResponse()
  nameWithType: Runnable.WebServer_SendResponse()
  fullName: BMVE.Core.Runnable.WebServer_SendResponse()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_SendResponse
    path: API/Runnable.WebServer.cs
    startLine: 106
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОтправка ответа\n"
  example: []
  syntax:
    content: protected void WebServer_SendResponse()
    content.vb: Protected Sub WebServer_SendResponse
  overload: BMVE.Core.Runnable.WebServer_SendResponse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_SendResponse(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_SendResponse(System.String)
  id: WebServer_SendResponse(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_SendResponse(String)
  nameWithType: Runnable.WebServer_SendResponse(String)
  fullName: BMVE.Core.Runnable.WebServer_SendResponse(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_SendResponse
    path: API/Runnable.WebServer.cs
    startLine: 112
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОтправка ответа с записью текста\n"
  example: []
  syntax:
    content: protected void WebServer_SendResponse(string text)
    parameters:
    - id: text
      type: System.String
      description: Текст ответа
    content.vb: Protected Sub WebServer_SendResponse(text As String)
  overload: BMVE.Core.Runnable.WebServer_SendResponse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_SendResponse(System.Byte[])
  commentId: M:BMVE.Core.Runnable.WebServer_SendResponse(System.Byte[])
  id: WebServer_SendResponse(System.Byte[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_SendResponse(Byte[])
  nameWithType: Runnable.WebServer_SendResponse(Byte[])
  fullName: BMVE.Core.Runnable.WebServer_SendResponse(System.Byte[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_SendResponse
    path: API/Runnable.WebServer.cs
    startLine: 118
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОтправка ответа с записью массива байт в ответ\n"
  example: []
  syntax:
    content: protected void WebServer_SendResponse(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: Массив байт
    content.vb: Protected Sub WebServer_SendResponse(bytes As Byte())
  overload: BMVE.Core.Runnable.WebServer_SendResponse*
  nameWithType.vb: Runnable.WebServer_SendResponse(Byte())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.WebServer_SendResponse(System.Byte())
  name.vb: WebServer_SendResponse(Byte())
- uid: BMVE.Core.Runnable.WebServer_SetResponseContentType(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_SetResponseContentType(System.String)
  id: WebServer_SetResponseContentType(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_SetResponseContentType(String)
  nameWithType: Runnable.WebServer_SetResponseContentType(String)
  fullName: BMVE.Core.Runnable.WebServer_SetResponseContentType(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_SetResponseContentType
    path: API/Runnable.WebServer.cs
    startLine: 124
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУстановка типа контента ответа (заголовок ContentType)\n"
  example: []
  syntax:
    content: protected void WebServer_SetResponseContentType(string contentType)
    parameters:
    - id: contentType
      type: System.String
      description: Тип контента
    content.vb: Protected Sub WebServer_SetResponseContentType(contentType As String)
  overload: BMVE.Core.Runnable.WebServer_SetResponseContentType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetResponseContentType
  commentId: M:BMVE.Core.Runnable.WebServer_GetResponseContentType
  id: WebServer_GetResponseContentType
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetResponseContentType()
  nameWithType: Runnable.WebServer_GetResponseContentType()
  fullName: BMVE.Core.Runnable.WebServer_GetResponseContentType()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetResponseContentType
    path: API/Runnable.WebServer.cs
    startLine: 130
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение типа контента ответа (заголовок ContentType)\n"
  example: []
  syntax:
    content: protected string WebServer_GetResponseContentType()
    return:
      type: System.String
      description: Тип контента
    content.vb: Protected Function WebServer_GetResponseContentType As String
  overload: BMVE.Core.Runnable.WebServer_GetResponseContentType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_SetResponseStatusCode(System.UInt16)
  commentId: M:BMVE.Core.Runnable.WebServer_SetResponseStatusCode(System.UInt16)
  id: WebServer_SetResponseStatusCode(System.UInt16)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_SetResponseStatusCode(UInt16)
  nameWithType: Runnable.WebServer_SetResponseStatusCode(UInt16)
  fullName: BMVE.Core.Runnable.WebServer_SetResponseStatusCode(System.UInt16)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_SetResponseStatusCode
    path: API/Runnable.WebServer.cs
    startLine: 136
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nУстановка кода ответа\n"
  example: []
  syntax:
    content: protected void WebServer_SetResponseStatusCode(ushort statusCode)
    parameters:
    - id: statusCode
      type: System.UInt16
      description: Код ответа
    content.vb: Protected Sub WebServer_SetResponseStatusCode(statusCode As UShort)
  overload: BMVE.Core.Runnable.WebServer_SetResponseStatusCode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_GetResponseStatusCode
  commentId: M:BMVE.Core.Runnable.WebServer_GetResponseStatusCode
  id: WebServer_GetResponseStatusCode
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_GetResponseStatusCode()
  nameWithType: Runnable.WebServer_GetResponseStatusCode()
  fullName: BMVE.Core.Runnable.WebServer_GetResponseStatusCode()
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_GetResponseStatusCode
    path: API/Runnable.WebServer.cs
    startLine: 142
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПолучение кода ответа\n"
  example: []
  syntax:
    content: protected ushort WebServer_GetResponseStatusCode()
    return:
      type: System.UInt16
      description: Код ответа
    content.vb: Protected Function WebServer_GetResponseStatusCode As UShort
  overload: BMVE.Core.Runnable.WebServer_GetResponseStatusCode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_UrlEncode(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_UrlEncode(System.String)
  id: WebServer_UrlEncode(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_UrlEncode(String)
  nameWithType: Runnable.WebServer_UrlEncode(String)
  fullName: BMVE.Core.Runnable.WebServer_UrlEncode(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_UrlEncode
    path: API/Runnable.WebServer.cs
    startLine: 149
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nКодирование строки для url-запросов\n"
  example: []
  syntax:
    content: protected string WebServer_UrlEncode(string value)
    parameters:
    - id: value
      type: System.String
      description: Строка
    return:
      type: System.String
      description: Закодированная строка
    content.vb: Protected Function WebServer_UrlEncode(value As String) As String
  overload: BMVE.Core.Runnable.WebServer_UrlEncode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.WebServer_UrlDecode(System.String)
  commentId: M:BMVE.Core.Runnable.WebServer_UrlDecode(System.String)
  id: WebServer_UrlDecode(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: WebServer_UrlDecode(String)
  nameWithType: Runnable.WebServer_UrlDecode(String)
  fullName: BMVE.Core.Runnable.WebServer_UrlDecode(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.WebServer.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: WebServer_UrlDecode
    path: API/Runnable.WebServer.cs
    startLine: 156
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nДекодирование закодированной для url-запросов строки\n"
  example: []
  syntax:
    content: protected string WebServer_UrlDecode(string rawString)
    parameters:
    - id: rawString
      type: System.String
      description: Закодированная строка
    return:
      type: System.String
      description: Декодированная строка
    content.vb: Protected Function WebServer_UrlDecode(rawString As String) As String
  overload: BMVE.Core.Runnable.WebServer_UrlDecode*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Main
  commentId: M:BMVE.Core.Runnable.Main
  id: Main
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Main()
  nameWithType: Runnable.Main()
  fullName: BMVE.Core.Runnable.Main()
  type: Method
  source:
    remote:
      path: BMVE.Core/Runnable.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Main
    path: Runnable.cs
    startLine: 10
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  syntax:
    content: public virtual void Main()
    content.vb: Public Overridable Sub Main
  overload: BMVE.Core.Runnable.Main*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BMVE.Core.Runnable.Console_WriteLine(System.String)
  commentId: M:BMVE.Core.Runnable.Console_WriteLine(System.String)
  id: Console_WriteLine(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Console_WriteLine(String)
  nameWithType: Runnable.Console_WriteLine(String)
  fullName: BMVE.Core.Runnable.Console_WriteLine(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Console.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Console_WriteLine
    path: API/Runnable.Console.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nПечатает текст в консоль с новой строки\n<p>При печати текста используются настройки шрифта и цвет вывода текста</p>\n"
  example: []
  syntax:
    content: protected void Console_WriteLine(string text)
    parameters:
    - id: text
      type: System.String
      description: Текст, который должен быть выведен в консоль
    content.vb: Protected Sub Console_WriteLine(text As String)
  overload: BMVE.Core.Runnable.Console_WriteLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Console_ReadLine(System.String)
  commentId: M:BMVE.Core.Runnable.Console_ReadLine(System.String)
  id: Console_ReadLine(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Console_ReadLine(String)
  nameWithType: Runnable.Console_ReadLine(String)
  fullName: BMVE.Core.Runnable.Console_ReadLine(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Console.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Console_ReadLine
    path: API/Runnable.Console.cs
    startLine: 23
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧитает строку, которую пользователь вводит с клавиатуры\n"
  example: []
  syntax:
    content: protected string Console_ReadLine(string prompt = "")
    parameters:
    - id: prompt
      type: System.String
      description: Строка-приглашение к вводу
    return:
      type: System.String
      description: Строка, введенная с клавиатуры
    content.vb: Protected Function Console_ReadLine(prompt As String = "") As String
  overload: BMVE.Core.Runnable.Console_ReadLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Console_ReadInt(System.String)
  commentId: M:BMVE.Core.Runnable.Console_ReadInt(System.String)
  id: Console_ReadInt(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Console_ReadInt(String)
  nameWithType: Runnable.Console_ReadInt(String)
  fullName: BMVE.Core.Runnable.Console_ReadInt(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Console.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Console_ReadInt
    path: API/Runnable.Console.cs
    startLine: 30
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧитает целое число, которое пользователь вводит с клавиатуры\n"
  example: []
  syntax:
    content: protected int Console_ReadInt(string prompt = "")
    parameters:
    - id: prompt
      type: System.String
      description: Строка-приглашение к вводу
    return:
      type: System.Int32
      description: Число, введенная с клавиатуры
    content.vb: Protected Function Console_ReadInt(prompt As String = "") As Integer
  overload: BMVE.Core.Runnable.Console_ReadInt*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Console_ReadDouble(System.String)
  commentId: M:BMVE.Core.Runnable.Console_ReadDouble(System.String)
  id: Console_ReadDouble(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Console_ReadDouble(String)
  nameWithType: Runnable.Console_ReadDouble(String)
  fullName: BMVE.Core.Runnable.Console_ReadDouble(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Console.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Console_ReadDouble
    path: API/Runnable.Console.cs
    startLine: 37
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧитает дробное число, которое пользователь вводит с клавиатуры\n"
  example: []
  syntax:
    content: protected double Console_ReadDouble(string prompt = "")
    parameters:
    - id: prompt
      type: System.String
      description: Строка-приглашение к вводу
    return:
      type: System.Double
      description: Число, введенная с клавиатуры
    content.vb: Protected Function Console_ReadDouble(prompt As String = "") As Double
  overload: BMVE.Core.Runnable.Console_ReadDouble*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Console_ReadBool(System.String)
  commentId: M:BMVE.Core.Runnable.Console_ReadBool(System.String)
  id: Console_ReadBool(System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Console_ReadBool(String)
  nameWithType: Runnable.Console_ReadBool(String)
  fullName: BMVE.Core.Runnable.Console_ReadBool(System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Console.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Console_ReadBool
    path: API/Runnable.Console.cs
    startLine: 47
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЧитает двоичный флаг, который пользователь вводит с клавиатуры\n<p>Поддерживаются символы:</p>\n<p>true = <code>1</code>, <code>T</code>, <code>Y</code>, <code>Д</code></p>\n<p>false = <code>0</code>, <code>F</code>, <code>N</code>, <code>Н</code></p>\n"
  example: []
  syntax:
    content: protected bool Console_ReadBool(string prompt = "")
    parameters:
    - id: prompt
      type: System.String
      description: Строка-приглашение к вводу
    return:
      type: System.Boolean
      description: Флаг, введенный с клавиатуры
    content.vb: Protected Function Console_ReadBool(prompt As String = "") As Boolean
  overload: BMVE.Core.Runnable.Console_ReadBool*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_OpenSqlServerConnection(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Database_OpenSqlServerConnection(System.Int32,System.String)
  id: Database_OpenSqlServerConnection(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_OpenSqlServerConnection(Int32, String)
  nameWithType: Runnable.Database_OpenSqlServerConnection(Int32, String)
  fullName: BMVE.Core.Runnable.Database_OpenSqlServerConnection(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_OpenSqlServerConnection
    path: API/Runnable.Database.cs
    startLine: 16
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрыть подключение к БД Microsoft SQL Server\n"
  example: []
  syntax:
    content: protected void Database_OpenSqlServerConnection(int number, string connectionString)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: connectionString
      type: System.String
      description: Строка подключения
    content.vb: Protected Sub Database_OpenSqlServerConnection(number As Integer, connectionString As String)
  overload: BMVE.Core.Runnable.Database_OpenSqlServerConnection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_OpenMySqlConnection(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Database_OpenMySqlConnection(System.Int32,System.String)
  id: Database_OpenMySqlConnection(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_OpenMySqlConnection(Int32, String)
  nameWithType: Runnable.Database_OpenMySqlConnection(Int32, String)
  fullName: BMVE.Core.Runnable.Database_OpenMySqlConnection(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_OpenMySqlConnection
    path: API/Runnable.Database.cs
    startLine: 26
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрыть подключение к БД MySql\n"
  example: []
  syntax:
    content: protected void Database_OpenMySqlConnection(int number, string connectionString)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: connectionString
      type: System.String
      description: Строка подключения
    content.vb: Protected Sub Database_OpenMySqlConnection(number As Integer, connectionString As String)
  overload: BMVE.Core.Runnable.Database_OpenMySqlConnection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_OpenPostgreSqlConnection(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Database_OpenPostgreSqlConnection(System.Int32,System.String)
  id: Database_OpenPostgreSqlConnection(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_OpenPostgreSqlConnection(Int32, String)
  nameWithType: Runnable.Database_OpenPostgreSqlConnection(Int32, String)
  fullName: BMVE.Core.Runnable.Database_OpenPostgreSqlConnection(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_OpenPostgreSqlConnection
    path: API/Runnable.Database.cs
    startLine: 36
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрыть подключение к БД PostgreSql\n"
  example: []
  syntax:
    content: protected void Database_OpenPostgreSqlConnection(int number, string connectionString)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: connectionString
      type: System.String
      description: Строка подключения
    content.vb: Protected Sub Database_OpenPostgreSqlConnection(number As Integer, connectionString As String)
  overload: BMVE.Core.Runnable.Database_OpenPostgreSqlConnection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_OpenOracleDbConnection(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Database_OpenOracleDbConnection(System.Int32,System.String)
  id: Database_OpenOracleDbConnection(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_OpenOracleDbConnection(Int32, String)
  nameWithType: Runnable.Database_OpenOracleDbConnection(Int32, String)
  fullName: BMVE.Core.Runnable.Database_OpenOracleDbConnection(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_OpenOracleDbConnection
    path: API/Runnable.Database.cs
    startLine: 46
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрыть подключение к БД Oracle Db\n"
  example: []
  syntax:
    content: protected void Database_OpenOracleDbConnection(int number, string connectionString)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: connectionString
      type: System.String
      description: Строка подключения
    content.vb: Protected Sub Database_OpenOracleDbConnection(number As Integer, connectionString As String)
  overload: BMVE.Core.Runnable.Database_OpenOracleDbConnection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_OpenSqliteConnection(System.Int32,System.String)
  commentId: M:BMVE.Core.Runnable.Database_OpenSqliteConnection(System.Int32,System.String)
  id: Database_OpenSqliteConnection(System.Int32,System.String)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_OpenSqliteConnection(Int32, String)
  nameWithType: Runnable.Database_OpenSqliteConnection(Int32, String)
  fullName: BMVE.Core.Runnable.Database_OpenSqliteConnection(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_OpenSqliteConnection
    path: API/Runnable.Database.cs
    startLine: 56
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрыть подключение к БД Sqlite\n"
  example: []
  syntax:
    content: protected void Database_OpenSqliteConnection(int number, string connectionString)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: connectionString
      type: System.String
      description: Строка подключения
    content.vb: Protected Sub Database_OpenSqliteConnection(number As Integer, connectionString As String)
  overload: BMVE.Core.Runnable.Database_OpenSqliteConnection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_IsConnectionOpen(System.Int32)
  commentId: M:BMVE.Core.Runnable.Database_IsConnectionOpen(System.Int32)
  id: Database_IsConnectionOpen(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_IsConnectionOpen(Int32)
  nameWithType: Runnable.Database_IsConnectionOpen(Int32)
  fullName: BMVE.Core.Runnable.Database_IsConnectionOpen(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_IsConnectionOpen
    path: API/Runnable.Database.cs
    startLine: 66
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткрыто ли подключение к БД под указанным номером\n"
  example: []
  syntax:
    content: protected bool Database_IsConnectionOpen(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    return:
      type: System.Boolean
      description: Открыто ли подключение
    content.vb: Protected Function Database_IsConnectionOpen(number As Integer) As Boolean
  overload: BMVE.Core.Runnable.Database_IsConnectionOpen*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_ExecuteNonQuery(System.Int32,System.String,System.String[])
  commentId: M:BMVE.Core.Runnable.Database_ExecuteNonQuery(System.Int32,System.String,System.String[])
  id: Database_ExecuteNonQuery(System.Int32,System.String,System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_ExecuteNonQuery(Int32, String, String[])
  nameWithType: Runnable.Database_ExecuteNonQuery(Int32, String, String[])
  fullName: BMVE.Core.Runnable.Database_ExecuteNonQuery(System.Int32, System.String, System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_ExecuteNonQuery
    path: API/Runnable.Database.cs
    startLine: 78
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВыполнить запрос, не требующий возврата значения\n"
  example: []
  syntax:
    content: protected int Database_ExecuteNonQuery(int number, string sqlString, params string[] parameters)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: sqlString
      type: System.String
      description: Строка запроса. Подставляемые параметры должны начинаться с двоеточия и состоять только из букв и цифр (:param)
    - id: parameters
      type: System.String[]
      description: Значения параметров. Подставляются в порядке, в котором указаны при вызове функции
    return:
      type: System.Int32
      description: Количество затронутых строк
    content.vb: Protected Function Database_ExecuteNonQuery(number As Integer, sqlString As String, ParamArray parameters As String()) As Integer
  overload: BMVE.Core.Runnable.Database_ExecuteNonQuery*
  nameWithType.vb: Runnable.Database_ExecuteNonQuery(Int32, String, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Database_ExecuteNonQuery(System.Int32, System.String, System.String())
  name.vb: Database_ExecuteNonQuery(Int32, String, String())
- uid: BMVE.Core.Runnable.Database_ExecuteScalar(System.Int32,System.String,System.String[])
  commentId: M:BMVE.Core.Runnable.Database_ExecuteScalar(System.Int32,System.String,System.String[])
  id: Database_ExecuteScalar(System.Int32,System.String,System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_ExecuteScalar(Int32, String, String[])
  nameWithType: Runnable.Database_ExecuteScalar(Int32, String, String[])
  fullName: BMVE.Core.Runnable.Database_ExecuteScalar(System.Int32, System.String, System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_ExecuteScalar
    path: API/Runnable.Database.cs
    startLine: 90
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВыполнить запрос, возвращающий одиночное значение\n"
  example: []
  syntax:
    content: protected string Database_ExecuteScalar(int number, string sqlString, params string[] parameters)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: sqlString
      type: System.String
      description: Строка запроса. Подставляемые параметры должны начинаться с двоеточия и состоять только из букв и цифр (:param)
    - id: parameters
      type: System.String[]
      description: Значения параметров. Подставляются в порядке, в котором указаны при вызове функции
    return:
      type: System.String
      description: Возвращенное значение
    content.vb: Protected Function Database_ExecuteScalar(number As Integer, sqlString As String, ParamArray parameters As String()) As String
  overload: BMVE.Core.Runnable.Database_ExecuteScalar*
  nameWithType.vb: Runnable.Database_ExecuteScalar(Int32, String, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Database_ExecuteScalar(System.Int32, System.String, System.String())
  name.vb: Database_ExecuteScalar(Int32, String, String())
- uid: BMVE.Core.Runnable.Database_ExecuteReader(System.Int32,System.String,System.String[])
  commentId: M:BMVE.Core.Runnable.Database_ExecuteReader(System.Int32,System.String,System.String[])
  id: Database_ExecuteReader(System.Int32,System.String,System.String[])
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_ExecuteReader(Int32, String, String[])
  nameWithType: Runnable.Database_ExecuteReader(Int32, String, String[])
  fullName: BMVE.Core.Runnable.Database_ExecuteReader(System.Int32, System.String, System.String[])
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_ExecuteReader
    path: API/Runnable.Database.cs
    startLine: 102
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nВыполнить запрос, возвращающий таблицу\n"
  example: []
  syntax:
    content: protected string[, ] Database_ExecuteReader(int number, string sqlString, params string[] parameters)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    - id: sqlString
      type: System.String
      description: Строка запроса. Подставляемые параметры должны начинаться с двоеточия и состоять только из букв и цифр (:param)
    - id: parameters
      type: System.String[]
      description: Значения параметров. Подставляются в порядке, в котором указаны при вызове функции
    return:
      type: System.String[,]
      description: Таблица строк
    content.vb: Protected Function Database_ExecuteReader(number As Integer, sqlString As String, ParamArray parameters As String()) As String(,)
  overload: BMVE.Core.Runnable.Database_ExecuteReader*
  nameWithType.vb: Runnable.Database_ExecuteReader(Int32, String, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BMVE.Core.Runnable.Database_ExecuteReader(System.Int32, System.String, System.String())
  name.vb: Database_ExecuteReader(Int32, String, String())
- uid: BMVE.Core.Runnable.Database_BeginTransaction(System.Int32)
  commentId: M:BMVE.Core.Runnable.Database_BeginTransaction(System.Int32)
  id: Database_BeginTransaction(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_BeginTransaction(Int32)
  nameWithType: Runnable.Database_BeginTransaction(Int32)
  fullName: BMVE.Core.Runnable.Database_BeginTransaction(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_BeginTransaction
    path: API/Runnable.Database.cs
    startLine: 111
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nНачать транзакцию\n"
  example: []
  syntax:
    content: protected void Database_BeginTransaction(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    content.vb: Protected Sub Database_BeginTransaction(number As Integer)
  overload: BMVE.Core.Runnable.Database_BeginTransaction*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_CommitTransaction(System.Int32)
  commentId: M:BMVE.Core.Runnable.Database_CommitTransaction(System.Int32)
  id: Database_CommitTransaction(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_CommitTransaction(Int32)
  nameWithType: Runnable.Database_CommitTransaction(Int32)
  fullName: BMVE.Core.Runnable.Database_CommitTransaction(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_CommitTransaction
    path: API/Runnable.Database.cs
    startLine: 120
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗафиксировать транзакцию\n"
  example: []
  syntax:
    content: protected void Database_CommitTransaction(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    content.vb: Protected Sub Database_CommitTransaction(number As Integer)
  overload: BMVE.Core.Runnable.Database_CommitTransaction*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_RollbackTransaction(System.Int32)
  commentId: M:BMVE.Core.Runnable.Database_RollbackTransaction(System.Int32)
  id: Database_RollbackTransaction(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_RollbackTransaction(Int32)
  nameWithType: Runnable.Database_RollbackTransaction(Int32)
  fullName: BMVE.Core.Runnable.Database_RollbackTransaction(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_RollbackTransaction
    path: API/Runnable.Database.cs
    startLine: 129
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nОткатить транзакцию\n"
  example: []
  syntax:
    content: protected void Database_RollbackTransaction(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    content.vb: Protected Sub Database_RollbackTransaction(number As Integer)
  overload: BMVE.Core.Runnable.Database_RollbackTransaction*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BMVE.Core.Runnable.Database_CloseConnection(System.Int32)
  commentId: M:BMVE.Core.Runnable.Database_CloseConnection(System.Int32)
  id: Database_CloseConnection(System.Int32)
  parent: BMVE.Core.Runnable
  langs:
  - csharp
  - vb
  name: Database_CloseConnection(Int32)
  nameWithType: Runnable.Database_CloseConnection(Int32)
  fullName: BMVE.Core.Runnable.Database_CloseConnection(System.Int32)
  type: Method
  source:
    remote:
      path: BMVE.Core/API/Runnable.Database.cs
      branch: master
      repo: https://github.com/DevEvolution/BMVE.git
    id: Database_CloseConnection
    path: API/Runnable.Database.cs
    startLine: 138
  assemblies:
  - BMVE.Core
  namespace: BMVE.Core
  summary: "\nЗакрыть соединение с БД\n"
  example: []
  syntax:
    content: protected void Database_CloseConnection(int number)
    parameters:
    - id: number
      type: System.Int32
      description: Номер подключения к БД
    content.vb: Protected Sub Database_CloseConnection(number As Integer)
  overload: BMVE.Core.Runnable.Database_CloseConnection*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: BMVE.Core
  commentId: N:BMVE.Core
  name: BMVE.Core
  nameWithType: BMVE.Core
  fullName: BMVE.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: BMVE.Core.Runnable.Array_OfULong*
  commentId: Overload:BMVE.Core.Runnable.Array_OfULong
  name: Array_OfULong
  nameWithType: Runnable.Array_OfULong
  fullName: BMVE.Core.Runnable.Array_OfULong
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64[]
  isExternal: true
  name: UInt64[]
  nameWithType: UInt64[]
  fullName: System.UInt64[]
  nameWithType.vb: UInt64()
  fullName.vb: System.UInt64()
  name.vb: UInt64()
  spec.csharp:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt64[,]
  isExternal: true
  name: UInt64[,]
  nameWithType: UInt64[,]
  fullName: System.UInt64[,]
  nameWithType.vb: UInt64(,)
  fullName.vb: System.UInt64(,)
  name.vb: UInt64(,)
  spec.csharp:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.UInt64[,,]
  isExternal: true
  name: UInt64[,,]
  nameWithType: UInt64[,,]
  fullName: System.UInt64[,,]
  nameWithType.vb: UInt64(,,)
  fullName.vb: System.UInt64(,,)
  name.vb: UInt64(,,)
  spec.csharp:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: BMVE.Core.Runnable.Array_OfLong*
  commentId: Overload:BMVE.Core.Runnable.Array_OfLong
  name: Array_OfLong
  nameWithType: Runnable.Array_OfLong
  fullName: BMVE.Core.Runnable.Array_OfLong
- uid: System.Int64[]
  isExternal: true
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  nameWithType.vb: Int64()
  fullName.vb: System.Int64()
  name.vb: Int64()
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64[,]
  isExternal: true
  name: Int64[,]
  nameWithType: Int64[,]
  fullName: System.Int64[,]
  nameWithType.vb: Int64(,)
  fullName.vb: System.Int64(,)
  name.vb: Int64(,)
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Int64[,,]
  isExternal: true
  name: Int64[,,]
  nameWithType: Int64[,,]
  fullName: System.Int64[,,]
  nameWithType.vb: Int64(,,)
  fullName.vb: System.Int64(,,)
  name.vb: Int64(,,)
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: BMVE.Core.Runnable.Array_OfUInt*
  commentId: Overload:BMVE.Core.Runnable.Array_OfUInt
  name: Array_OfUInt
  nameWithType: Runnable.Array_OfUInt
  fullName: BMVE.Core.Runnable.Array_OfUInt
- uid: System.UInt32[]
  isExternal: true
  name: UInt32[]
  nameWithType: UInt32[]
  fullName: System.UInt32[]
  nameWithType.vb: UInt32()
  fullName.vb: System.UInt32()
  name.vb: UInt32()
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt32[,]
  isExternal: true
  name: UInt32[,]
  nameWithType: UInt32[,]
  fullName: System.UInt32[,]
  nameWithType.vb: UInt32(,)
  fullName.vb: System.UInt32(,)
  name.vb: UInt32(,)
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.UInt32[,,]
  isExternal: true
  name: UInt32[,,]
  nameWithType: UInt32[,,]
  fullName: System.UInt32[,,]
  nameWithType.vb: UInt32(,,)
  fullName.vb: System.UInt32(,,)
  name.vb: UInt32(,,)
  spec.csharp:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: BMVE.Core.Runnable.Array_OfInt*
  commentId: Overload:BMVE.Core.Runnable.Array_OfInt
  name: Array_OfInt
  nameWithType: Runnable.Array_OfInt
  fullName: BMVE.Core.Runnable.Array_OfInt
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[,]
  isExternal: true
  name: Int32[,]
  nameWithType: Int32[,]
  fullName: System.Int32[,]
  nameWithType.vb: Int32(,)
  fullName.vb: System.Int32(,)
  name.vb: Int32(,)
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Int32[,,]
  isExternal: true
  name: Int32[,,]
  nameWithType: Int32[,,]
  fullName: System.Int32[,,]
  nameWithType.vb: Int32(,,)
  fullName.vb: System.Int32(,,)
  name.vb: Int32(,,)
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: BMVE.Core.Runnable.Array_OfUShort*
  commentId: Overload:BMVE.Core.Runnable.Array_OfUShort
  name: Array_OfUShort
  nameWithType: Runnable.Array_OfUShort
  fullName: BMVE.Core.Runnable.Array_OfUShort
- uid: System.UInt16[]
  isExternal: true
  name: UInt16[]
  nameWithType: UInt16[]
  fullName: System.UInt16[]
  nameWithType.vb: UInt16()
  fullName.vb: System.UInt16()
  name.vb: UInt16()
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.UInt16[,]
  isExternal: true
  name: UInt16[,]
  nameWithType: UInt16[,]
  fullName: System.UInt16[,]
  nameWithType.vb: UInt16(,)
  fullName.vb: System.UInt16(,)
  name.vb: UInt16(,)
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.UInt16[,,]
  isExternal: true
  name: UInt16[,,]
  nameWithType: UInt16[,,]
  fullName: System.UInt16[,,]
  nameWithType.vb: UInt16(,,)
  fullName.vb: System.UInt16(,,)
  name.vb: UInt16(,,)
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: BMVE.Core.Runnable.Array_OfShort*
  commentId: Overload:BMVE.Core.Runnable.Array_OfShort
  name: Array_OfShort
  nameWithType: Runnable.Array_OfShort
  fullName: BMVE.Core.Runnable.Array_OfShort
- uid: System.Int16[]
  isExternal: true
  name: Int16[]
  nameWithType: Int16[]
  fullName: System.Int16[]
  nameWithType.vb: Int16()
  fullName.vb: System.Int16()
  name.vb: Int16()
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int16[,]
  isExternal: true
  name: Int16[,]
  nameWithType: Int16[,]
  fullName: System.Int16[,]
  nameWithType.vb: Int16(,)
  fullName.vb: System.Int16(,)
  name.vb: Int16(,)
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Int16[,,]
  isExternal: true
  name: Int16[,,]
  nameWithType: Int16[,,]
  fullName: System.Int16[,,]
  nameWithType.vb: Int16(,,)
  fullName.vb: System.Int16(,,)
  name.vb: Int16(,,)
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: BMVE.Core.Runnable.Array_OfByte*
  commentId: Overload:BMVE.Core.Runnable.Array_OfByte
  name: Array_OfByte
  nameWithType: Runnable.Array_OfByte
  fullName: BMVE.Core.Runnable.Array_OfByte
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte[,]
  isExternal: true
  name: Byte[,]
  nameWithType: Byte[,]
  fullName: System.Byte[,]
  nameWithType.vb: Byte(,)
  fullName.vb: System.Byte(,)
  name.vb: Byte(,)
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Byte[,,]
  isExternal: true
  name: Byte[,,]
  nameWithType: Byte[,,]
  fullName: System.Byte[,,]
  nameWithType.vb: Byte(,,)
  fullName.vb: System.Byte(,,)
  name.vb: Byte(,,)
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: BMVE.Core.Runnable.Array_OfSByte*
  commentId: Overload:BMVE.Core.Runnable.Array_OfSByte
  name: Array_OfSByte
  nameWithType: Runnable.Array_OfSByte
  fullName: BMVE.Core.Runnable.Array_OfSByte
- uid: System.SByte[]
  isExternal: true
  name: SByte[]
  nameWithType: SByte[]
  fullName: System.SByte[]
  nameWithType.vb: SByte()
  fullName.vb: System.SByte()
  name.vb: SByte()
  spec.csharp:
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.SByte[,]
  isExternal: true
  name: SByte[,]
  nameWithType: SByte[,]
  fullName: System.SByte[,]
  nameWithType.vb: SByte(,)
  fullName.vb: System.SByte(,)
  name.vb: SByte(,)
  spec.csharp:
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.SByte[,,]
  isExternal: true
  name: SByte[,,]
  nameWithType: SByte[,,]
  fullName: System.SByte[,,]
  nameWithType.vb: SByte(,,)
  fullName.vb: System.SByte(,,)
  name.vb: SByte(,,)
  spec.csharp:
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: BMVE.Core.Runnable.Array_OfDecimal*
  commentId: Overload:BMVE.Core.Runnable.Array_OfDecimal
  name: Array_OfDecimal
  nameWithType: Runnable.Array_OfDecimal
  fullName: BMVE.Core.Runnable.Array_OfDecimal
- uid: System.Decimal[]
  isExternal: true
  name: Decimal[]
  nameWithType: Decimal[]
  fullName: System.Decimal[]
  nameWithType.vb: Decimal()
  fullName.vb: System.Decimal()
  name.vb: Decimal()
  spec.csharp:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Decimal[,]
  isExternal: true
  name: Decimal[,]
  nameWithType: Decimal[,]
  fullName: System.Decimal[,]
  nameWithType.vb: Decimal(,)
  fullName.vb: System.Decimal(,)
  name.vb: Decimal(,)
  spec.csharp:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Decimal[,,]
  isExternal: true
  name: Decimal[,,]
  nameWithType: Decimal[,,]
  fullName: System.Decimal[,,]
  nameWithType.vb: Decimal(,,)
  fullName.vb: System.Decimal(,,)
  name.vb: Decimal(,,)
  spec.csharp:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: BMVE.Core.Runnable.Array_OfDouble*
  commentId: Overload:BMVE.Core.Runnable.Array_OfDouble
  name: Array_OfDouble
  nameWithType: Runnable.Array_OfDouble
  fullName: BMVE.Core.Runnable.Array_OfDouble
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Double[,]
  isExternal: true
  name: Double[,]
  nameWithType: Double[,]
  fullName: System.Double[,]
  nameWithType.vb: Double(,)
  fullName.vb: System.Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Double[,,]
  isExternal: true
  name: Double[,,]
  nameWithType: Double[,,]
  fullName: System.Double[,,]
  nameWithType.vb: Double(,,)
  fullName.vb: System.Double(,,)
  name.vb: Double(,,)
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: BMVE.Core.Runnable.Array_OfFloat*
  commentId: Overload:BMVE.Core.Runnable.Array_OfFloat
  name: Array_OfFloat
  nameWithType: Runnable.Array_OfFloat
  fullName: BMVE.Core.Runnable.Array_OfFloat
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[,]
  isExternal: true
  name: Single[,]
  nameWithType: Single[,]
  fullName: System.Single[,]
  nameWithType.vb: Single(,)
  fullName.vb: System.Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Single[,,]
  isExternal: true
  name: Single[,,]
  nameWithType: Single[,,]
  fullName: System.Single[,,]
  nameWithType.vb: Single(,,)
  fullName.vb: System.Single(,,)
  name.vb: Single(,,)
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BMVE.Core.Runnable.Array_OfBool*
  commentId: Overload:BMVE.Core.Runnable.Array_OfBool
  name: Array_OfBool
  nameWithType: Runnable.Array_OfBool
  fullName: BMVE.Core.Runnable.Array_OfBool
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean[,]
  isExternal: true
  name: Boolean[,]
  nameWithType: Boolean[,]
  fullName: System.Boolean[,]
  nameWithType.vb: Boolean(,)
  fullName.vb: System.Boolean(,)
  name.vb: Boolean(,)
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Boolean[,,]
  isExternal: true
  name: Boolean[,,]
  nameWithType: Boolean[,,]
  fullName: System.Boolean[,,]
  nameWithType.vb: Boolean(,,)
  fullName.vb: System.Boolean(,,)
  name.vb: Boolean(,,)
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: BMVE.Core.Runnable.Array_OfChar*
  commentId: Overload:BMVE.Core.Runnable.Array_OfChar
  name: Array_OfChar
  nameWithType: Runnable.Array_OfChar
  fullName: BMVE.Core.Runnable.Array_OfChar
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Char[,]
  isExternal: true
  name: Char[,]
  nameWithType: Char[,]
  fullName: System.Char[,]
  nameWithType.vb: Char(,)
  fullName.vb: System.Char(,)
  name.vb: Char(,)
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Char[,,]
  isExternal: true
  name: Char[,,]
  nameWithType: Char[,,]
  fullName: System.Char[,,]
  nameWithType.vb: Char(,,)
  fullName.vb: System.Char(,,)
  name.vb: Char(,,)
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BMVE.Core.Runnable.Array_OfString*
  commentId: Overload:BMVE.Core.Runnable.Array_OfString
  name: Array_OfString
  nameWithType: Runnable.Array_OfString
  fullName: BMVE.Core.Runnable.Array_OfString
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[,]
  isExternal: true
  name: String[,]
  nameWithType: String[,]
  fullName: System.String[,]
  nameWithType.vb: String(,)
  fullName.vb: System.String(,)
  name.vb: String(,)
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.String[,,]
  isExternal: true
  name: String[,,]
  nameWithType: String[,,]
  fullName: System.String[,,]
  nameWithType.vb: String(,,)
  fullName.vb: System.String(,,)
  name.vb: String(,,)
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: BMVE.Core.Runnable.Array_OfDateTime*
  commentId: Overload:BMVE.Core.Runnable.Array_OfDateTime
  name: Array_OfDateTime
  nameWithType: Runnable.Array_OfDateTime
  fullName: BMVE.Core.Runnable.Array_OfDateTime
- uid: System.DateTime[]
  isExternal: true
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: DateTime()
  fullName.vb: System.DateTime()
  name.vb: DateTime()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.DateTime[,]
  isExternal: true
  name: DateTime[,]
  nameWithType: DateTime[,]
  fullName: System.DateTime[,]
  nameWithType.vb: DateTime(,)
  fullName.vb: System.DateTime(,)
  name.vb: DateTime(,)
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.DateTime[,,]
  isExternal: true
  name: DateTime[,,]
  nameWithType: DateTime[,,]
  fullName: System.DateTime[,,]
  nameWithType.vb: DateTime(,,)
  fullName.vb: System.DateTime(,,)
  name.vb: DateTime(,,)
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[,,]'
    nameWithType: '[,,]'
    fullName: '[,,]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: (,,)
    nameWithType: (,,)
    fullName: (,,)
- uid: BMVE.Core.Runnable.Array_Add*
  commentId: Overload:BMVE.Core.Runnable.Array_Add
  name: Array_Add
  nameWithType: Runnable.Array_Add
  fullName: BMVE.Core.Runnable.Array_Add
- uid: BMVE.Core.Runnable.Array_Insert*
  commentId: Overload:BMVE.Core.Runnable.Array_Insert
  name: Array_Insert
  nameWithType: Runnable.Array_Insert
  fullName: BMVE.Core.Runnable.Array_Insert
- uid: BMVE.Core.Runnable.Array_Remove*
  commentId: Overload:BMVE.Core.Runnable.Array_Remove
  name: Array_Remove
  nameWithType: Runnable.Array_Remove
  fullName: BMVE.Core.Runnable.Array_Remove
- uid: BMVE.Core.Runnable.Array_Length*
  commentId: Overload:BMVE.Core.Runnable.Array_Length
  name: Array_Length
  nameWithType: Runnable.Array_Length
  fullName: BMVE.Core.Runnable.Array_Length
- uid: BMVE.Core.Runnable.Array_Contains*
  commentId: Overload:BMVE.Core.Runnable.Array_Contains
  name: Array_Contains
  nameWithType: Runnable.Array_Contains
  fullName: BMVE.Core.Runnable.Array_Contains
- uid: BMVE.Core.Runnable.Array_IndexOf*
  commentId: Overload:BMVE.Core.Runnable.Array_IndexOf
  name: Array_IndexOf
  nameWithType: Runnable.Array_IndexOf
  fullName: BMVE.Core.Runnable.Array_IndexOf
- uid: BMVE.Core.Runnable.Array_LastIndexOf*
  commentId: Overload:BMVE.Core.Runnable.Array_LastIndexOf
  name: Array_LastIndexOf
  nameWithType: Runnable.Array_LastIndexOf
  fullName: BMVE.Core.Runnable.Array_LastIndexOf
- uid: BMVE.Core.Runnable.Array_Copy*
  commentId: Overload:BMVE.Core.Runnable.Array_Copy
  name: Array_Copy
  nameWithType: Runnable.Array_Copy
  fullName: BMVE.Core.Runnable.Array_Copy
- uid: BMVE.Core.Runnable.Array_Concat*
  commentId: Overload:BMVE.Core.Runnable.Array_Concat
  name: Array_Concat
  nameWithType: Runnable.Array_Concat
  fullName: BMVE.Core.Runnable.Array_Concat
- uid: BMVE.Core.Runnable.Convert_ToInt*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToInt
  name: Convert_ToInt
  nameWithType: Runnable.Convert_ToInt
  fullName: BMVE.Core.Runnable.Convert_ToInt
- uid: BMVE.Core.Runnable.Convert_ToUInt*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToUInt
  name: Convert_ToUInt
  nameWithType: Runnable.Convert_ToUInt
  fullName: BMVE.Core.Runnable.Convert_ToUInt
- uid: BMVE.Core.Runnable.Convert_ToLong*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToLong
  name: Convert_ToLong
  nameWithType: Runnable.Convert_ToLong
  fullName: BMVE.Core.Runnable.Convert_ToLong
- uid: BMVE.Core.Runnable.Convert_ToULong*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToULong
  name: Convert_ToULong
  nameWithType: Runnable.Convert_ToULong
  fullName: BMVE.Core.Runnable.Convert_ToULong
- uid: BMVE.Core.Runnable.Convert_ToShort*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToShort
  name: Convert_ToShort
  nameWithType: Runnable.Convert_ToShort
  fullName: BMVE.Core.Runnable.Convert_ToShort
- uid: BMVE.Core.Runnable.Convert_ToUShort*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToUShort
  name: Convert_ToUShort
  nameWithType: Runnable.Convert_ToUShort
  fullName: BMVE.Core.Runnable.Convert_ToUShort
- uid: BMVE.Core.Runnable.Convert_ToByte*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToByte
  name: Convert_ToByte
  nameWithType: Runnable.Convert_ToByte
  fullName: BMVE.Core.Runnable.Convert_ToByte
- uid: BMVE.Core.Runnable.Convert_ToSByte*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToSByte
  name: Convert_ToSByte
  nameWithType: Runnable.Convert_ToSByte
  fullName: BMVE.Core.Runnable.Convert_ToSByte
- uid: BMVE.Core.Runnable.Convert_ToDouble*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToDouble
  name: Convert_ToDouble
  nameWithType: Runnable.Convert_ToDouble
  fullName: BMVE.Core.Runnable.Convert_ToDouble
- uid: BMVE.Core.Runnable.Convert_ToFloat*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToFloat
  name: Convert_ToFloat
  nameWithType: Runnable.Convert_ToFloat
  fullName: BMVE.Core.Runnable.Convert_ToFloat
- uid: BMVE.Core.Runnable.Convert_ToDecimal*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToDecimal
  name: Convert_ToDecimal
  nameWithType: Runnable.Convert_ToDecimal
  fullName: BMVE.Core.Runnable.Convert_ToDecimal
- uid: BMVE.Core.Runnable.Convert_ToBoolean*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToBoolean
  name: Convert_ToBoolean
  nameWithType: Runnable.Convert_ToBoolean
  fullName: BMVE.Core.Runnable.Convert_ToBoolean
- uid: BMVE.Core.Runnable.Convert_ToString*
  commentId: Overload:BMVE.Core.Runnable.Convert_ToString
  name: Convert_ToString
  nameWithType: Runnable.Convert_ToString
  fullName: BMVE.Core.Runnable.Convert_ToString
- uid: BMVE.Core.Runnable.Datetime_Now*
  commentId: Overload:BMVE.Core.Runnable.Datetime_Now
  name: Datetime_Now
  nameWithType: Runnable.Datetime_Now
  fullName: BMVE.Core.Runnable.Datetime_Now
- uid: BMVE.Core.Runnable.Datetime_UtcNow*
  commentId: Overload:BMVE.Core.Runnable.Datetime_UtcNow
  name: Datetime_UtcNow
  nameWithType: Runnable.Datetime_UtcNow
  fullName: BMVE.Core.Runnable.Datetime_UtcNow
- uid: BMVE.Core.Runnable.Datetime_GetCurrentDate*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentDate
  name: Datetime_GetCurrentDate
  nameWithType: Runnable.Datetime_GetCurrentDate
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentDate
- uid: BMVE.Core.Runnable.Datetime_GetCurrentUtcDate*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentUtcDate
  name: Datetime_GetCurrentUtcDate
  nameWithType: Runnable.Datetime_GetCurrentUtcDate
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentUtcDate
- uid: BMVE.Core.Runnable.Datetime_GetCurrentTime*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentTime
  name: Datetime_GetCurrentTime
  nameWithType: Runnable.Datetime_GetCurrentTime
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentTime
- uid: BMVE.Core.Runnable.Datetime_GetCurrentUtcTime*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentUtcTime
  name: Datetime_GetCurrentUtcTime
  nameWithType: Runnable.Datetime_GetCurrentUtcTime
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentUtcTime
- uid: BMVE.Core.Runnable.Datetime_GetCurrentYear*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentYear
  name: Datetime_GetCurrentYear
  nameWithType: Runnable.Datetime_GetCurrentYear
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentYear
- uid: BMVE.Core.Runnable.Datetime_GetCurrentMonth*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentMonth
  name: Datetime_GetCurrentMonth
  nameWithType: Runnable.Datetime_GetCurrentMonth
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentMonth
- uid: BMVE.Core.Runnable.Datetime_GetCurrentDay*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentDay
  name: Datetime_GetCurrentDay
  nameWithType: Runnable.Datetime_GetCurrentDay
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentDay
- uid: BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek
  name: Datetime_GetCurrentDayOfWeek
  nameWithType: Runnable.Datetime_GetCurrentDayOfWeek
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentDayOfWeek
- uid: BMVE.Core.Runnable.Datetime_GetCurrentHour*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentHour
  name: Datetime_GetCurrentHour
  nameWithType: Runnable.Datetime_GetCurrentHour
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentHour
- uid: BMVE.Core.Runnable.Datetime_GetCurrentMinutes*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentMinutes
  name: Datetime_GetCurrentMinutes
  nameWithType: Runnable.Datetime_GetCurrentMinutes
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentMinutes
- uid: BMVE.Core.Runnable.Datetime_GetCurrentSeconds*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentSeconds
  name: Datetime_GetCurrentSeconds
  nameWithType: Runnable.Datetime_GetCurrentSeconds
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentSeconds
- uid: BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds*
  commentId: Overload:BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds
  name: Datetime_GetCurrentMilliseconds
  nameWithType: Runnable.Datetime_GetCurrentMilliseconds
  fullName: BMVE.Core.Runnable.Datetime_GetCurrentMilliseconds
- uid: BMVE.Core.Runnable.Datetime_CreateDate*
  commentId: Overload:BMVE.Core.Runnable.Datetime_CreateDate
  name: Datetime_CreateDate
  nameWithType: Runnable.Datetime_CreateDate
  fullName: BMVE.Core.Runnable.Datetime_CreateDate
- uid: BMVE.Core.Runnable.Datetime_CreateDatetime*
  commentId: Overload:BMVE.Core.Runnable.Datetime_CreateDatetime
  name: Datetime_CreateDatetime
  nameWithType: Runnable.Datetime_CreateDatetime
  fullName: BMVE.Core.Runnable.Datetime_CreateDatetime
- uid: BMVE.Core.Runnable.Datetime_CreateTime*
  commentId: Overload:BMVE.Core.Runnable.Datetime_CreateTime
  name: Datetime_CreateTime
  nameWithType: Runnable.Datetime_CreateTime
  fullName: BMVE.Core.Runnable.Datetime_CreateTime
- uid: BMVE.Core.Runnable.Datetime_Add*
  commentId: Overload:BMVE.Core.Runnable.Datetime_Add
  name: Datetime_Add
  nameWithType: Runnable.Datetime_Add
  fullName: BMVE.Core.Runnable.Datetime_Add
- uid: BMVE.Core.Runnable.Datetime_Subtract*
  commentId: Overload:BMVE.Core.Runnable.Datetime_Subtract
  name: Datetime_Subtract
  nameWithType: Runnable.Datetime_Subtract
  fullName: BMVE.Core.Runnable.Datetime_Subtract
- uid: BMVE.Core.Runnable.File_Exists*
  commentId: Overload:BMVE.Core.Runnable.File_Exists
  name: File_Exists
  nameWithType: Runnable.File_Exists
  fullName: BMVE.Core.Runnable.File_Exists
- uid: BMVE.Core.Runnable.File_DirectoryExists*
  commentId: Overload:BMVE.Core.Runnable.File_DirectoryExists
  name: File_DirectoryExists
  nameWithType: Runnable.File_DirectoryExists
  fullName: BMVE.Core.Runnable.File_DirectoryExists
- uid: BMVE.Core.Runnable.File_IsOpened*
  commentId: Overload:BMVE.Core.Runnable.File_IsOpened
  name: File_IsOpened
  nameWithType: Runnable.File_IsOpened
  fullName: BMVE.Core.Runnable.File_IsOpened
- uid: BMVE.Core.Runnable.File_IsOpenedToRead*
  commentId: Overload:BMVE.Core.Runnable.File_IsOpenedToRead
  name: File_IsOpenedToRead
  nameWithType: Runnable.File_IsOpenedToRead
  fullName: BMVE.Core.Runnable.File_IsOpenedToRead
- uid: BMVE.Core.Runnable.File_IsOpenedToWrite*
  commentId: Overload:BMVE.Core.Runnable.File_IsOpenedToWrite
  name: File_IsOpenedToWrite
  nameWithType: Runnable.File_IsOpenedToWrite
  fullName: BMVE.Core.Runnable.File_IsOpenedToWrite
- uid: BMVE.Core.Runnable.File_OpenToRead*
  commentId: Overload:BMVE.Core.Runnable.File_OpenToRead
  name: File_OpenToRead
  nameWithType: Runnable.File_OpenToRead
  fullName: BMVE.Core.Runnable.File_OpenToRead
- uid: BMVE.Core.Runnable.File_OpenToWrite*
  commentId: Overload:BMVE.Core.Runnable.File_OpenToWrite
  name: File_OpenToWrite
  nameWithType: Runnable.File_OpenToWrite
  fullName: BMVE.Core.Runnable.File_OpenToWrite
- uid: BMVE.Core.Runnable.File_Close*
  commentId: Overload:BMVE.Core.Runnable.File_Close
  name: File_Close
  nameWithType: Runnable.File_Close
  fullName: BMVE.Core.Runnable.File_Close
- uid: BMVE.Core.Runnable.File_ReadLine*
  commentId: Overload:BMVE.Core.Runnable.File_ReadLine
  name: File_ReadLine
  nameWithType: Runnable.File_ReadLine
  fullName: BMVE.Core.Runnable.File_ReadLine
- uid: BMVE.Core.Runnable.File_ReadBytes*
  commentId: Overload:BMVE.Core.Runnable.File_ReadBytes
  name: File_ReadBytes
  nameWithType: Runnable.File_ReadBytes
  fullName: BMVE.Core.Runnable.File_ReadBytes
- uid: BMVE.Core.Runnable.File_WriteLine*
  commentId: Overload:BMVE.Core.Runnable.File_WriteLine
  name: File_WriteLine
  nameWithType: Runnable.File_WriteLine
  fullName: BMVE.Core.Runnable.File_WriteLine
- uid: BMVE.Core.Runnable.File_Write*
  commentId: Overload:BMVE.Core.Runnable.File_Write
  name: File_Write
  nameWithType: Runnable.File_Write
  fullName: BMVE.Core.Runnable.File_Write
- uid: BMVE.Core.Runnable.File_WriteBytes*
  commentId: Overload:BMVE.Core.Runnable.File_WriteBytes
  name: File_WriteBytes
  nameWithType: Runnable.File_WriteBytes
  fullName: BMVE.Core.Runnable.File_WriteBytes
- uid: BMVE.Core.Runnable.File_IsEnd*
  commentId: Overload:BMVE.Core.Runnable.File_IsEnd
  name: File_IsEnd
  nameWithType: Runnable.File_IsEnd
  fullName: BMVE.Core.Runnable.File_IsEnd
- uid: BMVE.Core.Runnable.File_GetDirectories*
  commentId: Overload:BMVE.Core.Runnable.File_GetDirectories
  name: File_GetDirectories
  nameWithType: Runnable.File_GetDirectories
  fullName: BMVE.Core.Runnable.File_GetDirectories
- uid: BMVE.Core.Runnable.File_GetFiles*
  commentId: Overload:BMVE.Core.Runnable.File_GetFiles
  name: File_GetFiles
  nameWithType: Runnable.File_GetFiles
  fullName: BMVE.Core.Runnable.File_GetFiles
- uid: BMVE.Core.Runnable.File_SetCurrentDirectory*
  commentId: Overload:BMVE.Core.Runnable.File_SetCurrentDirectory
  name: File_SetCurrentDirectory
  nameWithType: Runnable.File_SetCurrentDirectory
  fullName: BMVE.Core.Runnable.File_SetCurrentDirectory
- uid: BMVE.Core.Runnable.File_GetCurrentDirectory*
  commentId: Overload:BMVE.Core.Runnable.File_GetCurrentDirectory
  name: File_GetCurrentDirectory
  nameWithType: Runnable.File_GetCurrentDirectory
  fullName: BMVE.Core.Runnable.File_GetCurrentDirectory
- uid: BMVE.Core.Runnable.File_CreateDirectory*
  commentId: Overload:BMVE.Core.Runnable.File_CreateDirectory
  name: File_CreateDirectory
  nameWithType: Runnable.File_CreateDirectory
  fullName: BMVE.Core.Runnable.File_CreateDirectory
- uid: BMVE.Core.Runnable.File_RenameDirectory*
  commentId: Overload:BMVE.Core.Runnable.File_RenameDirectory
  name: File_RenameDirectory
  nameWithType: Runnable.File_RenameDirectory
  fullName: BMVE.Core.Runnable.File_RenameDirectory
- uid: BMVE.Core.Runnable.File_DeleteDirectory*
  commentId: Overload:BMVE.Core.Runnable.File_DeleteDirectory
  name: File_DeleteDirectory
  nameWithType: Runnable.File_DeleteDirectory
  fullName: BMVE.Core.Runnable.File_DeleteDirectory
- uid: BMVE.Core.Runnable.File_GetSize*
  commentId: Overload:BMVE.Core.Runnable.File_GetSize
  name: File_GetSize
  nameWithType: Runnable.File_GetSize
  fullName: BMVE.Core.Runnable.File_GetSize
- uid: BMVE.Core.Runnable.File_GetOffset*
  commentId: Overload:BMVE.Core.Runnable.File_GetOffset
  name: File_GetOffset
  nameWithType: Runnable.File_GetOffset
  fullName: BMVE.Core.Runnable.File_GetOffset
- uid: BMVE.Core.Runnable.File_SetOffset*
  commentId: Overload:BMVE.Core.Runnable.File_SetOffset
  name: File_SetOffset
  nameWithType: Runnable.File_SetOffset
  fullName: BMVE.Core.Runnable.File_SetOffset
- uid: BMVE.Core.Runnable.File_Rename*
  commentId: Overload:BMVE.Core.Runnable.File_Rename
  name: File_Rename
  nameWithType: Runnable.File_Rename
  fullName: BMVE.Core.Runnable.File_Rename
- uid: BMVE.Core.Runnable.File_Delete*
  commentId: Overload:BMVE.Core.Runnable.File_Delete
  name: File_Delete
  nameWithType: Runnable.File_Delete
  fullName: BMVE.Core.Runnable.File_Delete
- uid: BMVE.Core.Runnable.File_Copy*
  commentId: Overload:BMVE.Core.Runnable.File_Copy
  name: File_Copy
  nameWithType: Runnable.File_Copy
  fullName: BMVE.Core.Runnable.File_Copy
- uid: BMVE.Core.Runnable.File_Move*
  commentId: Overload:BMVE.Core.Runnable.File_Move
  name: File_Move
  nameWithType: Runnable.File_Move
  fullName: BMVE.Core.Runnable.File_Move
- uid: BMVE.Core.Runnable.File_GetFilenameFromPath*
  commentId: Overload:BMVE.Core.Runnable.File_GetFilenameFromPath
  name: File_GetFilenameFromPath
  nameWithType: Runnable.File_GetFilenameFromPath
  fullName: BMVE.Core.Runnable.File_GetFilenameFromPath
- uid: BMVE.Core.Runnable.File_GetDirectoryPathFromPath*
  commentId: Overload:BMVE.Core.Runnable.File_GetDirectoryPathFromPath
  name: File_GetDirectoryPathFromPath
  nameWithType: Runnable.File_GetDirectoryPathFromPath
  fullName: BMVE.Core.Runnable.File_GetDirectoryPathFromPath
- uid: BMVE.Core.Runnable.Image_Load*
  commentId: Overload:BMVE.Core.Runnable.Image_Load
  name: Image_Load
  nameWithType: Runnable.Image_Load
  fullName: BMVE.Core.Runnable.Image_Load
- uid: BMVE.Core.Runnable.Image_Close*
  commentId: Overload:BMVE.Core.Runnable.Image_Close
  name: Image_Close
  nameWithType: Runnable.Image_Close
  fullName: BMVE.Core.Runnable.Image_Close
- uid: BMVE.Core.Runnable.Image_Rotate*
  commentId: Overload:BMVE.Core.Runnable.Image_Rotate
  name: Image_Rotate
  nameWithType: Runnable.Image_Rotate
  fullName: BMVE.Core.Runnable.Image_Rotate
- uid: BMVE.Core.Runnable.Image_GetAngle*
  commentId: Overload:BMVE.Core.Runnable.Image_GetAngle
  name: Image_GetAngle
  nameWithType: Runnable.Image_GetAngle
  fullName: BMVE.Core.Runnable.Image_GetAngle
- uid: BMVE.Core.Runnable.Image_GetWidth*
  commentId: Overload:BMVE.Core.Runnable.Image_GetWidth
  name: Image_GetWidth
  nameWithType: Runnable.Image_GetWidth
  fullName: BMVE.Core.Runnable.Image_GetWidth
- uid: BMVE.Core.Runnable.Image_GetHeight*
  commentId: Overload:BMVE.Core.Runnable.Image_GetHeight
  name: Image_GetHeight
  nameWithType: Runnable.Image_GetHeight
  fullName: BMVE.Core.Runnable.Image_GetHeight
- uid: BMVE.Core.Runnable.Input_WaitForKey*
  commentId: Overload:BMVE.Core.Runnable.Input_WaitForKey
  name: Input_WaitForKey
  nameWithType: Runnable.Input_WaitForKey
  fullName: BMVE.Core.Runnable.Input_WaitForKey
- uid: BMVE.Core.Runnable.Input_IsKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsKeyPressed
  name: Input_IsKeyPressed
  nameWithType: Runnable.Input_IsKeyPressed
  fullName: BMVE.Core.Runnable.Input_IsKeyPressed
- uid: BMVE.Core.Runnable.Input_LeftArrowKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_LeftArrowKeyPressed
  name: Input_LeftArrowKeyPressed
  nameWithType: Runnable.Input_LeftArrowKeyPressed
  fullName: BMVE.Core.Runnable.Input_LeftArrowKeyPressed
- uid: BMVE.Core.Runnable.Input_RightArrowKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_RightArrowKeyPressed
  name: Input_RightArrowKeyPressed
  nameWithType: Runnable.Input_RightArrowKeyPressed
  fullName: BMVE.Core.Runnable.Input_RightArrowKeyPressed
- uid: BMVE.Core.Runnable.Input_UpArrowKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_UpArrowKeyPressed
  name: Input_UpArrowKeyPressed
  nameWithType: Runnable.Input_UpArrowKeyPressed
  fullName: BMVE.Core.Runnable.Input_UpArrowKeyPressed
- uid: BMVE.Core.Runnable.Input_DownArrowKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_DownArrowKeyPressed
  name: Input_DownArrowKeyPressed
  nameWithType: Runnable.Input_DownArrowKeyPressed
  fullName: BMVE.Core.Runnable.Input_DownArrowKeyPressed
- uid: BMVE.Core.Runnable.Input_ShiftPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_ShiftPressed
  name: Input_ShiftPressed
  nameWithType: Runnable.Input_ShiftPressed
  fullName: BMVE.Core.Runnable.Input_ShiftPressed
- uid: BMVE.Core.Runnable.Input_LeftShiftPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_LeftShiftPressed
  name: Input_LeftShiftPressed
  nameWithType: Runnable.Input_LeftShiftPressed
  fullName: BMVE.Core.Runnable.Input_LeftShiftPressed
- uid: BMVE.Core.Runnable.Input_RightShiftPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_RightShiftPressed
  name: Input_RightShiftPressed
  nameWithType: Runnable.Input_RightShiftPressed
  fullName: BMVE.Core.Runnable.Input_RightShiftPressed
- uid: BMVE.Core.Runnable.Input_ControlPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_ControlPressed
  name: Input_ControlPressed
  nameWithType: Runnable.Input_ControlPressed
  fullName: BMVE.Core.Runnable.Input_ControlPressed
- uid: BMVE.Core.Runnable.Input_LeftControlPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_LeftControlPressed
  name: Input_LeftControlPressed
  nameWithType: Runnable.Input_LeftControlPressed
  fullName: BMVE.Core.Runnable.Input_LeftControlPressed
- uid: BMVE.Core.Runnable.Input_RightControlPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_RightControlPressed
  name: Input_RightControlPressed
  nameWithType: Runnable.Input_RightControlPressed
  fullName: BMVE.Core.Runnable.Input_RightControlPressed
- uid: BMVE.Core.Runnable.Input_AltPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_AltPressed
  name: Input_AltPressed
  nameWithType: Runnable.Input_AltPressed
  fullName: BMVE.Core.Runnable.Input_AltPressed
- uid: BMVE.Core.Runnable.Input_LeftAltPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_LeftAltPressed
  name: Input_LeftAltPressed
  nameWithType: Runnable.Input_LeftAltPressed
  fullName: BMVE.Core.Runnable.Input_LeftAltPressed
- uid: BMVE.Core.Runnable.Input_RightAltPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_RightAltPressed
  name: Input_RightAltPressed
  nameWithType: Runnable.Input_RightAltPressed
  fullName: BMVE.Core.Runnable.Input_RightAltPressed
- uid: BMVE.Core.Runnable.Input_WinKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_WinKeyPressed
  name: Input_WinKeyPressed
  nameWithType: Runnable.Input_WinKeyPressed
  fullName: BMVE.Core.Runnable.Input_WinKeyPressed
- uid: BMVE.Core.Runnable.Input_LeftWinKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_LeftWinKeyPressed
  name: Input_LeftWinKeyPressed
  nameWithType: Runnable.Input_LeftWinKeyPressed
  fullName: BMVE.Core.Runnable.Input_LeftWinKeyPressed
- uid: BMVE.Core.Runnable.Input_RightWinKeyPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_RightWinKeyPressed
  name: Input_RightWinKeyPressed
  nameWithType: Runnable.Input_RightWinKeyPressed
  fullName: BMVE.Core.Runnable.Input_RightWinKeyPressed
- uid: BMVE.Core.Runnable.Input_EscapePressed*
  commentId: Overload:BMVE.Core.Runnable.Input_EscapePressed
  name: Input_EscapePressed
  nameWithType: Runnable.Input_EscapePressed
  fullName: BMVE.Core.Runnable.Input_EscapePressed
- uid: BMVE.Core.Runnable.Input_EnterPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_EnterPressed
  name: Input_EnterPressed
  nameWithType: Runnable.Input_EnterPressed
  fullName: BMVE.Core.Runnable.Input_EnterPressed
- uid: BMVE.Core.Runnable.Input_SpacePressed*
  commentId: Overload:BMVE.Core.Runnable.Input_SpacePressed
  name: Input_SpacePressed
  nameWithType: Runnable.Input_SpacePressed
  fullName: BMVE.Core.Runnable.Input_SpacePressed
- uid: BMVE.Core.Runnable.Input_ReadString*
  commentId: Overload:BMVE.Core.Runnable.Input_ReadString
  name: Input_ReadString
  nameWithType: Runnable.Input_ReadString
  fullName: BMVE.Core.Runnable.Input_ReadString
- uid: BMVE.Core.Runnable.Input_GetPressedChars*
  commentId: Overload:BMVE.Core.Runnable.Input_GetPressedChars
  name: Input_GetPressedChars
  nameWithType: Runnable.Input_GetPressedChars
  fullName: BMVE.Core.Runnable.Input_GetPressedChars
- uid: BMVE.Core.Runnable.Input_GetMousePositionX*
  commentId: Overload:BMVE.Core.Runnable.Input_GetMousePositionX
  name: Input_GetMousePositionX
  nameWithType: Runnable.Input_GetMousePositionX
  fullName: BMVE.Core.Runnable.Input_GetMousePositionX
- uid: BMVE.Core.Runnable.Input_GetMousePositionY*
  commentId: Overload:BMVE.Core.Runnable.Input_GetMousePositionY
  name: Input_GetMousePositionY
  nameWithType: Runnable.Input_GetMousePositionY
  fullName: BMVE.Core.Runnable.Input_GetMousePositionY
- uid: BMVE.Core.Runnable.Input_IsMousePressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsMousePressed
  name: Input_IsMousePressed
  nameWithType: Runnable.Input_IsMousePressed
  fullName: BMVE.Core.Runnable.Input_IsMousePressed
- uid: BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed
  name: Input_IsLeftMouseButtonPressed
  nameWithType: Runnable.Input_IsLeftMouseButtonPressed
  fullName: BMVE.Core.Runnable.Input_IsLeftMouseButtonPressed
- uid: BMVE.Core.Runnable.Input_IsRightMouseButtonPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsRightMouseButtonPressed
  name: Input_IsRightMouseButtonPressed
  nameWithType: Runnable.Input_IsRightMouseButtonPressed
  fullName: BMVE.Core.Runnable.Input_IsRightMouseButtonPressed
- uid: BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed
  name: Input_IsMiddleMouseButtonPressed
  nameWithType: Runnable.Input_IsMiddleMouseButtonPressed
  fullName: BMVE.Core.Runnable.Input_IsMiddleMouseButtonPressed
- uid: BMVE.Core.Runnable.Input_IsXMouseButton1Pressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsXMouseButton1Pressed
  name: Input_IsXMouseButton1Pressed
  nameWithType: Runnable.Input_IsXMouseButton1Pressed
  fullName: BMVE.Core.Runnable.Input_IsXMouseButton1Pressed
- uid: BMVE.Core.Runnable.Input_IsXMouseButton2Pressed*
  commentId: Overload:BMVE.Core.Runnable.Input_IsXMouseButton2Pressed
  name: Input_IsXMouseButton2Pressed
  nameWithType: Runnable.Input_IsXMouseButton2Pressed
  fullName: BMVE.Core.Runnable.Input_IsXMouseButton2Pressed
- uid: BMVE.Core.Runnable.Math_Acos*
  commentId: Overload:BMVE.Core.Runnable.Math_Acos
  name: Math_Acos
  nameWithType: Runnable.Math_Acos
  fullName: BMVE.Core.Runnable.Math_Acos
- uid: BMVE.Core.Runnable.Math_Asin*
  commentId: Overload:BMVE.Core.Runnable.Math_Asin
  name: Math_Asin
  nameWithType: Runnable.Math_Asin
  fullName: BMVE.Core.Runnable.Math_Asin
- uid: BMVE.Core.Runnable.Math_Atan*
  commentId: Overload:BMVE.Core.Runnable.Math_Atan
  name: Math_Atan
  nameWithType: Runnable.Math_Atan
  fullName: BMVE.Core.Runnable.Math_Atan
- uid: BMVE.Core.Runnable.Math_Atan2*
  commentId: Overload:BMVE.Core.Runnable.Math_Atan2
  name: Math_Atan2
  nameWithType: Runnable.Math_Atan2
  fullName: BMVE.Core.Runnable.Math_Atan2
- uid: BMVE.Core.Runnable.Math_Abs*
  commentId: Overload:BMVE.Core.Runnable.Math_Abs
  name: Math_Abs
  nameWithType: Runnable.Math_Abs
  fullName: BMVE.Core.Runnable.Math_Abs
- uid: BMVE.Core.Runnable.Math_Ceil*
  commentId: Overload:BMVE.Core.Runnable.Math_Ceil
  name: Math_Ceil
  nameWithType: Runnable.Math_Ceil
  fullName: BMVE.Core.Runnable.Math_Ceil
- uid: BMVE.Core.Runnable.Math_Cos*
  commentId: Overload:BMVE.Core.Runnable.Math_Cos
  name: Math_Cos
  nameWithType: Runnable.Math_Cos
  fullName: BMVE.Core.Runnable.Math_Cos
- uid: BMVE.Core.Runnable.Math_Cosh*
  commentId: Overload:BMVE.Core.Runnable.Math_Cosh
  name: Math_Cosh
  nameWithType: Runnable.Math_Cosh
  fullName: BMVE.Core.Runnable.Math_Cosh
- uid: BMVE.Core.Runnable.Math_Exp*
  commentId: Overload:BMVE.Core.Runnable.Math_Exp
  name: Math_Exp
  nameWithType: Runnable.Math_Exp
  fullName: BMVE.Core.Runnable.Math_Exp
- uid: BMVE.Core.Runnable.Math_Floor*
  commentId: Overload:BMVE.Core.Runnable.Math_Floor
  name: Math_Floor
  nameWithType: Runnable.Math_Floor
  fullName: BMVE.Core.Runnable.Math_Floor
- uid: BMVE.Core.Runnable.Math_Log*
  commentId: Overload:BMVE.Core.Runnable.Math_Log
  name: Math_Log
  nameWithType: Runnable.Math_Log
  fullName: BMVE.Core.Runnable.Math_Log
- uid: BMVE.Core.Runnable.Math_Log10*
  commentId: Overload:BMVE.Core.Runnable.Math_Log10
  name: Math_Log10
  nameWithType: Runnable.Math_Log10
  fullName: BMVE.Core.Runnable.Math_Log10
- uid: BMVE.Core.Runnable.Math_Pow*
  commentId: Overload:BMVE.Core.Runnable.Math_Pow
  name: Math_Pow
  nameWithType: Runnable.Math_Pow
  fullName: BMVE.Core.Runnable.Math_Pow
- uid: BMVE.Core.Runnable.Math_Round*
  commentId: Overload:BMVE.Core.Runnable.Math_Round
  name: Math_Round
  nameWithType: Runnable.Math_Round
  fullName: BMVE.Core.Runnable.Math_Round
- uid: BMVE.Core.Runnable.Math_Sin*
  commentId: Overload:BMVE.Core.Runnable.Math_Sin
  name: Math_Sin
  nameWithType: Runnable.Math_Sin
  fullName: BMVE.Core.Runnable.Math_Sin
- uid: BMVE.Core.Runnable.Math_Sinh*
  commentId: Overload:BMVE.Core.Runnable.Math_Sinh
  name: Math_Sinh
  nameWithType: Runnable.Math_Sinh
  fullName: BMVE.Core.Runnable.Math_Sinh
- uid: BMVE.Core.Runnable.Math_Sqrt*
  commentId: Overload:BMVE.Core.Runnable.Math_Sqrt
  name: Math_Sqrt
  nameWithType: Runnable.Math_Sqrt
  fullName: BMVE.Core.Runnable.Math_Sqrt
- uid: BMVE.Core.Runnable.Math_Tan*
  commentId: Overload:BMVE.Core.Runnable.Math_Tan
  name: Math_Tan
  nameWithType: Runnable.Math_Tan
  fullName: BMVE.Core.Runnable.Math_Tan
- uid: BMVE.Core.Runnable.Math_Tanh*
  commentId: Overload:BMVE.Core.Runnable.Math_Tanh
  name: Math_Tanh
  nameWithType: Runnable.Math_Tanh
  fullName: BMVE.Core.Runnable.Math_Tanh
- uid: BMVE.Core.Runnable.Math_Truncate*
  commentId: Overload:BMVE.Core.Runnable.Math_Truncate
  name: Math_Truncate
  nameWithType: Runnable.Math_Truncate
  fullName: BMVE.Core.Runnable.Math_Truncate
- uid: BMVE.Core.Runnable.Math_PI*
  commentId: Overload:BMVE.Core.Runnable.Math_PI
  name: Math_PI
  nameWithType: Runnable.Math_PI
  fullName: BMVE.Core.Runnable.Math_PI
- uid: BMVE.Core.Runnable.Math_RandomInt*
  commentId: Overload:BMVE.Core.Runnable.Math_RandomInt
  name: Math_RandomInt
  nameWithType: Runnable.Math_RandomInt
  fullName: BMVE.Core.Runnable.Math_RandomInt
- uid: BMVE.Core.Runnable.Math_RandomDouble*
  commentId: Overload:BMVE.Core.Runnable.Math_RandomDouble
  name: Math_RandomDouble
  nameWithType: Runnable.Math_RandomDouble
  fullName: BMVE.Core.Runnable.Math_RandomDouble
- uid: BMVE.Core.Runnable.Screen_DrawText*
  commentId: Overload:BMVE.Core.Runnable.Screen_DrawText
  name: Screen_DrawText
  nameWithType: Runnable.Screen_DrawText
  fullName: BMVE.Core.Runnable.Screen_DrawText
- uid: BMVE.Core.Runnable.Screen_SetLineSize*
  commentId: Overload:BMVE.Core.Runnable.Screen_SetLineSize
  name: Screen_SetLineSize
  nameWithType: Runnable.Screen_SetLineSize
  fullName: BMVE.Core.Runnable.Screen_SetLineSize
- uid: BMVE.Core.Runnable.Screen_GetLineSize*
  commentId: Overload:BMVE.Core.Runnable.Screen_GetLineSize
  name: Screen_GetLineSize
  nameWithType: Runnable.Screen_GetLineSize
  fullName: BMVE.Core.Runnable.Screen_GetLineSize
- uid: BMVE.Core.Runnable.Screen_DrawLine*
  commentId: Overload:BMVE.Core.Runnable.Screen_DrawLine
  name: Screen_DrawLine
  nameWithType: Runnable.Screen_DrawLine
  fullName: BMVE.Core.Runnable.Screen_DrawLine
- uid: BMVE.Core.Runnable.Screen_DrawRectangle*
  commentId: Overload:BMVE.Core.Runnable.Screen_DrawRectangle
  name: Screen_DrawRectangle
  nameWithType: Runnable.Screen_DrawRectangle
  fullName: BMVE.Core.Runnable.Screen_DrawRectangle
- uid: BMVE.Core.Runnable.Screen_DrawEllipse*
  commentId: Overload:BMVE.Core.Runnable.Screen_DrawEllipse
  name: Screen_DrawEllipse
  nameWithType: Runnable.Screen_DrawEllipse
  fullName: BMVE.Core.Runnable.Screen_DrawEllipse
- uid: BMVE.Core.Runnable.Screen_DrawImage*
  commentId: Overload:BMVE.Core.Runnable.Screen_DrawImage
  name: Screen_DrawImage
  nameWithType: Runnable.Screen_DrawImage
  fullName: BMVE.Core.Runnable.Screen_DrawImage
- uid: BMVE.Core.Runnable.RGB*
  commentId: Overload:BMVE.Core.Runnable.RGB
  name: RGB
  nameWithType: Runnable.RGB
  fullName: BMVE.Core.Runnable.RGB
- uid: BMVE.Core.Runnable.RGBA*
  commentId: Overload:BMVE.Core.Runnable.RGBA
  name: RGBA
  nameWithType: Runnable.RGBA
  fullName: BMVE.Core.Runnable.RGBA
- uid: BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)
  commentId: M:BMVE.Core.Runnable.Screen_SetBackgroundColor(System.Int32)
  isExternal: true
- uid: BMVE.Core.Runnable.Screen_Clear*
  commentId: Overload:BMVE.Core.Runnable.Screen_Clear
  name: Screen_Clear
  nameWithType: Runnable.Screen_Clear
  fullName: BMVE.Core.Runnable.Screen_Clear
- uid: BMVE.Core.Runnable.Screen_Clear
  commentId: M:BMVE.Core.Runnable.Screen_Clear
  isExternal: true
- uid: BMVE.Core.Runnable.Screen_SetBackgroundColor*
  commentId: Overload:BMVE.Core.Runnable.Screen_SetBackgroundColor
  name: Screen_SetBackgroundColor
  nameWithType: Runnable.Screen_SetBackgroundColor
  fullName: BMVE.Core.Runnable.Screen_SetBackgroundColor
- uid: BMVE.Core.Runnable.Screen_Render*
  commentId: Overload:BMVE.Core.Runnable.Screen_Render
  name: Screen_Render
  nameWithType: Runnable.Screen_Render
  fullName: BMVE.Core.Runnable.Screen_Render
- uid: BMVE.Core.Runnable.Screen_SetImmediateDrawingMode*
  commentId: Overload:BMVE.Core.Runnable.Screen_SetImmediateDrawingMode
  name: Screen_SetImmediateDrawingMode
  nameWithType: Runnable.Screen_SetImmediateDrawingMode
  fullName: BMVE.Core.Runnable.Screen_SetImmediateDrawingMode
- uid: BMVE.Core.Runnable.Screen_SetBufferedDrawingMode*
  commentId: Overload:BMVE.Core.Runnable.Screen_SetBufferedDrawingMode
  name: Screen_SetBufferedDrawingMode
  nameWithType: Runnable.Screen_SetBufferedDrawingMode
  fullName: BMVE.Core.Runnable.Screen_SetBufferedDrawingMode
- uid: BMVE.Core.Runnable.Sound_Load*
  commentId: Overload:BMVE.Core.Runnable.Sound_Load
  name: Sound_Load
  nameWithType: Runnable.Sound_Load
  fullName: BMVE.Core.Runnable.Sound_Load
- uid: BMVE.Core.Runnable.Sound_IsLoaded*
  commentId: Overload:BMVE.Core.Runnable.Sound_IsLoaded
  name: Sound_IsLoaded
  nameWithType: Runnable.Sound_IsLoaded
  fullName: BMVE.Core.Runnable.Sound_IsLoaded
- uid: BMVE.Core.Runnable.Sound_Play*
  commentId: Overload:BMVE.Core.Runnable.Sound_Play
  name: Sound_Play
  nameWithType: Runnable.Sound_Play
  fullName: BMVE.Core.Runnable.Sound_Play
- uid: BMVE.Core.Runnable.Sound_Pause*
  commentId: Overload:BMVE.Core.Runnable.Sound_Pause
  name: Sound_Pause
  nameWithType: Runnable.Sound_Pause
  fullName: BMVE.Core.Runnable.Sound_Pause
- uid: BMVE.Core.Runnable.Sound_Stop*
  commentId: Overload:BMVE.Core.Runnable.Sound_Stop
  name: Sound_Stop
  nameWithType: Runnable.Sound_Stop
  fullName: BMVE.Core.Runnable.Sound_Stop
- uid: BMVE.Core.Runnable.Sound_SetVolume*
  commentId: Overload:BMVE.Core.Runnable.Sound_SetVolume
  name: Sound_SetVolume
  nameWithType: Runnable.Sound_SetVolume
  fullName: BMVE.Core.Runnable.Sound_SetVolume
- uid: BMVE.Core.Runnable.Sound_GetVolume*
  commentId: Overload:BMVE.Core.Runnable.Sound_GetVolume
  name: Sound_GetVolume
  nameWithType: Runnable.Sound_GetVolume
  fullName: BMVE.Core.Runnable.Sound_GetVolume
- uid: BMVE.Core.Runnable.Sound_Close*
  commentId: Overload:BMVE.Core.Runnable.Sound_Close
  name: Sound_Close
  nameWithType: Runnable.Sound_Close
  fullName: BMVE.Core.Runnable.Sound_Close
- uid: BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages*
  commentId: Overload:BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages
  name: Speech_GetAvailableRecognitionLanguages
  nameWithType: Runnable.Speech_GetAvailableRecognitionLanguages
  fullName: BMVE.Core.Runnable.Speech_GetAvailableRecognitionLanguages
- uid: BMVE.Core.Runnable.Speech_SetRecognitionLanguage*
  commentId: Overload:BMVE.Core.Runnable.Speech_SetRecognitionLanguage
  name: Speech_SetRecognitionLanguage
  nameWithType: Runnable.Speech_SetRecognitionLanguage
  fullName: BMVE.Core.Runnable.Speech_SetRecognitionLanguage
- uid: BMVE.Core.Runnable.Speech_StartRecognition*
  commentId: Overload:BMVE.Core.Runnable.Speech_StartRecognition
  name: Speech_StartRecognition
  nameWithType: Runnable.Speech_StartRecognition
  fullName: BMVE.Core.Runnable.Speech_StartRecognition
- uid: BMVE.Core.Runnable.Speech_StopRecognition*
  commentId: Overload:BMVE.Core.Runnable.Speech_StopRecognition
  name: Speech_StopRecognition
  nameWithType: Runnable.Speech_StopRecognition
  fullName: BMVE.Core.Runnable.Speech_StopRecognition
- uid: BMVE.Core.Runnable.Speech_GetRecognizedText*
  commentId: Overload:BMVE.Core.Runnable.Speech_GetRecognizedText
  name: Speech_GetRecognizedText
  nameWithType: Runnable.Speech_GetRecognizedText
  fullName: BMVE.Core.Runnable.Speech_GetRecognizedText
- uid: BMVE.Core.Runnable.Speech_ClearRecognizedText*
  commentId: Overload:BMVE.Core.Runnable.Speech_ClearRecognizedText
  name: Speech_ClearRecognizedText
  nameWithType: Runnable.Speech_ClearRecognizedText
  fullName: BMVE.Core.Runnable.Speech_ClearRecognizedText
- uid: BMVE.Core.Runnable.Speech_GetAvailableSynthesizers*
  commentId: Overload:BMVE.Core.Runnable.Speech_GetAvailableSynthesizers
  name: Speech_GetAvailableSynthesizers
  nameWithType: Runnable.Speech_GetAvailableSynthesizers
  fullName: BMVE.Core.Runnable.Speech_GetAvailableSynthesizers
- uid: BMVE.Core.Runnable.Speech_GetSynthesizerLanguage*
  commentId: Overload:BMVE.Core.Runnable.Speech_GetSynthesizerLanguage
  name: Speech_GetSynthesizerLanguage
  nameWithType: Runnable.Speech_GetSynthesizerLanguage
  fullName: BMVE.Core.Runnable.Speech_GetSynthesizerLanguage
- uid: BMVE.Core.Runnable.Speech_GetCurrentSynthesizer*
  commentId: Overload:BMVE.Core.Runnable.Speech_GetCurrentSynthesizer
  name: Speech_GetCurrentSynthesizer
  nameWithType: Runnable.Speech_GetCurrentSynthesizer
  fullName: BMVE.Core.Runnable.Speech_GetCurrentSynthesizer
- uid: BMVE.Core.Runnable.Speech_SetCurrentSynthesizer*
  commentId: Overload:BMVE.Core.Runnable.Speech_SetCurrentSynthesizer
  name: Speech_SetCurrentSynthesizer
  nameWithType: Runnable.Speech_SetCurrentSynthesizer
  fullName: BMVE.Core.Runnable.Speech_SetCurrentSynthesizer
- uid: BMVE.Core.Runnable.Speech_SynthesizerSpeak*
  commentId: Overload:BMVE.Core.Runnable.Speech_SynthesizerSpeak
  name: Speech_SynthesizerSpeak
  nameWithType: Runnable.Speech_SynthesizerSpeak
  fullName: BMVE.Core.Runnable.Speech_SynthesizerSpeak
- uid: BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking*
  commentId: Overload:BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking
  name: Speech_IsSynthesizerSpeaking
  nameWithType: Runnable.Speech_IsSynthesizerSpeaking
  fullName: BMVE.Core.Runnable.Speech_IsSynthesizerSpeaking
- uid: BMVE.Core.Runnable.Stopwatch_Start*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_Start
  name: Stopwatch_Start
  nameWithType: Runnable.Stopwatch_Start
  fullName: BMVE.Core.Runnable.Stopwatch_Start
- uid: BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed
  name: Stopwatch_GetMillisecondsElapsed
  nameWithType: Runnable.Stopwatch_GetMillisecondsElapsed
  fullName: BMVE.Core.Runnable.Stopwatch_GetMillisecondsElapsed
- uid: BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed
  name: Stopwatch_GetSecondsElapsed
  nameWithType: Runnable.Stopwatch_GetSecondsElapsed
  fullName: BMVE.Core.Runnable.Stopwatch_GetSecondsElapsed
- uid: BMVE.Core.Runnable.Stopwatch_Stop*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_Stop
  name: Stopwatch_Stop
  nameWithType: Runnable.Stopwatch_Stop
  fullName: BMVE.Core.Runnable.Stopwatch_Stop
- uid: BMVE.Core.Runnable.Stopwatch_Close*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_Close
  name: Stopwatch_Close
  nameWithType: Runnable.Stopwatch_Close
  fullName: BMVE.Core.Runnable.Stopwatch_Close
- uid: BMVE.Core.Runnable.Stopwatch_IsRunning*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_IsRunning
  name: Stopwatch_IsRunning
  nameWithType: Runnable.Stopwatch_IsRunning
  fullName: BMVE.Core.Runnable.Stopwatch_IsRunning
- uid: BMVE.Core.Runnable.Stopwatch_IsCreated*
  commentId: Overload:BMVE.Core.Runnable.Stopwatch_IsCreated
  name: Stopwatch_IsCreated
  nameWithType: Runnable.Stopwatch_IsCreated
  fullName: BMVE.Core.Runnable.Stopwatch_IsCreated
- uid: BMVE.Core.Runnable.String_GetCharCode*
  commentId: Overload:BMVE.Core.Runnable.String_GetCharCode
  name: String_GetCharCode
  nameWithType: Runnable.String_GetCharCode
  fullName: BMVE.Core.Runnable.String_GetCharCode
- uid: BMVE.Core.Runnable.String_Length*
  commentId: Overload:BMVE.Core.Runnable.String_Length
  name: String_Length
  nameWithType: Runnable.String_Length
  fullName: BMVE.Core.Runnable.String_Length
- uid: BMVE.Core.Runnable.String_CharAt*
  commentId: Overload:BMVE.Core.Runnable.String_CharAt
  name: String_CharAt
  nameWithType: Runnable.String_CharAt
  fullName: BMVE.Core.Runnable.String_CharAt
- uid: BMVE.Core.Runnable.String_IndexOf*
  commentId: Overload:BMVE.Core.Runnable.String_IndexOf
  name: String_IndexOf
  nameWithType: Runnable.String_IndexOf
  fullName: BMVE.Core.Runnable.String_IndexOf
- uid: BMVE.Core.Runnable.String_LastIndexOf*
  commentId: Overload:BMVE.Core.Runnable.String_LastIndexOf
  name: String_LastIndexOf
  nameWithType: Runnable.String_LastIndexOf
  fullName: BMVE.Core.Runnable.String_LastIndexOf
- uid: BMVE.Core.Runnable.String_LeftSubstring*
  commentId: Overload:BMVE.Core.Runnable.String_LeftSubstring
  name: String_LeftSubstring
  nameWithType: Runnable.String_LeftSubstring
  fullName: BMVE.Core.Runnable.String_LeftSubstring
- uid: BMVE.Core.Runnable.String_RightSubstring*
  commentId: Overload:BMVE.Core.Runnable.String_RightSubstring
  name: String_RightSubstring
  nameWithType: Runnable.String_RightSubstring
  fullName: BMVE.Core.Runnable.String_RightSubstring
- uid: BMVE.Core.Runnable.String_Substring*
  commentId: Overload:BMVE.Core.Runnable.String_Substring
  name: String_Substring
  nameWithType: Runnable.String_Substring
  fullName: BMVE.Core.Runnable.String_Substring
- uid: BMVE.Core.Runnable.String_ToLower*
  commentId: Overload:BMVE.Core.Runnable.String_ToLower
  name: String_ToLower
  nameWithType: Runnable.String_ToLower
  fullName: BMVE.Core.Runnable.String_ToLower
- uid: BMVE.Core.Runnable.String_ToUpper*
  commentId: Overload:BMVE.Core.Runnable.String_ToUpper
  name: String_ToUpper
  nameWithType: Runnable.String_ToUpper
  fullName: BMVE.Core.Runnable.String_ToUpper
- uid: BMVE.Core.Runnable.String_TrimLeft*
  commentId: Overload:BMVE.Core.Runnable.String_TrimLeft
  name: String_TrimLeft
  nameWithType: Runnable.String_TrimLeft
  fullName: BMVE.Core.Runnable.String_TrimLeft
- uid: BMVE.Core.Runnable.String_TrimRight*
  commentId: Overload:BMVE.Core.Runnable.String_TrimRight
  name: String_TrimRight
  nameWithType: Runnable.String_TrimRight
  fullName: BMVE.Core.Runnable.String_TrimRight
- uid: BMVE.Core.Runnable.String_Trim*
  commentId: Overload:BMVE.Core.Runnable.String_Trim
  name: String_Trim
  nameWithType: Runnable.String_Trim
  fullName: BMVE.Core.Runnable.String_Trim
- uid: BMVE.Core.Runnable.String_Replace*
  commentId: Overload:BMVE.Core.Runnable.String_Replace
  name: String_Replace
  nameWithType: Runnable.String_Replace
  fullName: BMVE.Core.Runnable.String_Replace
- uid: BMVE.Core.Runnable.String_Reverse*
  commentId: Overload:BMVE.Core.Runnable.String_Reverse
  name: String_Reverse
  nameWithType: Runnable.String_Reverse
  fullName: BMVE.Core.Runnable.String_Reverse
- uid: BMVE.Core.Runnable.String_CreateEmpty*
  commentId: Overload:BMVE.Core.Runnable.String_CreateEmpty
  name: String_CreateEmpty
  nameWithType: Runnable.String_CreateEmpty
  fullName: BMVE.Core.Runnable.String_CreateEmpty
- uid: BMVE.Core.Runnable.String_CreateSpaces*
  commentId: Overload:BMVE.Core.Runnable.String_CreateSpaces
  name: String_CreateSpaces
  nameWithType: Runnable.String_CreateSpaces
  fullName: BMVE.Core.Runnable.String_CreateSpaces
- uid: BMVE.Core.Runnable.String_IsOnlyDigits*
  commentId: Overload:BMVE.Core.Runnable.String_IsOnlyDigits
  name: String_IsOnlyDigits
  nameWithType: Runnable.String_IsOnlyDigits
  fullName: BMVE.Core.Runnable.String_IsOnlyDigits
- uid: BMVE.Core.Runnable.String_IsOnlyLetters*
  commentId: Overload:BMVE.Core.Runnable.String_IsOnlyLetters
  name: String_IsOnlyLetters
  nameWithType: Runnable.String_IsOnlyLetters
  fullName: BMVE.Core.Runnable.String_IsOnlyLetters
- uid: BMVE.Core.Runnable.String_IsNumber*
  commentId: Overload:BMVE.Core.Runnable.String_IsNumber
  name: String_IsNumber
  nameWithType: Runnable.String_IsNumber
  fullName: BMVE.Core.Runnable.String_IsNumber
- uid: BMVE.Core.Runnable.String_IsLowerCase*
  commentId: Overload:BMVE.Core.Runnable.String_IsLowerCase
  name: String_IsLowerCase
  nameWithType: Runnable.String_IsLowerCase
  fullName: BMVE.Core.Runnable.String_IsLowerCase
- uid: BMVE.Core.Runnable.String_IsUpperCase*
  commentId: Overload:BMVE.Core.Runnable.String_IsUpperCase
  name: String_IsUpperCase
  nameWithType: Runnable.String_IsUpperCase
  fullName: BMVE.Core.Runnable.String_IsUpperCase
- uid: BMVE.Core.Runnable.String_IsEmpty*
  commentId: Overload:BMVE.Core.Runnable.String_IsEmpty
  name: String_IsEmpty
  nameWithType: Runnable.String_IsEmpty
  fullName: BMVE.Core.Runnable.String_IsEmpty
- uid: BMVE.Core.Runnable.String_Copy*
  commentId: Overload:BMVE.Core.Runnable.String_Copy
  name: String_Copy
  nameWithType: Runnable.String_Copy
  fullName: BMVE.Core.Runnable.String_Copy
- uid: BMVE.Core.Runnable.String_Format*
  commentId: Overload:BMVE.Core.Runnable.String_Format
  name: String_Format
  nameWithType: Runnable.String_Format
  fullName: BMVE.Core.Runnable.String_Format
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BMVE.Core.Runnable.System_Sleep*
  commentId: Overload:BMVE.Core.Runnable.System_Sleep
  name: System_Sleep
  nameWithType: Runnable.System_Sleep
  fullName: BMVE.Core.Runnable.System_Sleep
- uid: BMVE.Core.Runnable.System_GetEnvironmentArguments*
  commentId: Overload:BMVE.Core.Runnable.System_GetEnvironmentArguments
  name: System_GetEnvironmentArguments
  nameWithType: Runnable.System_GetEnvironmentArguments
  fullName: BMVE.Core.Runnable.System_GetEnvironmentArguments
- uid: BMVE.Core.Runnable.System_GetMachineName*
  commentId: Overload:BMVE.Core.Runnable.System_GetMachineName
  name: System_GetMachineName
  nameWithType: Runnable.System_GetMachineName
  fullName: BMVE.Core.Runnable.System_GetMachineName
- uid: BMVE.Core.Runnable.System_GetOSVersion*
  commentId: Overload:BMVE.Core.Runnable.System_GetOSVersion
  name: System_GetOSVersion
  nameWithType: Runnable.System_GetOSVersion
  fullName: BMVE.Core.Runnable.System_GetOSVersion
- uid: BMVE.Core.Runnable.System_GetProcessorCount*
  commentId: Overload:BMVE.Core.Runnable.System_GetProcessorCount
  name: System_GetProcessorCount
  nameWithType: Runnable.System_GetProcessorCount
  fullName: BMVE.Core.Runnable.System_GetProcessorCount
- uid: BMVE.Core.Runnable.System_GetSystemPageSize*
  commentId: Overload:BMVE.Core.Runnable.System_GetSystemPageSize
  name: System_GetSystemPageSize
  nameWithType: Runnable.System_GetSystemPageSize
  fullName: BMVE.Core.Runnable.System_GetSystemPageSize
- uid: BMVE.Core.Runnable.System_GetSystemDirectory*
  commentId: Overload:BMVE.Core.Runnable.System_GetSystemDirectory
  name: System_GetSystemDirectory
  nameWithType: Runnable.System_GetSystemDirectory
  fullName: BMVE.Core.Runnable.System_GetSystemDirectory
- uid: BMVE.Core.Runnable.System_GetUserDomainName*
  commentId: Overload:BMVE.Core.Runnable.System_GetUserDomainName
  name: System_GetUserDomainName
  nameWithType: Runnable.System_GetUserDomainName
  fullName: BMVE.Core.Runnable.System_GetUserDomainName
- uid: BMVE.Core.Runnable.System_GetUserName*
  commentId: Overload:BMVE.Core.Runnable.System_GetUserName
  name: System_GetUserName
  nameWithType: Runnable.System_GetUserName
  fullName: BMVE.Core.Runnable.System_GetUserName
- uid: BMVE.Core.Runnable.System_GetWorkingMemorySet*
  commentId: Overload:BMVE.Core.Runnable.System_GetWorkingMemorySet
  name: System_GetWorkingMemorySet
  nameWithType: Runnable.System_GetWorkingMemorySet
  fullName: BMVE.Core.Runnable.System_GetWorkingMemorySet
- uid: BMVE.Core.Runnable.System_Version*
  commentId: Overload:BMVE.Core.Runnable.System_Version
  name: System_Version
  nameWithType: Runnable.System_Version
  fullName: BMVE.Core.Runnable.System_Version
- uid: BMVE.Core.Runnable.Text_SetFont*
  commentId: Overload:BMVE.Core.Runnable.Text_SetFont
  name: Text_SetFont
  nameWithType: Runnable.Text_SetFont
  fullName: BMVE.Core.Runnable.Text_SetFont
- uid: BMVE.Core.Runnable.Text_SetFontSize*
  commentId: Overload:BMVE.Core.Runnable.Text_SetFontSize
  name: Text_SetFontSize
  nameWithType: Runnable.Text_SetFontSize
  fullName: BMVE.Core.Runnable.Text_SetFontSize
- uid: BMVE.Core.Runnable.Text_SetFontNormal*
  commentId: Overload:BMVE.Core.Runnable.Text_SetFontNormal
  name: Text_SetFontNormal
  nameWithType: Runnable.Text_SetFontNormal
  fullName: BMVE.Core.Runnable.Text_SetFontNormal
- uid: BMVE.Core.Runnable.Text_SetFontBold*
  commentId: Overload:BMVE.Core.Runnable.Text_SetFontBold
  name: Text_SetFontBold
  nameWithType: Runnable.Text_SetFontBold
  fullName: BMVE.Core.Runnable.Text_SetFontBold
- uid: BMVE.Core.Runnable.Text_SetFontItalic*
  commentId: Overload:BMVE.Core.Runnable.Text_SetFontItalic
  name: Text_SetFontItalic
  nameWithType: Runnable.Text_SetFontItalic
  fullName: BMVE.Core.Runnable.Text_SetFontItalic
- uid: BMVE.Core.Runnable.Text_SetFontBoldItalic*
  commentId: Overload:BMVE.Core.Runnable.Text_SetFontBoldItalic
  name: Text_SetFontBoldItalic
  nameWithType: Runnable.Text_SetFontBoldItalic
  fullName: BMVE.Core.Runnable.Text_SetFontBoldItalic
- uid: BMVE.Core.Runnable.Text_GetFont*
  commentId: Overload:BMVE.Core.Runnable.Text_GetFont
  name: Text_GetFont
  nameWithType: Runnable.Text_GetFont
  fullName: BMVE.Core.Runnable.Text_GetFont
- uid: BMVE.Core.Runnable.Text_GetFontSize*
  commentId: Overload:BMVE.Core.Runnable.Text_GetFontSize
  name: Text_GetFontSize
  nameWithType: Runnable.Text_GetFontSize
  fullName: BMVE.Core.Runnable.Text_GetFontSize
- uid: BMVE.Core.Runnable.Thread_Create*
  commentId: Overload:BMVE.Core.Runnable.Thread_Create
  name: Thread_Create
  nameWithType: Runnable.Thread_Create
  fullName: BMVE.Core.Runnable.Thread_Create
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BMVE.Core.Runnable.Thread_Pause*
  commentId: Overload:BMVE.Core.Runnable.Thread_Pause
  name: Thread_Pause
  nameWithType: Runnable.Thread_Pause
  fullName: BMVE.Core.Runnable.Thread_Pause
- uid: BMVE.Core.Runnable.Thread_Continue*
  commentId: Overload:BMVE.Core.Runnable.Thread_Continue
  name: Thread_Continue
  nameWithType: Runnable.Thread_Continue
  fullName: BMVE.Core.Runnable.Thread_Continue
- uid: BMVE.Core.Runnable.Thread_Unlock(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Unlock(System.Int32)
  isExternal: true
- uid: BMVE.Core.Runnable.Thread_Lock*
  commentId: Overload:BMVE.Core.Runnable.Thread_Lock
  name: Thread_Lock
  nameWithType: Runnable.Thread_Lock
  fullName: BMVE.Core.Runnable.Thread_Lock
- uid: BMVE.Core.Runnable.Thread_Lock(System.Int32)
  commentId: M:BMVE.Core.Runnable.Thread_Lock(System.Int32)
  isExternal: true
- uid: BMVE.Core.Runnable.Thread_Unlock*
  commentId: Overload:BMVE.Core.Runnable.Thread_Unlock
  name: Thread_Unlock
  nameWithType: Runnable.Thread_Unlock
  fullName: BMVE.Core.Runnable.Thread_Unlock
- uid: BMVE.Core.Runnable.Thread_Stop*
  commentId: Overload:BMVE.Core.Runnable.Thread_Stop
  name: Thread_Stop
  nameWithType: Runnable.Thread_Stop
  fullName: BMVE.Core.Runnable.Thread_Stop
- uid: BMVE.Core.Runnable.WebServer_Start*
  commentId: Overload:BMVE.Core.Runnable.WebServer_Start
  name: WebServer_Start
  nameWithType: Runnable.WebServer_Start
  fullName: BMVE.Core.Runnable.WebServer_Start
- uid: BMVE.Core.Runnable.WebServer_NextRequest*
  commentId: Overload:BMVE.Core.Runnable.WebServer_NextRequest
  name: WebServer_NextRequest
  nameWithType: Runnable.WebServer_NextRequest
  fullName: BMVE.Core.Runnable.WebServer_NextRequest
- uid: BMVE.Core.Runnable.WebServer_GetRequestUrl*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestUrl
  name: WebServer_GetRequestUrl
  nameWithType: Runnable.WebServer_GetRequestUrl
  fullName: BMVE.Core.Runnable.WebServer_GetRequestUrl
- uid: BMVE.Core.Runnable.WebServer_GetRequestFullUrl*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestFullUrl
  name: WebServer_GetRequestFullUrl
  nameWithType: Runnable.WebServer_GetRequestFullUrl
  fullName: BMVE.Core.Runnable.WebServer_GetRequestFullUrl
- uid: BMVE.Core.Runnable.WebServer_GetRequestMethod*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestMethod
  name: WebServer_GetRequestMethod
  nameWithType: Runnable.WebServer_GetRequestMethod
  fullName: BMVE.Core.Runnable.WebServer_GetRequestMethod
- uid: BMVE.Core.Runnable.WebServer_GetRequestUserAgent*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestUserAgent
  name: WebServer_GetRequestUserAgent
  nameWithType: Runnable.WebServer_GetRequestUserAgent
  fullName: BMVE.Core.Runnable.WebServer_GetRequestUserAgent
- uid: BMVE.Core.Runnable.WebServer_GetRequestContentType*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestContentType
  name: WebServer_GetRequestContentType
  nameWithType: Runnable.WebServer_GetRequestContentType
  fullName: BMVE.Core.Runnable.WebServer_GetRequestContentType
- uid: BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys
  name: WebServer_GetRequestQueryStringKeys
  nameWithType: Runnable.WebServer_GetRequestQueryStringKeys
  fullName: BMVE.Core.Runnable.WebServer_GetRequestQueryStringKeys
- uid: BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue
  name: WebServer_GetRequestQueryStringValue
  nameWithType: Runnable.WebServer_GetRequestQueryStringValue
  fullName: BMVE.Core.Runnable.WebServer_GetRequestQueryStringValue
- uid: BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys
  name: WebServer_GetRequestFormDataKeys
  nameWithType: Runnable.WebServer_GetRequestFormDataKeys
  fullName: BMVE.Core.Runnable.WebServer_GetRequestFormDataKeys
- uid: BMVE.Core.Runnable.WebServer_GetRequestFormDataValue*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetRequestFormDataValue
  name: WebServer_GetRequestFormDataValue
  nameWithType: Runnable.WebServer_GetRequestFormDataValue
  fullName: BMVE.Core.Runnable.WebServer_GetRequestFormDataValue
- uid: BMVE.Core.Runnable.WebServer_ReadRequestBody*
  commentId: Overload:BMVE.Core.Runnable.WebServer_ReadRequestBody
  name: WebServer_ReadRequestBody
  nameWithType: Runnable.WebServer_ReadRequestBody
  fullName: BMVE.Core.Runnable.WebServer_ReadRequestBody
- uid: BMVE.Core.Runnable.WebServer_ReadRequestBodyString*
  commentId: Overload:BMVE.Core.Runnable.WebServer_ReadRequestBodyString
  name: WebServer_ReadRequestBodyString
  nameWithType: Runnable.WebServer_ReadRequestBodyString
  fullName: BMVE.Core.Runnable.WebServer_ReadRequestBodyString
- uid: BMVE.Core.Runnable.WebServer_Write*
  commentId: Overload:BMVE.Core.Runnable.WebServer_Write
  name: WebServer_Write
  nameWithType: Runnable.WebServer_Write
  fullName: BMVE.Core.Runnable.WebServer_Write
- uid: BMVE.Core.Runnable.WebServer_WriteLine*
  commentId: Overload:BMVE.Core.Runnable.WebServer_WriteLine
  name: WebServer_WriteLine
  nameWithType: Runnable.WebServer_WriteLine
  fullName: BMVE.Core.Runnable.WebServer_WriteLine
- uid: BMVE.Core.Runnable.WebServer_SendResponse*
  commentId: Overload:BMVE.Core.Runnable.WebServer_SendResponse
  name: WebServer_SendResponse
  nameWithType: Runnable.WebServer_SendResponse
  fullName: BMVE.Core.Runnable.WebServer_SendResponse
- uid: BMVE.Core.Runnable.WebServer_SetResponseContentType*
  commentId: Overload:BMVE.Core.Runnable.WebServer_SetResponseContentType
  name: WebServer_SetResponseContentType
  nameWithType: Runnable.WebServer_SetResponseContentType
  fullName: BMVE.Core.Runnable.WebServer_SetResponseContentType
- uid: BMVE.Core.Runnable.WebServer_GetResponseContentType*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetResponseContentType
  name: WebServer_GetResponseContentType
  nameWithType: Runnable.WebServer_GetResponseContentType
  fullName: BMVE.Core.Runnable.WebServer_GetResponseContentType
- uid: BMVE.Core.Runnable.WebServer_SetResponseStatusCode*
  commentId: Overload:BMVE.Core.Runnable.WebServer_SetResponseStatusCode
  name: WebServer_SetResponseStatusCode
  nameWithType: Runnable.WebServer_SetResponseStatusCode
  fullName: BMVE.Core.Runnable.WebServer_SetResponseStatusCode
- uid: BMVE.Core.Runnable.WebServer_GetResponseStatusCode*
  commentId: Overload:BMVE.Core.Runnable.WebServer_GetResponseStatusCode
  name: WebServer_GetResponseStatusCode
  nameWithType: Runnable.WebServer_GetResponseStatusCode
  fullName: BMVE.Core.Runnable.WebServer_GetResponseStatusCode
- uid: BMVE.Core.Runnable.WebServer_UrlEncode*
  commentId: Overload:BMVE.Core.Runnable.WebServer_UrlEncode
  name: WebServer_UrlEncode
  nameWithType: Runnable.WebServer_UrlEncode
  fullName: BMVE.Core.Runnable.WebServer_UrlEncode
- uid: BMVE.Core.Runnable.WebServer_UrlDecode*
  commentId: Overload:BMVE.Core.Runnable.WebServer_UrlDecode
  name: WebServer_UrlDecode
  nameWithType: Runnable.WebServer_UrlDecode
  fullName: BMVE.Core.Runnable.WebServer_UrlDecode
- uid: BMVE.Core.Runnable.Main*
  commentId: Overload:BMVE.Core.Runnable.Main
  name: Main
  nameWithType: Runnable.Main
  fullName: BMVE.Core.Runnable.Main
- uid: BMVE.Core.Runnable.Console_WriteLine*
  commentId: Overload:BMVE.Core.Runnable.Console_WriteLine
  name: Console_WriteLine
  nameWithType: Runnable.Console_WriteLine
  fullName: BMVE.Core.Runnable.Console_WriteLine
- uid: BMVE.Core.Runnable.Console_ReadLine*
  commentId: Overload:BMVE.Core.Runnable.Console_ReadLine
  name: Console_ReadLine
  nameWithType: Runnable.Console_ReadLine
  fullName: BMVE.Core.Runnable.Console_ReadLine
- uid: BMVE.Core.Runnable.Console_ReadInt*
  commentId: Overload:BMVE.Core.Runnable.Console_ReadInt
  name: Console_ReadInt
  nameWithType: Runnable.Console_ReadInt
  fullName: BMVE.Core.Runnable.Console_ReadInt
- uid: BMVE.Core.Runnable.Console_ReadDouble*
  commentId: Overload:BMVE.Core.Runnable.Console_ReadDouble
  name: Console_ReadDouble
  nameWithType: Runnable.Console_ReadDouble
  fullName: BMVE.Core.Runnable.Console_ReadDouble
- uid: BMVE.Core.Runnable.Console_ReadBool*
  commentId: Overload:BMVE.Core.Runnable.Console_ReadBool
  name: Console_ReadBool
  nameWithType: Runnable.Console_ReadBool
  fullName: BMVE.Core.Runnable.Console_ReadBool
- uid: BMVE.Core.Runnable.Database_OpenSqlServerConnection*
  commentId: Overload:BMVE.Core.Runnable.Database_OpenSqlServerConnection
  name: Database_OpenSqlServerConnection
  nameWithType: Runnable.Database_OpenSqlServerConnection
  fullName: BMVE.Core.Runnable.Database_OpenSqlServerConnection
- uid: BMVE.Core.Runnable.Database_OpenMySqlConnection*
  commentId: Overload:BMVE.Core.Runnable.Database_OpenMySqlConnection
  name: Database_OpenMySqlConnection
  nameWithType: Runnable.Database_OpenMySqlConnection
  fullName: BMVE.Core.Runnable.Database_OpenMySqlConnection
- uid: BMVE.Core.Runnable.Database_OpenPostgreSqlConnection*
  commentId: Overload:BMVE.Core.Runnable.Database_OpenPostgreSqlConnection
  name: Database_OpenPostgreSqlConnection
  nameWithType: Runnable.Database_OpenPostgreSqlConnection
  fullName: BMVE.Core.Runnable.Database_OpenPostgreSqlConnection
- uid: BMVE.Core.Runnable.Database_OpenOracleDbConnection*
  commentId: Overload:BMVE.Core.Runnable.Database_OpenOracleDbConnection
  name: Database_OpenOracleDbConnection
  nameWithType: Runnable.Database_OpenOracleDbConnection
  fullName: BMVE.Core.Runnable.Database_OpenOracleDbConnection
- uid: BMVE.Core.Runnable.Database_OpenSqliteConnection*
  commentId: Overload:BMVE.Core.Runnable.Database_OpenSqliteConnection
  name: Database_OpenSqliteConnection
  nameWithType: Runnable.Database_OpenSqliteConnection
  fullName: BMVE.Core.Runnable.Database_OpenSqliteConnection
- uid: BMVE.Core.Runnable.Database_IsConnectionOpen*
  commentId: Overload:BMVE.Core.Runnable.Database_IsConnectionOpen
  name: Database_IsConnectionOpen
  nameWithType: Runnable.Database_IsConnectionOpen
  fullName: BMVE.Core.Runnable.Database_IsConnectionOpen
- uid: BMVE.Core.Runnable.Database_ExecuteNonQuery*
  commentId: Overload:BMVE.Core.Runnable.Database_ExecuteNonQuery
  name: Database_ExecuteNonQuery
  nameWithType: Runnable.Database_ExecuteNonQuery
  fullName: BMVE.Core.Runnable.Database_ExecuteNonQuery
- uid: BMVE.Core.Runnable.Database_ExecuteScalar*
  commentId: Overload:BMVE.Core.Runnable.Database_ExecuteScalar
  name: Database_ExecuteScalar
  nameWithType: Runnable.Database_ExecuteScalar
  fullName: BMVE.Core.Runnable.Database_ExecuteScalar
- uid: BMVE.Core.Runnable.Database_ExecuteReader*
  commentId: Overload:BMVE.Core.Runnable.Database_ExecuteReader
  name: Database_ExecuteReader
  nameWithType: Runnable.Database_ExecuteReader
  fullName: BMVE.Core.Runnable.Database_ExecuteReader
- uid: BMVE.Core.Runnable.Database_BeginTransaction*
  commentId: Overload:BMVE.Core.Runnable.Database_BeginTransaction
  name: Database_BeginTransaction
  nameWithType: Runnable.Database_BeginTransaction
  fullName: BMVE.Core.Runnable.Database_BeginTransaction
- uid: BMVE.Core.Runnable.Database_CommitTransaction*
  commentId: Overload:BMVE.Core.Runnable.Database_CommitTransaction
  name: Database_CommitTransaction
  nameWithType: Runnable.Database_CommitTransaction
  fullName: BMVE.Core.Runnable.Database_CommitTransaction
- uid: BMVE.Core.Runnable.Database_RollbackTransaction*
  commentId: Overload:BMVE.Core.Runnable.Database_RollbackTransaction
  name: Database_RollbackTransaction
  nameWithType: Runnable.Database_RollbackTransaction
  fullName: BMVE.Core.Runnable.Database_RollbackTransaction
- uid: BMVE.Core.Runnable.Database_CloseConnection*
  commentId: Overload:BMVE.Core.Runnable.Database_CloseConnection
  name: Database_CloseConnection
  nameWithType: Runnable.Database_CloseConnection
  fullName: BMVE.Core.Runnable.Database_CloseConnection
